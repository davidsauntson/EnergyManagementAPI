<?xml version="1.0" encoding="utf-8"?>
<pex id="{f4f720b8-f865-4dfe-be32-20fdf794c8c7}" creationTime="2012-09-03 11:32:04Z" configuration="emAPI.Controllers!\ApportionmentManagerTest!\setupDatedChunksForApportionToPeriod!" product="emAPI" created="2012-09-03 11:32:04Z" pexVersion="0.94.51006.1" xml="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\reports\120903.123204.3988.pex\report.per" html="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\reports\120903.123204.3988.pex\report.html"><environment commandLine="&quot;C:\Program Files\Microsoft Pex\bin\Microsoft.Pex.exe&quot; &quot;C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.Tests.dll&quot; /methodnamefilter:setupDatedChunksForApportionToPeriod! /namespacefilter:emAPI.Controllers! /typefilter:ApportionmentManagerTest! /x64failsilently /clrversion:v4.0.30319 /referencedprojectassemblies:emAPI /donotopenreport /reportlevel:Xml /reportrootpath:&quot;C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\reports&quot; /testframework:VisualStudioUnitTest /testlanguage:cs /testprojectfile:&quot;C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\emAPI.Tests.csproj&quot; /testprojectnotupdate /testprojectskip" machineName="WIN-5QGLTLJJF9P" osVersion="Microsoft Windows NT 6.1.7601 Service Pack 1" processorCount="4" clrVersion="4.0.30319.269" bitness="x86" user="David Sauntson"><envVars><envVar name="HOMEPATH" value="\Users\David Sauntson"/>
<envVar name="PUBLIC" value="C:\Users\Public"/>
<envVar name="COMPUTERNAME" value="WIN-5QGLTLJJF9P"/>
<envVar name="CLRMONITOR_INJECT_TYPES" value=""/>
<envVar name="COMPLUS_ProfAPI_ProfilerCompatibilitySetting" value="EnableV2Profiler"/>
<envVar name="PROCESSOR_REVISION" value="3a09"/>
<envVar name="CLRMONITOR_INSTRUMENT_TYPES_EXCLUSIONS" value=""/>
<envVar name="PATHEXT" value=".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC"/>
<envVar name="COMPLUS_DEFAULTVERSION" value="v4.0.30319"/>
<envVar name="CLRMONITOR_CLSID" value="{21bbb412-71ac-41f9-a377-48529a4859cf}"/>
<envVar name="TMP" value="C:\Users\DAVIDS~1\AppData\Local\Temp"/>
<envVar name="TEMP" value="C:\Users\DAVIDS~1\AppData\Local\Temp"/>
<envVar name="LOCALAPPDATA" value="C:\Users\David Sauntson\AppData\Local"/>
<envVar name="CLRMONITOR_INSTRUMENT_NAMESPACES_EXCLUSIONS" value=""/>
<envVar name="CLRMONITOR_PROTECT_TYPES" value="Microsoft.FSharp.Text.Printf,Microsoft.FSharp.Text.PrintfImpl"/>
<envVar name="CLRMONITOR_INJECT_ASSEMBLIES" value=""/>
<envVar name="ProgramData" value="C:\ProgramData"/>
<envVar name="CLRMONITOR_INITIALIZED" value="0xe"/>
<envVar name="USERDOMAIN" value="WIN-5QGLTLJJF9P"/>
<envVar name="windir" value="C:\Windows"/>
<envVar name="CLRMONITOR_ERASE_FINALIZER_TYPES" value=""/>
<envVar name="CLRMONITOR_INJECT_NAMESPACES" value=""/>
<envVar name="PROCESSOR_IDENTIFIER" value="x86 Family 6 Model 58 Stepping 9, GenuineIntel"/>
<envVar name="windows_tracing_flags" value="3"/>
<envVar name="Path" value="C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;c:\Program Files\Microsoft SQL Server\100\Tools\Binn\;c:\Program Files\Microsoft SQL Server\100\DTS\Binn\;c:\Program Files\Microsoft ASP.NET\ASP.NET Web Pages\v1.0\;C:\Program Files\doxygen\bin;C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\packages\EntityFramework.4.3.1\tools;C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\packages\SilverlightToolkitWP.4.2012.6.25\tools"/>
<envVar name="PSModulePath" value="\\vmware-host\Shared Folders\Documents\WindowsPowerShell\Modules;C:\Windows\system32\WindowsPowerShell\v1.0\Modules\"/>
<envVar name="PROCESSOR_LEVEL" value="6"/>
<envVar name="CommonProgramFiles" value="C:\Program Files\Common Files"/>
<envVar name="CLRMONITOR_FLAGS" value=""/>
<envVar name="pex_instrumentation" value="1"/>
<envVar name="SESSIONNAME" value="Console"/>
<envVar name="CLRMONITOR_INSTRUMENT_TYPES" value="System.Array,System.Array+ArrayEnumerator,System.Array+FunctorComparer`1,System.Array+SZArrayEnumerator,System.Array+SorterGenericArray,System.Array+SorterObjectArray,System.Boolean,System.Byte,System.Char,System.CharEnumerator,System.ComponentModel.Component,System.ComponentModel.Container,System.ComponentModel.Container+Site,System.Convert,System.Currency,System.DateTime,System.Decimal,System.Diagnostics.Assert,System.Double,System.Globalization.CharUnicodeInfo,System.Globalization.CultureTableRecord,System.Globalization.TextInfo,System.Guid,System.IO.MemoryStream,System.IO.Stream,System.IO.StreamReader,System.IO.StreamWriter,System.IO.StringReader,System.IO.StringWriter,System.Int16,System.Int32,System.Int64,System.Lazy`1,System.Lazy`1+Boxed,System.Lazy`1+LazyInternalExceptionHolder,System.Linq.Expressions.ExpressionCompiler,System.Math,System.Nullable,System.Nullable`1,System.OrdinalComparer,System.SByte,System.SZArrayHelper,System.SZArrayHelper+SZGenericArrayEnumerator`1,System.Single,System.String,System.StringComparer,System.Text.ASCIIEncoding,System.Text.DecoderNLS,System.Text.Encoding,System.Text.UTF8Encoding,System.TimeSpan,System.Tuple,System.Tuple`1,System.Tuple`2,System.Tuple`3,System.Tuple`4,System.Tuple`5,System.Tuple`6,System.Tuple`7,System.Tuple`8,System.UInt16,System.UInt32,System.UInt64,System.Xml.XmlTextWriter,System.Xml.XmlTextWriter+Namespace,System.Xml.XmlTextWriter+NamespaceState,System.Xml.XmlTextWriter+SpecialAttr,System.Xml.XmlTextWriter+State,System.Xml.XmlTextWriter+TagInfo,System.Xml.XmlTextWriter+Token,System.Xml.XmlWriter,__Box`1,__SzArrayHelper`1"/>
<envVar name="VisualStudioDir" value="\\vmware-host\Shared Folders\Documents\Visual Studio 2010"/>
<envVar name="ProgramFiles" value="C:\Program Files"/>
<envVar name="XNAGSShared" value="C:\Program Files\Common Files\Microsoft Shared\XNA\"/>
<envVar name="CLRMONITOR_ERASE_CCTOR_TYPES" value=""/>
<envVar name="FP_NO_HOST_CHECK" value="NO"/>
<envVar name="pex_clientid" value="pex2584_1"/>
<envVar name="NUMBER_OF_PROCESSORS" value="4"/>
<envVar name="SystemRoot" value="C:\Windows"/>
<envVar name="CLRMONITOR_INSTRUMENT_ATTRIBUTE" value="Microsoft.Moles.Framework.Moles.MolesInstrumentAttribute"/>
<envVar name="CLRMONITOR_PROTECT_ALL_CCTORS" value="1"/>
<envVar name="XNAGSv4" value="C:\Program Files\Microsoft XNA\XNA Game Studio\v4.0\"/>
<envVar name="LOGONSERVER" value="\\WIN-5QGLTLJJF9P"/>
<envVar name="USERPROFILE" value="C:\Users\David Sauntson"/>
<envVar name="CLRMONITOR_SUBSTITUTIONS" value="C:\Windows\assembly\GAC_MSIL\Microsoft.ExtendedReflection\0.94.0.0__31bf3856ad364e35\Microsoft.ExtendedReflection.dll,C:\Windows\assembly\GAC_MSIL\Microsoft.Pex.Linq\0.94.0.0__31bf3856ad364e35\Microsoft.Pex.Linq.dll"/>
<envVar name="CLRMONITOR_INSTRUMENT_ASSEMBLIES_EXCLUSIONS" value=""/>
<envVar name="APPDATA" value="C:\Users\David Sauntson\AppData\Roaming"/>
<envVar name="HOMEDRIVE" value="C:"/>
<envVar name="PSExecutionPolicyPreference" value="RemoteSigned"/>
<envVar name="windows_tracing_logfile" value="C:\BVTBin\Tests\installpackage\csilogfile.log"/>
<envVar name="ComSpec" value="C:\Windows\system32\cmd.exe"/>
<envVar name="VS100COMNTOOLS" value="C:\Program Files\Microsoft Visual Studio 10.0\Common7\Tools\"/>
<envVar name="USERNAME" value="David Sauntson"/>
<envVar name="COR_PROFILER" value="{21bbb412-71ac-41f9-a377-48529a4859cf}"/>
<envVar name="PROCESSOR_ARCHITECTURE" value="x86"/>
<envVar name="pex_server_channel" value="pex2584"/>
<envVar name="OS" value="Windows_NT"/>
<envVar name="CLRMONITOR_INSTRUMENT_NAMESPACES" value="System.Collections,System.Collections.Generic,System.Collections.ObjectModel,System.Collections.Specialized,System.Diagnostics.Contracts"/>
<envVar name="SystemDrive" value="C:"/>
<envVar name="CLRMONITOR_INSTRUMENT_ASSEMBLIES" value="EntityFramework,FSharp.Core,FSharp.PowerPack,Microsoft.Contracts,Microsoft.VisualBasic,Microsoft.VisualStudio.QualityTools.UnitTestFramework,Newtonsoft.Json,System,System.Core,System.ServiceModel,System.Web,emAPI,emAPI.Tests,emAPI_ClassLibrary"/>
<envVar name="ALLUSERSPROFILE" value="C:\ProgramData"/>
</envVars>
</environment>
<settings/>
<reflection><existingTest method="setupDatedChunksForApportionToPeriod50" type="emAPI.Controllers.ApportionmentManagerTest" token="6000004" generated="true"/>
<existingTest method="setupDatedChunksForApportionToPeriod177" type="emAPI.Controllers.ApportionmentManagerTest" token="6000006" generated="true"/>
<existingTest method="setupDatedChunksForApportionToPeriod253" type="emAPI.Controllers.ApportionmentManagerTest" token="6000009" generated="true"/>
<existingTest method="setupDatedChunksForApportionToPeriod330" type="emAPI.Controllers.ApportionmentManagerTest" token="6000008" generated="true"/>
<existingTest method="setupDatedChunksForApportionToPeriod378" type="emAPI.Controllers.ApportionmentManagerTest" token="600000c" generated="true"/>
<existingTest method="setupDatedChunksForApportionToPeriod379" type="emAPI.Controllers.ApportionmentManagerTest" token="6000005" generated="true"/>
<existingTest method="setupDatedChunksForApportionToPeriod462" type="emAPI.Controllers.ApportionmentManagerTest" token="600000a" generated="true"/>
<existingTest method="setupDatedChunksForApportionToPeriod485" type="emAPI.Controllers.ApportionmentManagerTest" token="600000b" generated="true"/>
<existingTest method="setupDatedChunksForApportionToPeriod829" type="emAPI.Controllers.ApportionmentManagerTest" token="6000003" generated="true"/>
<existingTest method="setupDatedChunksForApportionToPeriod937" type="emAPI.Controllers.ApportionmentManagerTest" token="6000007" generated="true"/>
<existingTest method="setupDatedChunksForApportionToPeriodThrowsArgumentOutOfRangeException158" type="emAPI.Controllers.ApportionmentManagerTest" token="6000002" generated="true" failure="true" exceptionType="System.ArgumentOutOfRangeException"/>
</reflection>
<assembly name="emAPI.Tests" version="0.0.0.0" fileVersion="0.0.0.0" fullName="emAPI.Tests, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.Tests.dll" fileName="emAPI.Tests.dll"><settings testFramework="VisualStudioUnitTest" testLanguage="cs"/>
<fixture name="ApportionmentManagerTest" type="emAPI.Controllers.ApportionmentManagerTest" typeName="ApportionmentManagerTest" token="2000002" href="fix\emAPI.Tests.100.html"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
<settings typeUnderTest="emAPI.Controllers.ApportionmentManager"/>
<exploration shortName="setupDatedChunksForApportionToPeriod(ApportionmentManager, DateTime, DateTime, AppotionmentPeriod)" fullName="emAPI.Controllers.ApportionmentManagerTest.setupDatedChunksForApportionToPeriod(ApportionmentManager, DateTime, DateTime, AppotionmentPeriod)"><method><definition assemblyName="emAPI.Tests" name="setupDatedChunksForApportionToPeriod" token="6000001"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="startDate" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="endDate" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="interval" position="4"><type spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="AppotionmentPeriod" token="2000011" namespace="emAPI.ClassLibrary"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</definition>
</method>
<settings maxBranches="20000"/>
<memberUnderTest assemblyName="emAPI" name="setupDatedChunksForApportionToPeriod" token="60001f0"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="startDate" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="endDate" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="interval" position="3"><type spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="AppotionmentPeriod" token="2000011" namespace="emAPI.ClassLibrary"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</memberUnderTest>
<explorable title="guessed how to create emAPI.Controllers.ApportionmentManager" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</explorableType>
<testAssemblyName name="emAPI.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\ApportionmentManagerFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for emAPI.Controllers.ApportionmentManager instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="emAPI" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.dll"/>
<typeDefinition assemblyName="emAPI.Tests" name="ApportionmentManagerFactory" token="ffffffff" namespace="emAPI.Controllers"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="emAPI.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for emAPI.Controllers.ApportionmentManager instances</summary>
]]></doc>
<reference name="emAPI" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.dll"/>
<reference name="mscorlib"/>
<methodDefinition assemblyName="emAPI.Tests" name="Create" static="true"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerFactory" token="ffffffff" namespace="emAPI.Controllers"/>
<resultType spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="emAPI.Tests" name="ApportionmentManagerFactory" token="ffffffff" namespace="emAPI.Controllers"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="emAPI.Tests" name="Create" static="true"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerFactory" token="ffffffff" namespace="emAPI.Controllers"/>
<resultType spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<log level="message" time="2012-09-03 11:32:06Z" category="symbols" message="could not load symbols for C:\Program Files\Microsoft Pex\bin\Microsoft.Pex.exe"/>
<log level="message" time="2012-09-03 11:32:06Z" category="symbols" message="search path: ;"/>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.09"/>
<log level="message" time="2012-09-03 11:32:07Z" category="symbols" message="could not load symbols for C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<log level="message" time="2012-09-03 11:32:07Z" category="symbols" message="could not load symbols for C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Core\v4.0_4.0.0.0__b77a5c561934e089\System.Core.dll"/>
<log level="message" time="2012-09-03 11:32:07Z" category="symbols" message="could not load symbols for C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\EntityFramework.dll"/>
<uninstrumented methodDisplayName="System.Void System.Text.EncoderReplacementFallback..ctor(System.String replacement)" declaringTypeDisplayName="System.Text.EncoderReplacementFallback" methodShortDisplayName="EncoderReplacementFallback..ctor(String)" wikiTopic="Uninstrumented Method Called"><method><definition assemblyName="mscorlib" name=".ctor" token="600343c"><declaringType assemblyName="mscorlib" name="EncoderReplacementFallback" token="200051d" namespace="System.Text"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="EncoderReplacementFallback" token="200051d" namespace="System.Text"/>
</type>
</parameter>
<parameter name="replacement" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
</definition>
</method>
<stackTrace><frame value="  at Char.IsSurrogate(String, Int32)" method="Char.IsSurrogate(String, Int32)" offset="0"><method assemblyName="mscorlib" name="IsSurrogate" static="true" token="60067ca"><declaringType assemblyName="mscorlib" valueType="true" name="Char" token="20000a1" namespace="System"/>
<parameter position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</resultType>
</method>
</frame>
<frame value="  at EncoderReplacementFallback..ctor(String)" method="EncoderReplacementFallback..ctor(String)" offset="26"><method assemblyName="mscorlib" name=".ctor" token="600343c"><declaringType assemblyName="mscorlib" name="EncoderReplacementFallback" token="200051d" namespace="System.Text"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="EncoderReplacementFallback" token="200051d" namespace="System.Text"/>
</type>
</parameter>
<parameter name="replacement" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at UTF8Encoding.SetDefaultFallbacks()" method="UTF8Encoding.SetDefaultFallbacks()" offset="37"><method assemblyName="mscorlib" name="SetDefaultFallbacks" token="6003505"><declaringType assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at Encoding..ctor(Int32)" method="Encoding..ctor(Int32)" offset="36"><method assemblyName="mscorlib" name=".ctor" token="6006b05"><declaringType assemblyName="mscorlib" name="Encoding" token="20004fc" namespace="System.Text"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="Encoding" token="20004fc" namespace="System.Text"/>
</type>
</parameter>
<parameter position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at UTF8Encoding..ctor(Boolean, Boolean)" method="UTF8Encoding..ctor(Boolean, Boolean)" offset="6"><method assemblyName="mscorlib" name=".ctor" token="6003504"><declaringType assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
</type>
</parameter>
<parameter name="encoderShouldEmitUTF8Identifier" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
<parameter name="throwOnInvalidBytes" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at CustomAttributeBuilder.InitCustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[], FieldInfo[], Object[])" method="CustomAttributeBuilder.InitCustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[], FieldInfo[], Object[])" offset="435"><method assemblyName="mscorlib" name="InitCustomAttributeBuilder" token="60057f7"><declaringType assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
</type>
</parameter>
<parameter name="con" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ConstructorInfo" token="200045a" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="constructorArgs" position="2"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter name="namedProperties" position="3"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="PropertyInfo" token="200045e" namespace="System.Reflection"/>
</elementType>
</type>
</parameter>
<parameter name="propertyValues" position="4"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter name="namedFields" position="5"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="FieldInfo" token="200045c" namespace="System.Reflection"/>
</elementType>
</type>
</parameter>
<parameter name="fieldValues" position="6"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
</method>
</frame>
<frame value="  at CustomAttributeBuilder..ctor(ConstructorInfo, Object[])" method="CustomAttributeBuilder..ctor(ConstructorInfo, Object[])" offset="38"><method assemblyName="mscorlib" name=".ctor" token="60057f2"><declaringType assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
</type>
</parameter>
<parameter name="con" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ConstructorInfo" token="200045a" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="constructorArgs" position="2"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
</method>
</frame>
<frame value="  at DynamicMethod.GetDynamicMethodsModule()" method="DynamicMethod.GetDynamicMethodsModule()" offset="96"><method assemblyName="mscorlib" name="GetDynamicMethodsModule" static="true" token="600567d"><declaringType assemblyName="mscorlib" name="DynamicMethod" token="200098a" namespace="System.Reflection.Emit"/>
<resultType spec="Class"><definition assemblyName="mscorlib" name="RuntimeModule" token="2000443" namespace="System.Reflection"/>
</resultType>
</method>
</frame>
<frame value="  at DynamicMethod.Init(String, MethodAttributes, CallingConventions, Type, Type[], Type, Module, Boolean, Boolean)" method="DynamicMethod.Init(String, MethodAttributes, CallingConventions, Type, Type[], Type, Module, Boolean, Boolean)" offset="288"><method assemblyName="mscorlib" name="Init" token="600567e"><declaringType assemblyName="mscorlib" name="DynamicMethod" token="200098a" namespace="System.Reflection.Emit"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="DynamicMethod" token="200098a" namespace="System.Reflection.Emit"/>
</type>
</parameter>
<parameter name="name" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="attributes" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="MethodAttributes" token="200043d" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="callingConvention" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="CallingConventions" token="2000406" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="returnType" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
<parameter name="signature" position="5"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter name="owner" position="6"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
<parameter name="m" position="7"><type spec="Class"><definition assemblyName="mscorlib" name="Module" token="2000442" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="skipVisibility" position="8"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
<parameter name="transparentMethod" position="9"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at LambdaCompiler..ctor(AnalyzedTree, LambdaExpression)" method="LambdaCompiler..ctor(AnalyzedTree, LambdaExpression)" offset="86"><method assemblyName="System.Core" name=".ctor" token="60014c8"><declaringType assemblyName="System.Core" name="LambdaCompiler" token="20002d0" namespace="System.Linq.Expressions.Compiler"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="System.Core" name="LambdaCompiler" token="20002d0" namespace="System.Linq.Expressions.Compiler"/>
</type>
</parameter>
<parameter name="tree" position="1"><type spec="Class"><definition assemblyName="System.Core" name="AnalyzedTree" token="20002b8" namespace="System.Linq.Expressions.Compiler"/>
</type>
</parameter>
<parameter name="lambda" position="2"><type spec="Class"><definition assemblyName="System.Core" name="LambdaExpression" token="200028e" namespace="System.Linq.Expressions"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at LambdaCompiler.Compile(LambdaExpression, DebugInfoGenerator)" method="LambdaCompiler.Compile(LambdaExpression, DebugInfoGenerator)" offset="17"><method assemblyName="System.Core" name="Compile" static="true" token="60014d0"><declaringType assemblyName="System.Core" name="LambdaCompiler" token="20002d0" namespace="System.Linq.Expressions.Compiler"/>
<parameter name="lambda" position="0"><type spec="Class"><definition assemblyName="System.Core" name="LambdaExpression" token="200028e" namespace="System.Linq.Expressions"/>
</type>
</parameter>
<parameter name="debugInfoGenerator" position="1"><type spec="Class"><definition assemblyName="System.Core" name="DebugInfoGenerator" token="20002c7" namespace="System.Runtime.CompilerServices"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Delegate" token="2000015" namespace="System"/>
</resultType>
</method>
</frame>
<frame value="  at Expression`1.Compile()" method="Expression`1.Compile()" offset="2"><method assemblyName="System.Core" name="Compile" token="60012d8"><declaringType assemblyName="System.Core" name="Expression`1" token="200028f" namespace="System.Linq.Expressions"><genericParameter value="TDelegate"/>
</declaringType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="System.Core" name="Expression`1" token="200028f" namespace="System.Linq.Expressions"><genericParameter value="TDelegate"/>
</definition>
<genericTypeArgument spec="GenericTypeParameter" index="0"/>
</type>
</parameter>
<resultType spec="GenericTypeParameter" index="0"/>
</method>
</frame>
<frame value="  at DbSetDiscoveryService.GetSets()" method="DbSetDiscoveryService.GetSets()" offset="398"><method assemblyName="EntityFramework" name="GetSets" token="6000c71"><declaringType assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Dictionary`2" token="2000354" namespace="System.Collections.Generic"><genericParameter value="TKey"/>
<genericParameter value="TValue"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</genericTypeArgument>
<genericTypeArgument spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</genericTypeArgument>
</genericTypeArgument>
</resultType>
</method>
</frame>
<frame value="  at DbSetDiscoveryService.InitializeSets()" method="DbSetDiscoveryService.InitializeSets()" offset="1"><method assemblyName="EntityFramework" name="InitializeSets" token="6000c72"><declaringType assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at DbContext.DiscoverAndInitializeSets()" method="DbContext.DiscoverAndInitializeSets()" offset="6"><method assemblyName="EntityFramework" name="DiscoverAndInitializeSets" token="6000105"><declaringType assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at DbContext.InitializeLazyInternalContext(IInternalConnection, DbCompiledModel)" method="DbContext.InitializeLazyInternalContext(IInternalConnection, DbCompiledModel)" offset="15"><method assemblyName="EntityFramework" name="InitializeLazyInternalContext" token="6000104"><declaringType assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
</type>
</parameter>
<parameter name="internalConnection" position="1"><type spec="Class"><definition assemblyName="EntityFramework" name="IInternalConnection" token="2000019" namespace="System.Data.Entity.Internal"/>
</type>
</parameter>
<parameter name="model" position="2"><type spec="Class"><definition assemblyName="EntityFramework" name="DbCompiledModel" token="20000d5" namespace="System.Data.Entity.Infrastructure"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at DbContext..ctor()" method="DbContext..ctor()" offset="24"><method assemblyName="EntityFramework" name=".ctor" token="60000fd"><declaringType assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at EMDatabase..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDatabase.cs(28)" method="EMDatabase..ctor()" offset="1" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDatabase.cs" line="28"><method assemblyName="emAPI" name=".ctor" token="600025e"><declaringType assemblyName="emAPI" name="EMDatabase" token="2000022" namespace="emAPI.DAL"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="EMDatabase" token="2000022" namespace="emAPI.DAL"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[    /// </summary>
    class EMDatabase : DbContext
    {]]></beforeSource>
<source><![CDATA[        internal EMDatabase()]]></source>
<afterSource><![CDATA[        {
            //Seed method to populate the database with sample data
            System.Data.Entity.Database.SetInitializer(new SampleData());]]></afterSource>
</frame>
<frame value="  at EMDataManager..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDataManager.cs(36)" method="EMDataManager..ctor()" offset="9" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDataManager.cs" line="36"><method assemblyName="emAPI" name=".ctor" token="6000190"><declaringType assemblyName="emAPI" name="EMDataManager" token="2000015" namespace="emAPI.DAL"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="EMDataManager" token="2000015" namespace="emAPI.DAL"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[        /// </summary>
        public EMDataManager()
        {]]></beforeSource>
<source><![CDATA[            emdb = new EMDatabase();]]></source>
<afterSource><![CDATA[        }

//* * * METHODS]]></afterSource>
</frame>
<frame value="  at EMMediator..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\EMMediator.cs(43)" method="EMMediator..ctor()" offset="9" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\EMMediator.cs" line="43"><method assemblyName="emAPI" name=".ctor" token="6000249"><declaringType assemblyName="emAPI" name="EMMediator" token="2000020" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="EMMediator" token="2000020" namespace="emAPI.Controllers"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[
        internal EMMediator()
        {]]></beforeSource>
<source><![CDATA[            DataManager = new EMDataManager();]]></source>
<afterSource><![CDATA[        }

        public void addPropertyToUser(int propertyId, int userId)]]></afterSource>
</frame>
<frame value="  at ApportionmentManager..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs(27)" method="ApportionmentManager..ctor()" offset="1" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs" line="27"><method assemblyName="emAPI" name=".ctor" token="60001f8"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[    /// </summary>
    public class ApportionmentManager : IApportionmentManager
    {]]></beforeSource>
<source><![CDATA[        private EMMediator mediator = new EMMediator();]]></source>
<afterSource><![CDATA[

        /// <summary>]]></afterSource>
</frame>
<frame value="  at ApportionmentManagerFactory.Create()" method="ApportionmentManagerFactory.Create()" offset="0"><method assemblyName="emAPI.Explorables" name="Create" static="true" token="6000002"><declaringType assemblyName="emAPI.Explorables" name="ApportionmentManagerFactory" token="2000002" namespace="emAPI.Controllers"/>
<resultType spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</resultType>
</method>
</frame>
<frame value="  at ThreadHelper.ThreadStart_Context(Object)" method="ThreadHelper.ThreadStart_Context(Object)" offset="59"><method assemblyName="mscorlib" name="ThreadStart_Context" static="true" token="6001664"><declaringType assemblyName="mscorlib" name="ThreadHelper" token="20001be" namespace="System.Threading"/>
<parameter name="state" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" offset="142"><method assemblyName="mscorlib" name="Run" static="true" token="600158d"><declaringType assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
<parameter name="executionContext" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="callback" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ContextCallback" token="20001a2" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="state" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
<parameter name="ignoreSyncCtx" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" offset="9"><method assemblyName="mscorlib" name="Run" static="true" token="600158c"><declaringType assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
<parameter name="executionContext" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="callback" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ContextCallback" token="20001a2" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="state" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ThreadHelper.ThreadStart(Object)" method="ThreadHelper.ThreadStart(Object)" offset="50"><method assemblyName="mscorlib" name="ThreadStart" token="6001665"><declaringType assemblyName="mscorlib" name="ThreadHelper" token="20001be" namespace="System.Threading"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="ThreadHelper" token="20001be" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="obj" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
</method>
</frame>
</stackTrace>
</uninstrumented>
<uninstrumented methodDisplayName="System.Void System.Text.DecoderReplacementFallback..ctor(System.String replacement)" declaringTypeDisplayName="System.Text.DecoderReplacementFallback" methodShortDisplayName="DecoderReplacementFallback..ctor(String)" wikiTopic="Uninstrumented Method Called"><method><definition assemblyName="mscorlib" name=".ctor" token="60033e9"><declaringType assemblyName="mscorlib" name="DecoderReplacementFallback" token="2000513" namespace="System.Text"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="DecoderReplacementFallback" token="2000513" namespace="System.Text"/>
</type>
</parameter>
<parameter name="replacement" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
</definition>
</method>
<stackTrace><frame value="  at Char.IsSurrogate(String, Int32)" method="Char.IsSurrogate(String, Int32)" offset="0"><method assemblyName="mscorlib" name="IsSurrogate" static="true" token="60067ca"><declaringType assemblyName="mscorlib" valueType="true" name="Char" token="20000a1" namespace="System"/>
<parameter position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</resultType>
</method>
</frame>
<frame value="  at DecoderReplacementFallback..ctor(String)" method="DecoderReplacementFallback..ctor(String)" offset="26"><method assemblyName="mscorlib" name=".ctor" token="60033e9"><declaringType assemblyName="mscorlib" name="DecoderReplacementFallback" token="2000513" namespace="System.Text"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="DecoderReplacementFallback" token="2000513" namespace="System.Text"/>
</type>
</parameter>
<parameter name="replacement" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at UTF8Encoding.SetDefaultFallbacks()" method="UTF8Encoding.SetDefaultFallbacks()" offset="53"><method assemblyName="mscorlib" name="SetDefaultFallbacks" token="6003505"><declaringType assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at Encoding..ctor(Int32)" method="Encoding..ctor(Int32)" offset="36"><method assemblyName="mscorlib" name=".ctor" token="6006b05"><declaringType assemblyName="mscorlib" name="Encoding" token="20004fc" namespace="System.Text"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="Encoding" token="20004fc" namespace="System.Text"/>
</type>
</parameter>
<parameter position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at UTF8Encoding..ctor(Boolean, Boolean)" method="UTF8Encoding..ctor(Boolean, Boolean)" offset="6"><method assemblyName="mscorlib" name=".ctor" token="6003504"><declaringType assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
</type>
</parameter>
<parameter name="encoderShouldEmitUTF8Identifier" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
<parameter name="throwOnInvalidBytes" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at CustomAttributeBuilder.InitCustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[], FieldInfo[], Object[])" method="CustomAttributeBuilder.InitCustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[], FieldInfo[], Object[])" offset="435"><method assemblyName="mscorlib" name="InitCustomAttributeBuilder" token="60057f7"><declaringType assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
</type>
</parameter>
<parameter name="con" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ConstructorInfo" token="200045a" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="constructorArgs" position="2"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter name="namedProperties" position="3"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="PropertyInfo" token="200045e" namespace="System.Reflection"/>
</elementType>
</type>
</parameter>
<parameter name="propertyValues" position="4"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter name="namedFields" position="5"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="FieldInfo" token="200045c" namespace="System.Reflection"/>
</elementType>
</type>
</parameter>
<parameter name="fieldValues" position="6"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
</method>
</frame>
<frame value="  at CustomAttributeBuilder..ctor(ConstructorInfo, Object[])" method="CustomAttributeBuilder..ctor(ConstructorInfo, Object[])" offset="38"><method assemblyName="mscorlib" name=".ctor" token="60057f2"><declaringType assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
</type>
</parameter>
<parameter name="con" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ConstructorInfo" token="200045a" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="constructorArgs" position="2"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
</method>
</frame>
<frame value="  at DynamicMethod.GetDynamicMethodsModule()" method="DynamicMethod.GetDynamicMethodsModule()" offset="96"><method assemblyName="mscorlib" name="GetDynamicMethodsModule" static="true" token="600567d"><declaringType assemblyName="mscorlib" name="DynamicMethod" token="200098a" namespace="System.Reflection.Emit"/>
<resultType spec="Class"><definition assemblyName="mscorlib" name="RuntimeModule" token="2000443" namespace="System.Reflection"/>
</resultType>
</method>
</frame>
<frame value="  at DynamicMethod.Init(String, MethodAttributes, CallingConventions, Type, Type[], Type, Module, Boolean, Boolean)" method="DynamicMethod.Init(String, MethodAttributes, CallingConventions, Type, Type[], Type, Module, Boolean, Boolean)" offset="288"><method assemblyName="mscorlib" name="Init" token="600567e"><declaringType assemblyName="mscorlib" name="DynamicMethod" token="200098a" namespace="System.Reflection.Emit"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="DynamicMethod" token="200098a" namespace="System.Reflection.Emit"/>
</type>
</parameter>
<parameter name="name" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="attributes" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="MethodAttributes" token="200043d" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="callingConvention" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="CallingConventions" token="2000406" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="returnType" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
<parameter name="signature" position="5"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter name="owner" position="6"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
<parameter name="m" position="7"><type spec="Class"><definition assemblyName="mscorlib" name="Module" token="2000442" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="skipVisibility" position="8"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
<parameter name="transparentMethod" position="9"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at LambdaCompiler..ctor(AnalyzedTree, LambdaExpression)" method="LambdaCompiler..ctor(AnalyzedTree, LambdaExpression)" offset="86"><method assemblyName="System.Core" name=".ctor" token="60014c8"><declaringType assemblyName="System.Core" name="LambdaCompiler" token="20002d0" namespace="System.Linq.Expressions.Compiler"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="System.Core" name="LambdaCompiler" token="20002d0" namespace="System.Linq.Expressions.Compiler"/>
</type>
</parameter>
<parameter name="tree" position="1"><type spec="Class"><definition assemblyName="System.Core" name="AnalyzedTree" token="20002b8" namespace="System.Linq.Expressions.Compiler"/>
</type>
</parameter>
<parameter name="lambda" position="2"><type spec="Class"><definition assemblyName="System.Core" name="LambdaExpression" token="200028e" namespace="System.Linq.Expressions"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at LambdaCompiler.Compile(LambdaExpression, DebugInfoGenerator)" method="LambdaCompiler.Compile(LambdaExpression, DebugInfoGenerator)" offset="17"><method assemblyName="System.Core" name="Compile" static="true" token="60014d0"><declaringType assemblyName="System.Core" name="LambdaCompiler" token="20002d0" namespace="System.Linq.Expressions.Compiler"/>
<parameter name="lambda" position="0"><type spec="Class"><definition assemblyName="System.Core" name="LambdaExpression" token="200028e" namespace="System.Linq.Expressions"/>
</type>
</parameter>
<parameter name="debugInfoGenerator" position="1"><type spec="Class"><definition assemblyName="System.Core" name="DebugInfoGenerator" token="20002c7" namespace="System.Runtime.CompilerServices"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Delegate" token="2000015" namespace="System"/>
</resultType>
</method>
</frame>
<frame value="  at Expression`1.Compile()" method="Expression`1.Compile()" offset="2"><method assemblyName="System.Core" name="Compile" token="60012d8"><declaringType assemblyName="System.Core" name="Expression`1" token="200028f" namespace="System.Linq.Expressions"><genericParameter value="TDelegate"/>
</declaringType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="System.Core" name="Expression`1" token="200028f" namespace="System.Linq.Expressions"><genericParameter value="TDelegate"/>
</definition>
<genericTypeArgument spec="GenericTypeParameter" index="0"/>
</type>
</parameter>
<resultType spec="GenericTypeParameter" index="0"/>
</method>
</frame>
<frame value="  at DbSetDiscoveryService.GetSets()" method="DbSetDiscoveryService.GetSets()" offset="398"><method assemblyName="EntityFramework" name="GetSets" token="6000c71"><declaringType assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Dictionary`2" token="2000354" namespace="System.Collections.Generic"><genericParameter value="TKey"/>
<genericParameter value="TValue"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</genericTypeArgument>
<genericTypeArgument spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</genericTypeArgument>
</genericTypeArgument>
</resultType>
</method>
</frame>
<frame value="  at DbSetDiscoveryService.InitializeSets()" method="DbSetDiscoveryService.InitializeSets()" offset="1"><method assemblyName="EntityFramework" name="InitializeSets" token="6000c72"><declaringType assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at DbContext.DiscoverAndInitializeSets()" method="DbContext.DiscoverAndInitializeSets()" offset="6"><method assemblyName="EntityFramework" name="DiscoverAndInitializeSets" token="6000105"><declaringType assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at DbContext.InitializeLazyInternalContext(IInternalConnection, DbCompiledModel)" method="DbContext.InitializeLazyInternalContext(IInternalConnection, DbCompiledModel)" offset="15"><method assemblyName="EntityFramework" name="InitializeLazyInternalContext" token="6000104"><declaringType assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
</type>
</parameter>
<parameter name="internalConnection" position="1"><type spec="Class"><definition assemblyName="EntityFramework" name="IInternalConnection" token="2000019" namespace="System.Data.Entity.Internal"/>
</type>
</parameter>
<parameter name="model" position="2"><type spec="Class"><definition assemblyName="EntityFramework" name="DbCompiledModel" token="20000d5" namespace="System.Data.Entity.Infrastructure"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at DbContext..ctor()" method="DbContext..ctor()" offset="24"><method assemblyName="EntityFramework" name=".ctor" token="60000fd"><declaringType assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at EMDatabase..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDatabase.cs(28)" method="EMDatabase..ctor()" offset="1" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDatabase.cs" line="28"><method assemblyName="emAPI" name=".ctor" token="600025e"><declaringType assemblyName="emAPI" name="EMDatabase" token="2000022" namespace="emAPI.DAL"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="EMDatabase" token="2000022" namespace="emAPI.DAL"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[    /// </summary>
    class EMDatabase : DbContext
    {]]></beforeSource>
<source><![CDATA[        internal EMDatabase()]]></source>
<afterSource><![CDATA[        {
            //Seed method to populate the database with sample data
            System.Data.Entity.Database.SetInitializer(new SampleData());]]></afterSource>
</frame>
<frame value="  at EMDataManager..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDataManager.cs(36)" method="EMDataManager..ctor()" offset="9" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDataManager.cs" line="36"><method assemblyName="emAPI" name=".ctor" token="6000190"><declaringType assemblyName="emAPI" name="EMDataManager" token="2000015" namespace="emAPI.DAL"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="EMDataManager" token="2000015" namespace="emAPI.DAL"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[        /// </summary>
        public EMDataManager()
        {]]></beforeSource>
<source><![CDATA[            emdb = new EMDatabase();]]></source>
<afterSource><![CDATA[        }

//* * * METHODS]]></afterSource>
</frame>
<frame value="  at EMMediator..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\EMMediator.cs(43)" method="EMMediator..ctor()" offset="9" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\EMMediator.cs" line="43"><method assemblyName="emAPI" name=".ctor" token="6000249"><declaringType assemblyName="emAPI" name="EMMediator" token="2000020" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="EMMediator" token="2000020" namespace="emAPI.Controllers"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[
        internal EMMediator()
        {]]></beforeSource>
<source><![CDATA[            DataManager = new EMDataManager();]]></source>
<afterSource><![CDATA[        }

        public void addPropertyToUser(int propertyId, int userId)]]></afterSource>
</frame>
<frame value="  at ApportionmentManager..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs(27)" method="ApportionmentManager..ctor()" offset="1" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs" line="27"><method assemblyName="emAPI" name=".ctor" token="60001f8"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[    /// </summary>
    public class ApportionmentManager : IApportionmentManager
    {]]></beforeSource>
<source><![CDATA[        private EMMediator mediator = new EMMediator();]]></source>
<afterSource><![CDATA[

        /// <summary>]]></afterSource>
</frame>
<frame value="  at ApportionmentManagerFactory.Create()" method="ApportionmentManagerFactory.Create()" offset="0"><method assemblyName="emAPI.Explorables" name="Create" static="true" token="6000002"><declaringType assemblyName="emAPI.Explorables" name="ApportionmentManagerFactory" token="2000002" namespace="emAPI.Controllers"/>
<resultType spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</resultType>
</method>
</frame>
<frame value="  at ThreadHelper.ThreadStart_Context(Object)" method="ThreadHelper.ThreadStart_Context(Object)" offset="59"><method assemblyName="mscorlib" name="ThreadStart_Context" static="true" token="6001664"><declaringType assemblyName="mscorlib" name="ThreadHelper" token="20001be" namespace="System.Threading"/>
<parameter name="state" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" offset="142"><method assemblyName="mscorlib" name="Run" static="true" token="600158d"><declaringType assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
<parameter name="executionContext" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="callback" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ContextCallback" token="20001a2" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="state" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
<parameter name="ignoreSyncCtx" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" offset="9"><method assemblyName="mscorlib" name="Run" static="true" token="600158c"><declaringType assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
<parameter name="executionContext" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="callback" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ContextCallback" token="20001a2" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="state" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ThreadHelper.ThreadStart(Object)" method="ThreadHelper.ThreadStart(Object)" offset="50"><method assemblyName="mscorlib" name="ThreadStart" token="6001665"><declaringType assemblyName="mscorlib" name="ThreadHelper" token="20001be" namespace="System.Threading"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="ThreadHelper" token="20001be" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="obj" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
</method>
</frame>
</stackTrace>
</uninstrumented>
<uninstrumented methodDisplayName="System.Text.EncoderFallback System.Text.EncoderFallback.get_ExceptionFallback()" declaringTypeDisplayName="System.Text.EncoderFallback" methodShortDisplayName="EncoderFallback.get_ExceptionFallback()" wikiTopic="Uninstrumented Method Called"><method><definition assemblyName="mscorlib" name="get_ExceptionFallback" static="true" token="6003407"><declaringType assemblyName="mscorlib" name="EncoderFallback" token="2000516" namespace="System.Text"/>
<resultType spec="Class"><definition assemblyName="mscorlib" name="EncoderFallback" token="2000516" namespace="System.Text"/>
</resultType>
</definition>
</method>
<stackTrace><frame value="  at UTF8Encoding.SetDefaultFallbacks()" method="UTF8Encoding.SetDefaultFallbacks()" offset="14"><method assemblyName="mscorlib" name="SetDefaultFallbacks" token="6003505"><declaringType assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at UTF8Encoding..ctor(Boolean, Boolean)" method="UTF8Encoding..ctor(Boolean, Boolean)" offset="34"><method assemblyName="mscorlib" name=".ctor" token="6003504"><declaringType assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
</type>
</parameter>
<parameter name="encoderShouldEmitUTF8Identifier" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
<parameter name="throwOnInvalidBytes" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at CustomAttributeBuilder.InitCustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[], FieldInfo[], Object[])" method="CustomAttributeBuilder.InitCustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[], FieldInfo[], Object[])" offset="435"><method assemblyName="mscorlib" name="InitCustomAttributeBuilder" token="60057f7"><declaringType assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
</type>
</parameter>
<parameter name="con" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ConstructorInfo" token="200045a" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="constructorArgs" position="2"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter name="namedProperties" position="3"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="PropertyInfo" token="200045e" namespace="System.Reflection"/>
</elementType>
</type>
</parameter>
<parameter name="propertyValues" position="4"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter name="namedFields" position="5"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="FieldInfo" token="200045c" namespace="System.Reflection"/>
</elementType>
</type>
</parameter>
<parameter name="fieldValues" position="6"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
</method>
</frame>
<frame value="  at CustomAttributeBuilder..ctor(ConstructorInfo, Object[])" method="CustomAttributeBuilder..ctor(ConstructorInfo, Object[])" offset="38"><method assemblyName="mscorlib" name=".ctor" token="60057f2"><declaringType assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
</type>
</parameter>
<parameter name="con" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ConstructorInfo" token="200045a" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="constructorArgs" position="2"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
</method>
</frame>
<frame value="  at DynamicMethod.GetDynamicMethodsModule()" method="DynamicMethod.GetDynamicMethodsModule()" offset="96"><method assemblyName="mscorlib" name="GetDynamicMethodsModule" static="true" token="600567d"><declaringType assemblyName="mscorlib" name="DynamicMethod" token="200098a" namespace="System.Reflection.Emit"/>
<resultType spec="Class"><definition assemblyName="mscorlib" name="RuntimeModule" token="2000443" namespace="System.Reflection"/>
</resultType>
</method>
</frame>
<frame value="  at DynamicMethod.Init(String, MethodAttributes, CallingConventions, Type, Type[], Type, Module, Boolean, Boolean)" method="DynamicMethod.Init(String, MethodAttributes, CallingConventions, Type, Type[], Type, Module, Boolean, Boolean)" offset="288"><method assemblyName="mscorlib" name="Init" token="600567e"><declaringType assemblyName="mscorlib" name="DynamicMethod" token="200098a" namespace="System.Reflection.Emit"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="DynamicMethod" token="200098a" namespace="System.Reflection.Emit"/>
</type>
</parameter>
<parameter name="name" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="attributes" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="MethodAttributes" token="200043d" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="callingConvention" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="CallingConventions" token="2000406" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="returnType" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
<parameter name="signature" position="5"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter name="owner" position="6"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
<parameter name="m" position="7"><type spec="Class"><definition assemblyName="mscorlib" name="Module" token="2000442" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="skipVisibility" position="8"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
<parameter name="transparentMethod" position="9"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at LambdaCompiler..ctor(AnalyzedTree, LambdaExpression)" method="LambdaCompiler..ctor(AnalyzedTree, LambdaExpression)" offset="86"><method assemblyName="System.Core" name=".ctor" token="60014c8"><declaringType assemblyName="System.Core" name="LambdaCompiler" token="20002d0" namespace="System.Linq.Expressions.Compiler"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="System.Core" name="LambdaCompiler" token="20002d0" namespace="System.Linq.Expressions.Compiler"/>
</type>
</parameter>
<parameter name="tree" position="1"><type spec="Class"><definition assemblyName="System.Core" name="AnalyzedTree" token="20002b8" namespace="System.Linq.Expressions.Compiler"/>
</type>
</parameter>
<parameter name="lambda" position="2"><type spec="Class"><definition assemblyName="System.Core" name="LambdaExpression" token="200028e" namespace="System.Linq.Expressions"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at LambdaCompiler.Compile(LambdaExpression, DebugInfoGenerator)" method="LambdaCompiler.Compile(LambdaExpression, DebugInfoGenerator)" offset="17"><method assemblyName="System.Core" name="Compile" static="true" token="60014d0"><declaringType assemblyName="System.Core" name="LambdaCompiler" token="20002d0" namespace="System.Linq.Expressions.Compiler"/>
<parameter name="lambda" position="0"><type spec="Class"><definition assemblyName="System.Core" name="LambdaExpression" token="200028e" namespace="System.Linq.Expressions"/>
</type>
</parameter>
<parameter name="debugInfoGenerator" position="1"><type spec="Class"><definition assemblyName="System.Core" name="DebugInfoGenerator" token="20002c7" namespace="System.Runtime.CompilerServices"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Delegate" token="2000015" namespace="System"/>
</resultType>
</method>
</frame>
<frame value="  at Expression`1.Compile()" method="Expression`1.Compile()" offset="2"><method assemblyName="System.Core" name="Compile" token="60012d8"><declaringType assemblyName="System.Core" name="Expression`1" token="200028f" namespace="System.Linq.Expressions"><genericParameter value="TDelegate"/>
</declaringType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="System.Core" name="Expression`1" token="200028f" namespace="System.Linq.Expressions"><genericParameter value="TDelegate"/>
</definition>
<genericTypeArgument spec="GenericTypeParameter" index="0"/>
</type>
</parameter>
<resultType spec="GenericTypeParameter" index="0"/>
</method>
</frame>
<frame value="  at DbSetDiscoveryService.GetSets()" method="DbSetDiscoveryService.GetSets()" offset="398"><method assemblyName="EntityFramework" name="GetSets" token="6000c71"><declaringType assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Dictionary`2" token="2000354" namespace="System.Collections.Generic"><genericParameter value="TKey"/>
<genericParameter value="TValue"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</genericTypeArgument>
<genericTypeArgument spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</genericTypeArgument>
</genericTypeArgument>
</resultType>
</method>
</frame>
<frame value="  at DbSetDiscoveryService.InitializeSets()" method="DbSetDiscoveryService.InitializeSets()" offset="1"><method assemblyName="EntityFramework" name="InitializeSets" token="6000c72"><declaringType assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at DbContext.DiscoverAndInitializeSets()" method="DbContext.DiscoverAndInitializeSets()" offset="6"><method assemblyName="EntityFramework" name="DiscoverAndInitializeSets" token="6000105"><declaringType assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at DbContext.InitializeLazyInternalContext(IInternalConnection, DbCompiledModel)" method="DbContext.InitializeLazyInternalContext(IInternalConnection, DbCompiledModel)" offset="15"><method assemblyName="EntityFramework" name="InitializeLazyInternalContext" token="6000104"><declaringType assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
</type>
</parameter>
<parameter name="internalConnection" position="1"><type spec="Class"><definition assemblyName="EntityFramework" name="IInternalConnection" token="2000019" namespace="System.Data.Entity.Internal"/>
</type>
</parameter>
<parameter name="model" position="2"><type spec="Class"><definition assemblyName="EntityFramework" name="DbCompiledModel" token="20000d5" namespace="System.Data.Entity.Infrastructure"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at DbContext..ctor()" method="DbContext..ctor()" offset="24"><method assemblyName="EntityFramework" name=".ctor" token="60000fd"><declaringType assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at EMDatabase..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDatabase.cs(28)" method="EMDatabase..ctor()" offset="1" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDatabase.cs" line="28"><method assemblyName="emAPI" name=".ctor" token="600025e"><declaringType assemblyName="emAPI" name="EMDatabase" token="2000022" namespace="emAPI.DAL"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="EMDatabase" token="2000022" namespace="emAPI.DAL"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[    /// </summary>
    class EMDatabase : DbContext
    {]]></beforeSource>
<source><![CDATA[        internal EMDatabase()]]></source>
<afterSource><![CDATA[        {
            //Seed method to populate the database with sample data
            System.Data.Entity.Database.SetInitializer(new SampleData());]]></afterSource>
</frame>
<frame value="  at EMDataManager..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDataManager.cs(36)" method="EMDataManager..ctor()" offset="9" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDataManager.cs" line="36"><method assemblyName="emAPI" name=".ctor" token="6000190"><declaringType assemblyName="emAPI" name="EMDataManager" token="2000015" namespace="emAPI.DAL"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="EMDataManager" token="2000015" namespace="emAPI.DAL"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[        /// </summary>
        public EMDataManager()
        {]]></beforeSource>
<source><![CDATA[            emdb = new EMDatabase();]]></source>
<afterSource><![CDATA[        }

//* * * METHODS]]></afterSource>
</frame>
<frame value="  at EMMediator..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\EMMediator.cs(43)" method="EMMediator..ctor()" offset="9" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\EMMediator.cs" line="43"><method assemblyName="emAPI" name=".ctor" token="6000249"><declaringType assemblyName="emAPI" name="EMMediator" token="2000020" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="EMMediator" token="2000020" namespace="emAPI.Controllers"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[
        internal EMMediator()
        {]]></beforeSource>
<source><![CDATA[            DataManager = new EMDataManager();]]></source>
<afterSource><![CDATA[        }

        public void addPropertyToUser(int propertyId, int userId)]]></afterSource>
</frame>
<frame value="  at ApportionmentManager..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs(27)" method="ApportionmentManager..ctor()" offset="1" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs" line="27"><method assemblyName="emAPI" name=".ctor" token="60001f8"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[    /// </summary>
    public class ApportionmentManager : IApportionmentManager
    {]]></beforeSource>
<source><![CDATA[        private EMMediator mediator = new EMMediator();]]></source>
<afterSource><![CDATA[

        /// <summary>]]></afterSource>
</frame>
<frame value="  at ApportionmentManagerFactory.Create()" method="ApportionmentManagerFactory.Create()" offset="0"><method assemblyName="emAPI.Explorables" name="Create" static="true" token="6000002"><declaringType assemblyName="emAPI.Explorables" name="ApportionmentManagerFactory" token="2000002" namespace="emAPI.Controllers"/>
<resultType spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</resultType>
</method>
</frame>
<frame value="  at ThreadHelper.ThreadStart_Context(Object)" method="ThreadHelper.ThreadStart_Context(Object)" offset="59"><method assemblyName="mscorlib" name="ThreadStart_Context" static="true" token="6001664"><declaringType assemblyName="mscorlib" name="ThreadHelper" token="20001be" namespace="System.Threading"/>
<parameter name="state" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" offset="142"><method assemblyName="mscorlib" name="Run" static="true" token="600158d"><declaringType assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
<parameter name="executionContext" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="callback" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ContextCallback" token="20001a2" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="state" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
<parameter name="ignoreSyncCtx" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" offset="9"><method assemblyName="mscorlib" name="Run" static="true" token="600158c"><declaringType assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
<parameter name="executionContext" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="callback" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ContextCallback" token="20001a2" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="state" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ThreadHelper.ThreadStart(Object)" method="ThreadHelper.ThreadStart(Object)" offset="50"><method assemblyName="mscorlib" name="ThreadStart" token="6001665"><declaringType assemblyName="mscorlib" name="ThreadHelper" token="20001be" namespace="System.Threading"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="ThreadHelper" token="20001be" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="obj" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
</method>
</frame>
</stackTrace>
</uninstrumented>
<uninstrumented methodDisplayName="System.Text.DecoderFallback System.Text.DecoderFallback.get_ExceptionFallback()" declaringTypeDisplayName="System.Text.DecoderFallback" methodShortDisplayName="DecoderFallback.get_ExceptionFallback()" wikiTopic="Uninstrumented Method Called"><method><definition assemblyName="mscorlib" name="get_ExceptionFallback" static="true" token="60033b8"><declaringType assemblyName="mscorlib" name="DecoderFallback" token="200050c" namespace="System.Text"/>
<resultType spec="Class"><definition assemblyName="mscorlib" name="DecoderFallback" token="200050c" namespace="System.Text"/>
</resultType>
</definition>
</method>
<stackTrace><frame value="  at UTF8Encoding.SetDefaultFallbacks()" method="UTF8Encoding.SetDefaultFallbacks()" offset="25"><method assemblyName="mscorlib" name="SetDefaultFallbacks" token="6003505"><declaringType assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at UTF8Encoding..ctor(Boolean, Boolean)" method="UTF8Encoding..ctor(Boolean, Boolean)" offset="34"><method assemblyName="mscorlib" name=".ctor" token="6003504"><declaringType assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
</type>
</parameter>
<parameter name="encoderShouldEmitUTF8Identifier" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
<parameter name="throwOnInvalidBytes" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at CustomAttributeBuilder.InitCustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[], FieldInfo[], Object[])" method="CustomAttributeBuilder.InitCustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[], FieldInfo[], Object[])" offset="435"><method assemblyName="mscorlib" name="InitCustomAttributeBuilder" token="60057f7"><declaringType assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
</type>
</parameter>
<parameter name="con" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ConstructorInfo" token="200045a" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="constructorArgs" position="2"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter name="namedProperties" position="3"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="PropertyInfo" token="200045e" namespace="System.Reflection"/>
</elementType>
</type>
</parameter>
<parameter name="propertyValues" position="4"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter name="namedFields" position="5"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="FieldInfo" token="200045c" namespace="System.Reflection"/>
</elementType>
</type>
</parameter>
<parameter name="fieldValues" position="6"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
</method>
</frame>
<frame value="  at CustomAttributeBuilder..ctor(ConstructorInfo, Object[])" method="CustomAttributeBuilder..ctor(ConstructorInfo, Object[])" offset="38"><method assemblyName="mscorlib" name=".ctor" token="60057f2"><declaringType assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
</type>
</parameter>
<parameter name="con" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ConstructorInfo" token="200045a" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="constructorArgs" position="2"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
</method>
</frame>
<frame value="  at DynamicMethod.GetDynamicMethodsModule()" method="DynamicMethod.GetDynamicMethodsModule()" offset="96"><method assemblyName="mscorlib" name="GetDynamicMethodsModule" static="true" token="600567d"><declaringType assemblyName="mscorlib" name="DynamicMethod" token="200098a" namespace="System.Reflection.Emit"/>
<resultType spec="Class"><definition assemblyName="mscorlib" name="RuntimeModule" token="2000443" namespace="System.Reflection"/>
</resultType>
</method>
</frame>
<frame value="  at DynamicMethod.Init(String, MethodAttributes, CallingConventions, Type, Type[], Type, Module, Boolean, Boolean)" method="DynamicMethod.Init(String, MethodAttributes, CallingConventions, Type, Type[], Type, Module, Boolean, Boolean)" offset="288"><method assemblyName="mscorlib" name="Init" token="600567e"><declaringType assemblyName="mscorlib" name="DynamicMethod" token="200098a" namespace="System.Reflection.Emit"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="DynamicMethod" token="200098a" namespace="System.Reflection.Emit"/>
</type>
</parameter>
<parameter name="name" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="attributes" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="MethodAttributes" token="200043d" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="callingConvention" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="CallingConventions" token="2000406" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="returnType" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
<parameter name="signature" position="5"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter name="owner" position="6"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
<parameter name="m" position="7"><type spec="Class"><definition assemblyName="mscorlib" name="Module" token="2000442" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="skipVisibility" position="8"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
<parameter name="transparentMethod" position="9"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at LambdaCompiler..ctor(AnalyzedTree, LambdaExpression)" method="LambdaCompiler..ctor(AnalyzedTree, LambdaExpression)" offset="86"><method assemblyName="System.Core" name=".ctor" token="60014c8"><declaringType assemblyName="System.Core" name="LambdaCompiler" token="20002d0" namespace="System.Linq.Expressions.Compiler"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="System.Core" name="LambdaCompiler" token="20002d0" namespace="System.Linq.Expressions.Compiler"/>
</type>
</parameter>
<parameter name="tree" position="1"><type spec="Class"><definition assemblyName="System.Core" name="AnalyzedTree" token="20002b8" namespace="System.Linq.Expressions.Compiler"/>
</type>
</parameter>
<parameter name="lambda" position="2"><type spec="Class"><definition assemblyName="System.Core" name="LambdaExpression" token="200028e" namespace="System.Linq.Expressions"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at LambdaCompiler.Compile(LambdaExpression, DebugInfoGenerator)" method="LambdaCompiler.Compile(LambdaExpression, DebugInfoGenerator)" offset="17"><method assemblyName="System.Core" name="Compile" static="true" token="60014d0"><declaringType assemblyName="System.Core" name="LambdaCompiler" token="20002d0" namespace="System.Linq.Expressions.Compiler"/>
<parameter name="lambda" position="0"><type spec="Class"><definition assemblyName="System.Core" name="LambdaExpression" token="200028e" namespace="System.Linq.Expressions"/>
</type>
</parameter>
<parameter name="debugInfoGenerator" position="1"><type spec="Class"><definition assemblyName="System.Core" name="DebugInfoGenerator" token="20002c7" namespace="System.Runtime.CompilerServices"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Delegate" token="2000015" namespace="System"/>
</resultType>
</method>
</frame>
<frame value="  at Expression`1.Compile()" method="Expression`1.Compile()" offset="2"><method assemblyName="System.Core" name="Compile" token="60012d8"><declaringType assemblyName="System.Core" name="Expression`1" token="200028f" namespace="System.Linq.Expressions"><genericParameter value="TDelegate"/>
</declaringType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="System.Core" name="Expression`1" token="200028f" namespace="System.Linq.Expressions"><genericParameter value="TDelegate"/>
</definition>
<genericTypeArgument spec="GenericTypeParameter" index="0"/>
</type>
</parameter>
<resultType spec="GenericTypeParameter" index="0"/>
</method>
</frame>
<frame value="  at DbSetDiscoveryService.GetSets()" method="DbSetDiscoveryService.GetSets()" offset="398"><method assemblyName="EntityFramework" name="GetSets" token="6000c71"><declaringType assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Dictionary`2" token="2000354" namespace="System.Collections.Generic"><genericParameter value="TKey"/>
<genericParameter value="TValue"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</genericTypeArgument>
<genericTypeArgument spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</genericTypeArgument>
</genericTypeArgument>
</resultType>
</method>
</frame>
<frame value="  at DbSetDiscoveryService.InitializeSets()" method="DbSetDiscoveryService.InitializeSets()" offset="1"><method assemblyName="EntityFramework" name="InitializeSets" token="6000c72"><declaringType assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at DbContext.DiscoverAndInitializeSets()" method="DbContext.DiscoverAndInitializeSets()" offset="6"><method assemblyName="EntityFramework" name="DiscoverAndInitializeSets" token="6000105"><declaringType assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at DbContext.InitializeLazyInternalContext(IInternalConnection, DbCompiledModel)" method="DbContext.InitializeLazyInternalContext(IInternalConnection, DbCompiledModel)" offset="15"><method assemblyName="EntityFramework" name="InitializeLazyInternalContext" token="6000104"><declaringType assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
</type>
</parameter>
<parameter name="internalConnection" position="1"><type spec="Class"><definition assemblyName="EntityFramework" name="IInternalConnection" token="2000019" namespace="System.Data.Entity.Internal"/>
</type>
</parameter>
<parameter name="model" position="2"><type spec="Class"><definition assemblyName="EntityFramework" name="DbCompiledModel" token="20000d5" namespace="System.Data.Entity.Infrastructure"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at DbContext..ctor()" method="DbContext..ctor()" offset="24"><method assemblyName="EntityFramework" name=".ctor" token="60000fd"><declaringType assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at EMDatabase..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDatabase.cs(28)" method="EMDatabase..ctor()" offset="1" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDatabase.cs" line="28"><method assemblyName="emAPI" name=".ctor" token="600025e"><declaringType assemblyName="emAPI" name="EMDatabase" token="2000022" namespace="emAPI.DAL"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="EMDatabase" token="2000022" namespace="emAPI.DAL"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[    /// </summary>
    class EMDatabase : DbContext
    {]]></beforeSource>
<source><![CDATA[        internal EMDatabase()]]></source>
<afterSource><![CDATA[        {
            //Seed method to populate the database with sample data
            System.Data.Entity.Database.SetInitializer(new SampleData());]]></afterSource>
</frame>
<frame value="  at EMDataManager..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDataManager.cs(36)" method="EMDataManager..ctor()" offset="9" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDataManager.cs" line="36"><method assemblyName="emAPI" name=".ctor" token="6000190"><declaringType assemblyName="emAPI" name="EMDataManager" token="2000015" namespace="emAPI.DAL"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="EMDataManager" token="2000015" namespace="emAPI.DAL"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[        /// </summary>
        public EMDataManager()
        {]]></beforeSource>
<source><![CDATA[            emdb = new EMDatabase();]]></source>
<afterSource><![CDATA[        }

//* * * METHODS]]></afterSource>
</frame>
<frame value="  at EMMediator..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\EMMediator.cs(43)" method="EMMediator..ctor()" offset="9" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\EMMediator.cs" line="43"><method assemblyName="emAPI" name=".ctor" token="6000249"><declaringType assemblyName="emAPI" name="EMMediator" token="2000020" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="EMMediator" token="2000020" namespace="emAPI.Controllers"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[
        internal EMMediator()
        {]]></beforeSource>
<source><![CDATA[            DataManager = new EMDataManager();]]></source>
<afterSource><![CDATA[        }

        public void addPropertyToUser(int propertyId, int userId)]]></afterSource>
</frame>
<frame value="  at ApportionmentManager..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs(27)" method="ApportionmentManager..ctor()" offset="1" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs" line="27"><method assemblyName="emAPI" name=".ctor" token="60001f8"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[    /// </summary>
    public class ApportionmentManager : IApportionmentManager
    {]]></beforeSource>
<source><![CDATA[        private EMMediator mediator = new EMMediator();]]></source>
<afterSource><![CDATA[

        /// <summary>]]></afterSource>
</frame>
<frame value="  at ApportionmentManagerFactory.Create()" method="ApportionmentManagerFactory.Create()" offset="0"><method assemblyName="emAPI.Explorables" name="Create" static="true" token="6000002"><declaringType assemblyName="emAPI.Explorables" name="ApportionmentManagerFactory" token="2000002" namespace="emAPI.Controllers"/>
<resultType spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</resultType>
</method>
</frame>
<frame value="  at ThreadHelper.ThreadStart_Context(Object)" method="ThreadHelper.ThreadStart_Context(Object)" offset="59"><method assemblyName="mscorlib" name="ThreadStart_Context" static="true" token="6001664"><declaringType assemblyName="mscorlib" name="ThreadHelper" token="20001be" namespace="System.Threading"/>
<parameter name="state" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" offset="142"><method assemblyName="mscorlib" name="Run" static="true" token="600158d"><declaringType assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
<parameter name="executionContext" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="callback" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ContextCallback" token="20001a2" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="state" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
<parameter name="ignoreSyncCtx" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" offset="9"><method assemblyName="mscorlib" name="Run" static="true" token="600158c"><declaringType assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
<parameter name="executionContext" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="callback" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ContextCallback" token="20001a2" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="state" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ThreadHelper.ThreadStart(Object)" method="ThreadHelper.ThreadStart(Object)" offset="50"><method assemblyName="mscorlib" name="ThreadStart" token="6001665"><declaringType assemblyName="mscorlib" name="ThreadHelper" token="20001be" namespace="System.Threading"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="ThreadHelper" token="20001be" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="obj" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
</method>
</frame>
</stackTrace>
</uninstrumented>
<uninstrumented methodDisplayName="System.Void System.Text.UTF8Encoding+UTF8Encoder..ctor(System.Text.UTF8Encoding encoding)" declaringTypeDisplayName="System.Text.UTF8Encoding+UTF8Encoder" methodShortDisplayName="UTF8Encoder..ctor(UTF8Encoding)" wikiTopic="Uninstrumented Method Called"><method><definition assemblyName="mscorlib" name=".ctor" token="6003522"><declaringType assemblyName="mscorlib" name="UTF8Encoder" token="2000536"><declaringType assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
</declaringType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="UTF8Encoder" token="2000536"><declaringType assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
</definition>
</type>
</parameter>
<parameter name="encoding" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
</type>
</parameter>
</definition>
</method>
<stackTrace><frame value="  at Encoding.get_EncoderFallback()" method="Encoding.get_EncoderFallback()" offset="0"><method assemblyName="mscorlib" name="get_EncoderFallback" token="60032ed"><declaringType assemblyName="mscorlib" name="Encoding" token="20004fc" namespace="System.Text"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="Encoding" token="20004fc" namespace="System.Text"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="EncoderFallback" token="2000516" namespace="System.Text"/>
</resultType>
</method>
</frame>
<frame value="  at UTF8Encoding.GetEncoder()" method="UTF8Encoding.GetEncoder()" offset="1"><method assemblyName="mscorlib" name="GetEncoder" token="600351c"><declaringType assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Encoder" token="20004fd" namespace="System.Text"/>
</resultType>
</method>
</frame>
<frame value="  at BinaryWriter..ctor(Stream, Encoding)" method="BinaryWriter..ctor(Stream, Encoding)" offset="97"><method assemblyName="mscorlib" name=".ctor" token="6003fff"><declaringType assemblyName="mscorlib" name="BinaryWriter" token="20006e6" namespace="System.IO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="BinaryWriter" token="20006e6" namespace="System.IO"/>
</type>
</parameter>
<parameter name="output" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Stream" token="20006dc" namespace="System.IO"/>
</type>
</parameter>
<parameter name="encoding" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="Encoding" token="20004fc" namespace="System.Text"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at CustomAttributeBuilder.InitCustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[], FieldInfo[], Object[])" method="CustomAttributeBuilder.InitCustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[], FieldInfo[], Object[])" offset="443"><method assemblyName="mscorlib" name="InitCustomAttributeBuilder" token="60057f7"><declaringType assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
</type>
</parameter>
<parameter name="con" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ConstructorInfo" token="200045a" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="constructorArgs" position="2"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter name="namedProperties" position="3"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="PropertyInfo" token="200045e" namespace="System.Reflection"/>
</elementType>
</type>
</parameter>
<parameter name="propertyValues" position="4"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter name="namedFields" position="5"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="FieldInfo" token="200045c" namespace="System.Reflection"/>
</elementType>
</type>
</parameter>
<parameter name="fieldValues" position="6"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
</method>
</frame>
<frame value="  at CustomAttributeBuilder..ctor(ConstructorInfo, Object[])" method="CustomAttributeBuilder..ctor(ConstructorInfo, Object[])" offset="38"><method assemblyName="mscorlib" name=".ctor" token="60057f2"><declaringType assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
</type>
</parameter>
<parameter name="con" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ConstructorInfo" token="200045a" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="constructorArgs" position="2"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
</method>
</frame>
<frame value="  at DynamicMethod.GetDynamicMethodsModule()" method="DynamicMethod.GetDynamicMethodsModule()" offset="96"><method assemblyName="mscorlib" name="GetDynamicMethodsModule" static="true" token="600567d"><declaringType assemblyName="mscorlib" name="DynamicMethod" token="200098a" namespace="System.Reflection.Emit"/>
<resultType spec="Class"><definition assemblyName="mscorlib" name="RuntimeModule" token="2000443" namespace="System.Reflection"/>
</resultType>
</method>
</frame>
<frame value="  at DynamicMethod.Init(String, MethodAttributes, CallingConventions, Type, Type[], Type, Module, Boolean, Boolean)" method="DynamicMethod.Init(String, MethodAttributes, CallingConventions, Type, Type[], Type, Module, Boolean, Boolean)" offset="288"><method assemblyName="mscorlib" name="Init" token="600567e"><declaringType assemblyName="mscorlib" name="DynamicMethod" token="200098a" namespace="System.Reflection.Emit"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="DynamicMethod" token="200098a" namespace="System.Reflection.Emit"/>
</type>
</parameter>
<parameter name="name" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="attributes" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="MethodAttributes" token="200043d" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="callingConvention" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="CallingConventions" token="2000406" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="returnType" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
<parameter name="signature" position="5"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter name="owner" position="6"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
<parameter name="m" position="7"><type spec="Class"><definition assemblyName="mscorlib" name="Module" token="2000442" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="skipVisibility" position="8"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
<parameter name="transparentMethod" position="9"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at LambdaCompiler..ctor(AnalyzedTree, LambdaExpression)" method="LambdaCompiler..ctor(AnalyzedTree, LambdaExpression)" offset="86"><method assemblyName="System.Core" name=".ctor" token="60014c8"><declaringType assemblyName="System.Core" name="LambdaCompiler" token="20002d0" namespace="System.Linq.Expressions.Compiler"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="System.Core" name="LambdaCompiler" token="20002d0" namespace="System.Linq.Expressions.Compiler"/>
</type>
</parameter>
<parameter name="tree" position="1"><type spec="Class"><definition assemblyName="System.Core" name="AnalyzedTree" token="20002b8" namespace="System.Linq.Expressions.Compiler"/>
</type>
</parameter>
<parameter name="lambda" position="2"><type spec="Class"><definition assemblyName="System.Core" name="LambdaExpression" token="200028e" namespace="System.Linq.Expressions"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at LambdaCompiler.Compile(LambdaExpression, DebugInfoGenerator)" method="LambdaCompiler.Compile(LambdaExpression, DebugInfoGenerator)" offset="17"><method assemblyName="System.Core" name="Compile" static="true" token="60014d0"><declaringType assemblyName="System.Core" name="LambdaCompiler" token="20002d0" namespace="System.Linq.Expressions.Compiler"/>
<parameter name="lambda" position="0"><type spec="Class"><definition assemblyName="System.Core" name="LambdaExpression" token="200028e" namespace="System.Linq.Expressions"/>
</type>
</parameter>
<parameter name="debugInfoGenerator" position="1"><type spec="Class"><definition assemblyName="System.Core" name="DebugInfoGenerator" token="20002c7" namespace="System.Runtime.CompilerServices"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Delegate" token="2000015" namespace="System"/>
</resultType>
</method>
</frame>
<frame value="  at Expression`1.Compile()" method="Expression`1.Compile()" offset="2"><method assemblyName="System.Core" name="Compile" token="60012d8"><declaringType assemblyName="System.Core" name="Expression`1" token="200028f" namespace="System.Linq.Expressions"><genericParameter value="TDelegate"/>
</declaringType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="System.Core" name="Expression`1" token="200028f" namespace="System.Linq.Expressions"><genericParameter value="TDelegate"/>
</definition>
<genericTypeArgument spec="GenericTypeParameter" index="0"/>
</type>
</parameter>
<resultType spec="GenericTypeParameter" index="0"/>
</method>
</frame>
<frame value="  at DbSetDiscoveryService.GetSets()" method="DbSetDiscoveryService.GetSets()" offset="398"><method assemblyName="EntityFramework" name="GetSets" token="6000c71"><declaringType assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Dictionary`2" token="2000354" namespace="System.Collections.Generic"><genericParameter value="TKey"/>
<genericParameter value="TValue"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</genericTypeArgument>
<genericTypeArgument spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</genericTypeArgument>
</genericTypeArgument>
</resultType>
</method>
</frame>
<frame value="  at DbSetDiscoveryService.InitializeSets()" method="DbSetDiscoveryService.InitializeSets()" offset="1"><method assemblyName="EntityFramework" name="InitializeSets" token="6000c72"><declaringType assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at DbContext.DiscoverAndInitializeSets()" method="DbContext.DiscoverAndInitializeSets()" offset="6"><method assemblyName="EntityFramework" name="DiscoverAndInitializeSets" token="6000105"><declaringType assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at DbContext.InitializeLazyInternalContext(IInternalConnection, DbCompiledModel)" method="DbContext.InitializeLazyInternalContext(IInternalConnection, DbCompiledModel)" offset="15"><method assemblyName="EntityFramework" name="InitializeLazyInternalContext" token="6000104"><declaringType assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
</type>
</parameter>
<parameter name="internalConnection" position="1"><type spec="Class"><definition assemblyName="EntityFramework" name="IInternalConnection" token="2000019" namespace="System.Data.Entity.Internal"/>
</type>
</parameter>
<parameter name="model" position="2"><type spec="Class"><definition assemblyName="EntityFramework" name="DbCompiledModel" token="20000d5" namespace="System.Data.Entity.Infrastructure"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at DbContext..ctor()" method="DbContext..ctor()" offset="24"><method assemblyName="EntityFramework" name=".ctor" token="60000fd"><declaringType assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at EMDatabase..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDatabase.cs(28)" method="EMDatabase..ctor()" offset="1" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDatabase.cs" line="28"><method assemblyName="emAPI" name=".ctor" token="600025e"><declaringType assemblyName="emAPI" name="EMDatabase" token="2000022" namespace="emAPI.DAL"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="EMDatabase" token="2000022" namespace="emAPI.DAL"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[    /// </summary>
    class EMDatabase : DbContext
    {]]></beforeSource>
<source><![CDATA[        internal EMDatabase()]]></source>
<afterSource><![CDATA[        {
            //Seed method to populate the database with sample data
            System.Data.Entity.Database.SetInitializer(new SampleData());]]></afterSource>
</frame>
<frame value="  at EMDataManager..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDataManager.cs(36)" method="EMDataManager..ctor()" offset="9" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDataManager.cs" line="36"><method assemblyName="emAPI" name=".ctor" token="6000190"><declaringType assemblyName="emAPI" name="EMDataManager" token="2000015" namespace="emAPI.DAL"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="EMDataManager" token="2000015" namespace="emAPI.DAL"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[        /// </summary>
        public EMDataManager()
        {]]></beforeSource>
<source><![CDATA[            emdb = new EMDatabase();]]></source>
<afterSource><![CDATA[        }

//* * * METHODS]]></afterSource>
</frame>
<frame value="  at EMMediator..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\EMMediator.cs(43)" method="EMMediator..ctor()" offset="9" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\EMMediator.cs" line="43"><method assemblyName="emAPI" name=".ctor" token="6000249"><declaringType assemblyName="emAPI" name="EMMediator" token="2000020" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="EMMediator" token="2000020" namespace="emAPI.Controllers"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[
        internal EMMediator()
        {]]></beforeSource>
<source><![CDATA[            DataManager = new EMDataManager();]]></source>
<afterSource><![CDATA[        }

        public void addPropertyToUser(int propertyId, int userId)]]></afterSource>
</frame>
<frame value="  at ApportionmentManager..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs(27)" method="ApportionmentManager..ctor()" offset="1" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs" line="27"><method assemblyName="emAPI" name=".ctor" token="60001f8"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[    /// </summary>
    public class ApportionmentManager : IApportionmentManager
    {]]></beforeSource>
<source><![CDATA[        private EMMediator mediator = new EMMediator();]]></source>
<afterSource><![CDATA[

        /// <summary>]]></afterSource>
</frame>
<frame value="  at ApportionmentManagerFactory.Create()" method="ApportionmentManagerFactory.Create()" offset="0"><method assemblyName="emAPI.Explorables" name="Create" static="true" token="6000002"><declaringType assemblyName="emAPI.Explorables" name="ApportionmentManagerFactory" token="2000002" namespace="emAPI.Controllers"/>
<resultType spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</resultType>
</method>
</frame>
<frame value="  at ThreadHelper.ThreadStart_Context(Object)" method="ThreadHelper.ThreadStart_Context(Object)" offset="59"><method assemblyName="mscorlib" name="ThreadStart_Context" static="true" token="6001664"><declaringType assemblyName="mscorlib" name="ThreadHelper" token="20001be" namespace="System.Threading"/>
<parameter name="state" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" offset="142"><method assemblyName="mscorlib" name="Run" static="true" token="600158d"><declaringType assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
<parameter name="executionContext" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="callback" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ContextCallback" token="20001a2" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="state" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
<parameter name="ignoreSyncCtx" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" offset="9"><method assemblyName="mscorlib" name="Run" static="true" token="600158c"><declaringType assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
<parameter name="executionContext" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="callback" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ContextCallback" token="20001a2" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="state" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ThreadHelper.ThreadStart(Object)" method="ThreadHelper.ThreadStart(Object)" offset="50"><method assemblyName="mscorlib" name="ThreadStart" token="6001665"><declaringType assemblyName="mscorlib" name="ThreadHelper" token="20001be" namespace="System.Threading"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="ThreadHelper" token="20001be" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="obj" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
</method>
</frame>
</stackTrace>
</uninstrumented>
<uninstrumented extern="true" methodDisplayName="System.Void System.Buffer.InternalBlockCopy(System.Array src, System.Int32 srcOffsetBytes, System.Array dst, System.Int32 dstOffsetBytes, System.Int32 byteCount)" declaringTypeDisplayName="System.Buffer" methodShortDisplayName="Buffer.InternalBlockCopy(Array, Int32, Array, Int32, Int32)" wikiTopic="External Method Called"><method><definition assemblyName="mscorlib" name="InternalBlockCopy" static="true" token="600081e"><declaringType assemblyName="mscorlib" name="Buffer" token="200009e" namespace="System"/>
<parameter name="src" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="Array" token="2000031" namespace="System"/>
</type>
</parameter>
<parameter name="srcOffsetBytes" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="dst" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="Array" token="2000031" namespace="System"/>
</type>
</parameter>
<parameter name="dstOffsetBytes" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="byteCount" position="4"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
</definition>
</method>
<stackTrace><frame value="  at MemoryStream.ToArray()" method="MemoryStream.ToArray()" offset="51"><method assemblyName="mscorlib" name="ToArray" token="60041e7"><declaringType assemblyName="mscorlib" name="MemoryStream" token="2000708" namespace="System.IO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="MemoryStream" token="2000708" namespace="System.IO"/>
</type>
</parameter>
<resultType spec="SzArray"><elementType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Byte" token="200009f" namespace="System"/>
</elementType>
</resultType>
</method>
</frame>
<frame value="  at CustomAttributeBuilder.InitCustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[], FieldInfo[], Object[])" method="CustomAttributeBuilder.InitCustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[], FieldInfo[], Object[])" offset="1304"><method assemblyName="mscorlib" name="InitCustomAttributeBuilder" token="60057f7"><declaringType assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
</type>
</parameter>
<parameter name="con" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ConstructorInfo" token="200045a" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="constructorArgs" position="2"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter name="namedProperties" position="3"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="PropertyInfo" token="200045e" namespace="System.Reflection"/>
</elementType>
</type>
</parameter>
<parameter name="propertyValues" position="4"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter name="namedFields" position="5"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="FieldInfo" token="200045c" namespace="System.Reflection"/>
</elementType>
</type>
</parameter>
<parameter name="fieldValues" position="6"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
</method>
</frame>
<frame value="  at CustomAttributeBuilder..ctor(ConstructorInfo, Object[])" method="CustomAttributeBuilder..ctor(ConstructorInfo, Object[])" offset="38"><method assemblyName="mscorlib" name=".ctor" token="60057f2"><declaringType assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
</type>
</parameter>
<parameter name="con" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ConstructorInfo" token="200045a" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="constructorArgs" position="2"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
</method>
</frame>
<frame value="  at DynamicMethod.GetDynamicMethodsModule()" method="DynamicMethod.GetDynamicMethodsModule()" offset="96"><method assemblyName="mscorlib" name="GetDynamicMethodsModule" static="true" token="600567d"><declaringType assemblyName="mscorlib" name="DynamicMethod" token="200098a" namespace="System.Reflection.Emit"/>
<resultType spec="Class"><definition assemblyName="mscorlib" name="RuntimeModule" token="2000443" namespace="System.Reflection"/>
</resultType>
</method>
</frame>
<frame value="  at DynamicMethod.Init(String, MethodAttributes, CallingConventions, Type, Type[], Type, Module, Boolean, Boolean)" method="DynamicMethod.Init(String, MethodAttributes, CallingConventions, Type, Type[], Type, Module, Boolean, Boolean)" offset="288"><method assemblyName="mscorlib" name="Init" token="600567e"><declaringType assemblyName="mscorlib" name="DynamicMethod" token="200098a" namespace="System.Reflection.Emit"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="DynamicMethod" token="200098a" namespace="System.Reflection.Emit"/>
</type>
</parameter>
<parameter name="name" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="attributes" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="MethodAttributes" token="200043d" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="callingConvention" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="CallingConventions" token="2000406" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="returnType" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
<parameter name="signature" position="5"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter name="owner" position="6"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
<parameter name="m" position="7"><type spec="Class"><definition assemblyName="mscorlib" name="Module" token="2000442" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="skipVisibility" position="8"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
<parameter name="transparentMethod" position="9"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at LambdaCompiler..ctor(AnalyzedTree, LambdaExpression)" method="LambdaCompiler..ctor(AnalyzedTree, LambdaExpression)" offset="86"><method assemblyName="System.Core" name=".ctor" token="60014c8"><declaringType assemblyName="System.Core" name="LambdaCompiler" token="20002d0" namespace="System.Linq.Expressions.Compiler"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="System.Core" name="LambdaCompiler" token="20002d0" namespace="System.Linq.Expressions.Compiler"/>
</type>
</parameter>
<parameter name="tree" position="1"><type spec="Class"><definition assemblyName="System.Core" name="AnalyzedTree" token="20002b8" namespace="System.Linq.Expressions.Compiler"/>
</type>
</parameter>
<parameter name="lambda" position="2"><type spec="Class"><definition assemblyName="System.Core" name="LambdaExpression" token="200028e" namespace="System.Linq.Expressions"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at LambdaCompiler.Compile(LambdaExpression, DebugInfoGenerator)" method="LambdaCompiler.Compile(LambdaExpression, DebugInfoGenerator)" offset="17"><method assemblyName="System.Core" name="Compile" static="true" token="60014d0"><declaringType assemblyName="System.Core" name="LambdaCompiler" token="20002d0" namespace="System.Linq.Expressions.Compiler"/>
<parameter name="lambda" position="0"><type spec="Class"><definition assemblyName="System.Core" name="LambdaExpression" token="200028e" namespace="System.Linq.Expressions"/>
</type>
</parameter>
<parameter name="debugInfoGenerator" position="1"><type spec="Class"><definition assemblyName="System.Core" name="DebugInfoGenerator" token="20002c7" namespace="System.Runtime.CompilerServices"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Delegate" token="2000015" namespace="System"/>
</resultType>
</method>
</frame>
<frame value="  at Expression`1.Compile()" method="Expression`1.Compile()" offset="2"><method assemblyName="System.Core" name="Compile" token="60012d8"><declaringType assemblyName="System.Core" name="Expression`1" token="200028f" namespace="System.Linq.Expressions"><genericParameter value="TDelegate"/>
</declaringType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="System.Core" name="Expression`1" token="200028f" namespace="System.Linq.Expressions"><genericParameter value="TDelegate"/>
</definition>
<genericTypeArgument spec="GenericTypeParameter" index="0"/>
</type>
</parameter>
<resultType spec="GenericTypeParameter" index="0"/>
</method>
</frame>
<frame value="  at DbSetDiscoveryService.GetSets()" method="DbSetDiscoveryService.GetSets()" offset="398"><method assemblyName="EntityFramework" name="GetSets" token="6000c71"><declaringType assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Dictionary`2" token="2000354" namespace="System.Collections.Generic"><genericParameter value="TKey"/>
<genericParameter value="TValue"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</genericTypeArgument>
<genericTypeArgument spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</genericTypeArgument>
</genericTypeArgument>
</resultType>
</method>
</frame>
<frame value="  at DbSetDiscoveryService.InitializeSets()" method="DbSetDiscoveryService.InitializeSets()" offset="1"><method assemblyName="EntityFramework" name="InitializeSets" token="6000c72"><declaringType assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at DbContext.DiscoverAndInitializeSets()" method="DbContext.DiscoverAndInitializeSets()" offset="6"><method assemblyName="EntityFramework" name="DiscoverAndInitializeSets" token="6000105"><declaringType assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at DbContext.InitializeLazyInternalContext(IInternalConnection, DbCompiledModel)" method="DbContext.InitializeLazyInternalContext(IInternalConnection, DbCompiledModel)" offset="15"><method assemblyName="EntityFramework" name="InitializeLazyInternalContext" token="6000104"><declaringType assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
</type>
</parameter>
<parameter name="internalConnection" position="1"><type spec="Class"><definition assemblyName="EntityFramework" name="IInternalConnection" token="2000019" namespace="System.Data.Entity.Internal"/>
</type>
</parameter>
<parameter name="model" position="2"><type spec="Class"><definition assemblyName="EntityFramework" name="DbCompiledModel" token="20000d5" namespace="System.Data.Entity.Infrastructure"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at DbContext..ctor()" method="DbContext..ctor()" offset="24"><method assemblyName="EntityFramework" name=".ctor" token="60000fd"><declaringType assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at EMDatabase..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDatabase.cs(28)" method="EMDatabase..ctor()" offset="1" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDatabase.cs" line="28"><method assemblyName="emAPI" name=".ctor" token="600025e"><declaringType assemblyName="emAPI" name="EMDatabase" token="2000022" namespace="emAPI.DAL"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="EMDatabase" token="2000022" namespace="emAPI.DAL"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[    /// </summary>
    class EMDatabase : DbContext
    {]]></beforeSource>
<source><![CDATA[        internal EMDatabase()]]></source>
<afterSource><![CDATA[        {
            //Seed method to populate the database with sample data
            System.Data.Entity.Database.SetInitializer(new SampleData());]]></afterSource>
</frame>
<frame value="  at EMDataManager..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDataManager.cs(36)" method="EMDataManager..ctor()" offset="9" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDataManager.cs" line="36"><method assemblyName="emAPI" name=".ctor" token="6000190"><declaringType assemblyName="emAPI" name="EMDataManager" token="2000015" namespace="emAPI.DAL"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="EMDataManager" token="2000015" namespace="emAPI.DAL"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[        /// </summary>
        public EMDataManager()
        {]]></beforeSource>
<source><![CDATA[            emdb = new EMDatabase();]]></source>
<afterSource><![CDATA[        }

//* * * METHODS]]></afterSource>
</frame>
<frame value="  at EMMediator..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\EMMediator.cs(43)" method="EMMediator..ctor()" offset="9" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\EMMediator.cs" line="43"><method assemblyName="emAPI" name=".ctor" token="6000249"><declaringType assemblyName="emAPI" name="EMMediator" token="2000020" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="EMMediator" token="2000020" namespace="emAPI.Controllers"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[
        internal EMMediator()
        {]]></beforeSource>
<source><![CDATA[            DataManager = new EMDataManager();]]></source>
<afterSource><![CDATA[        }

        public void addPropertyToUser(int propertyId, int userId)]]></afterSource>
</frame>
<frame value="  at ApportionmentManager..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs(27)" method="ApportionmentManager..ctor()" offset="1" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs" line="27"><method assemblyName="emAPI" name=".ctor" token="60001f8"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[    /// </summary>
    public class ApportionmentManager : IApportionmentManager
    {]]></beforeSource>
<source><![CDATA[        private EMMediator mediator = new EMMediator();]]></source>
<afterSource><![CDATA[

        /// <summary>]]></afterSource>
</frame>
<frame value="  at ApportionmentManagerFactory.Create()" method="ApportionmentManagerFactory.Create()" offset="0"><method assemblyName="emAPI.Explorables" name="Create" static="true" token="6000002"><declaringType assemblyName="emAPI.Explorables" name="ApportionmentManagerFactory" token="2000002" namespace="emAPI.Controllers"/>
<resultType spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</resultType>
</method>
</frame>
<frame value="  at ThreadHelper.ThreadStart_Context(Object)" method="ThreadHelper.ThreadStart_Context(Object)" offset="59"><method assemblyName="mscorlib" name="ThreadStart_Context" static="true" token="6001664"><declaringType assemblyName="mscorlib" name="ThreadHelper" token="20001be" namespace="System.Threading"/>
<parameter name="state" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" offset="142"><method assemblyName="mscorlib" name="Run" static="true" token="600158d"><declaringType assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
<parameter name="executionContext" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="callback" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ContextCallback" token="20001a2" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="state" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
<parameter name="ignoreSyncCtx" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" offset="9"><method assemblyName="mscorlib" name="Run" static="true" token="600158c"><declaringType assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
<parameter name="executionContext" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="callback" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ContextCallback" token="20001a2" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="state" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ThreadHelper.ThreadStart(Object)" method="ThreadHelper.ThreadStart(Object)" offset="50"><method assemblyName="mscorlib" name="ThreadStart" token="6001665"><declaringType assemblyName="mscorlib" name="ThreadHelper" token="20001be" namespace="System.Threading"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="ThreadHelper" token="20001be" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="obj" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
</method>
</frame>
</stackTrace>
</uninstrumented>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="2.43146049288387"/>
<generatedTest id="4458ab93-cb0e-44e6-ad98-6bd1a6e42055" index="1" run="2" exceptionState="unexpected" status="exception" duplicateOf="6000002" failed="true" failureText="Exception not validated by PexAllowedExceptionFromTypeUnderTest(typeof(InvalidOperationException)), PexAllowedExceptionFromTypeUnderTest(typeof(ArgumentException), AcceptExceptionSubtypes), contract requires failure at type-under-test surface, documented." generated="true" assemblyName="emAPI.Tests" name="setupDatedChunksForApportionToPeriodThrowsArgumentOutOfRangeException158" token="6000002"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<rcov name="Block" dcov="8" dtot="80" acov="8" atot="80"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">new ApportionmentManager{}</value>
<value name="startDate">0001-01-01 00:00:00Z</value>
<value name="endDate">0001-01-01 00:00:00Z</value>
<value name="interval">0</value>
<code><![CDATA[ApportionmentManager apportionmentManager;
List<Chunk> list;
apportionmentManager = new ApportionmentManager();
list = this.setupDatedChunksForApportionToPeriod
           (apportionmentManager, default(DateTime), 
            default(DateTime), (AppotionmentPeriod)0);
]]></code>
<methodCode imports="emAPI.ClassLibrary;System.Collections.Generic;System;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(ApportionmentManagerTest))]
[PexRaisedException(typeof(ArgumentOutOfRangeException))]
public void setupDatedChunksForApportionToPeriodThrowsArgumentOutOfRangeException270()
{
    ApportionmentManager apportionmentManager;
    List<Chunk> list;
    apportionmentManager = new ApportionmentManager();
    list = this.setupDatedChunksForApportionToPeriod
               (apportionmentManager, default(DateTime), 
                default(DateTime), (AppotionmentPeriod)0);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="emAPI.Tests" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.Tests.dll"/>
<reference name="emAPI" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.dll"/>
<reference name="emAPI_ClassLibrary" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI_ClassLibrary.dll"/>
<exceptionChain><exception typeDisplayName="ArgumentOutOfRangeException" source="mscorlib"><message><![CDATA[The added or subtracted value results in an un-representable DateTime.
Parameter name: value]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="ArgumentOutOfRangeException" token="2000094" namespace="System"/>
</type>
<value name="paramName">value</value>
<stackTrace><frame value="  at DateTime.Subtract(TimeSpan)" method="DateTime.Subtract(TimeSpan)" offset="53"><method assemblyName="mscorlib" name="Subtract" token="60065f1"><declaringType assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
<parameter this="true" name="this" position="0"><type spec="ManagedPointer"><elementType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="TimeSpan" token="200016c" namespace="System"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</resultType>
</method>
</frame>
<frame value="  at ApportionmentManager.setupDatedChunksForApportionToPeriod(DateTime, DateTime, AppotionmentPeriod) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs(173)" method="ApportionmentManager.setupDatedChunksForApportionToPeriod(DateTime, DateTime, AppotionmentPeriod)" offset="299" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs" line="173"><method assemblyName="emAPI" name="setupDatedChunksForApportionToPeriod" token="60001f0"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="startDate" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="endDate" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="interval" position="3"><type spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="AppotionmentPeriod" token="2000011" namespace="emAPI.ClassLibrary"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[                }

                ///take on day off each date date to avoid overlapping date ranges]]></beforeSource>
<source><![CDATA[                chunk.EndDate = chunk.EndDate.Subtract(oneDay);]]></source>
<afterSource><![CDATA[                datedChunks.Add(chunk);
                i++;
]]></afterSource>
</frame>
<frame value="  at ApportionmentManagerTest.setupDatedChunksForApportionToPeriod(ApportionmentManager, DateTime, DateTime, AppotionmentPeriod) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs(27)" method="ApportionmentManagerTest.setupDatedChunksForApportionToPeriod(ApportionmentManager, DateTime, DateTime, AppotionmentPeriod)" offset="6" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs" line="27"><method assemblyName="emAPI.Tests" name="setupDatedChunksForApportionToPeriod" token="6000001"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="startDate" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="endDate" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="interval" position="4"><type spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="AppotionmentPeriod" token="2000011" namespace="emAPI.ClassLibrary"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            AppotionmentPeriod interval
        )
        {]]></beforeSource>
<source><![CDATA[            List<Chunk> result = target.setupDatedChunksForApportionToPeriod(startDate, endDate, interval);]]></source>
<afterSource><![CDATA[            return result;
            // TODO: add assertions to method ApportionmentManagerTest.setupDatedChunksForApportionToPeriod(ApportionmentManager, DateTime, DateTime, AppotionmentPeriod)
        }]]></afterSource>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<pathCondition><![CDATA[return target != (ApportionmentManager)null && 
       4u < (uint)(-1 + (int)interval) && methodof(target.setupDatedChunksForApportionToPeriod) == methodof(ApportionmentManager.setupDatedChunksForApportionToPeriod);
]]></pathCondition>
</generatedTest>
<log level="message" time="2012-09-03 11:32:09Z" category="coverage" message="coverage increased from 0 to 8 blocks (+8) after flipping emAPI.Controllers.ApportionmentManagerTest.setupDatedChunksForApportionToPeriod at 0x0006"/>
<uninstrumented methodDisplayName="System.DateTime System.Globalization.Calendar.AddDays(System.DateTime time, System.Int32 days)" declaringTypeDisplayName="System.Globalization.Calendar" methodShortDisplayName="Calendar.AddDays(DateTime, Int32)" wikiTopic="Uninstrumented Method Called"><method><definition assemblyName="mscorlib" name="AddDays" token="6002d1e"><declaringType assemblyName="mscorlib" name="Calendar" token="200049e" namespace="System.Globalization"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="Calendar" token="200049e" namespace="System.Globalization"/>
</type>
</parameter>
<parameter name="time" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="days" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</resultType>
</definition>
</method>
<stackTrace><frame value="  at DateTime.get_Ticks()" method="DateTime.get_Ticks()" offset="0"><method assemblyName="mscorlib" name="get_Ticks" token="6000438"><declaringType assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
<parameter this="true" name="this" position="0"><type spec="ManagedPointer"><elementType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</elementType>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int64" token="20000ff" namespace="System"/>
</resultType>
</method>
</frame>
<frame value="  at Calendar.Add(DateTime, Double, Int32)" method="Calendar.Add(DateTime, Double, Int32)" offset="84"><method assemblyName="mscorlib" name="Add" token="6002d1c"><declaringType assemblyName="mscorlib" name="Calendar" token="200049e" namespace="System.Globalization"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="Calendar" token="200049e" namespace="System.Globalization"/>
</type>
</parameter>
<parameter name="time" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="value" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Double" token="20000d5" namespace="System"/>
</type>
</parameter>
<parameter name="scale" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</resultType>
</method>
</frame>
<frame value="  at Calendar.AddDays(DateTime, Int32)" method="Calendar.AddDays(DateTime, Int32)" offset="0"><method assemblyName="mscorlib" name="AddDays" token="6002d1e"><declaringType assemblyName="mscorlib" name="Calendar" token="200049e" namespace="System.Globalization"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="Calendar" token="200049e" namespace="System.Globalization"/>
</type>
</parameter>
<parameter name="time" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="days" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</resultType>
</method>
</frame>
<frame value="  at ApportionmentManager.setupDatedChunksForApportionToPeriod(DateTime, DateTime, AppotionmentPeriod) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs(141)" method="ApportionmentManager.setupDatedChunksForApportionToPeriod(DateTime, DateTime, AppotionmentPeriod)" offset="84" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs" line="141"><method assemblyName="emAPI" name="setupDatedChunksForApportionToPeriod" token="60001f0"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="startDate" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="endDate" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="interval" position="3"><type spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="AppotionmentPeriod" token="2000011" namespace="emAPI.ClassLibrary"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[                    case 1: ///interval is daily
                        ///
]]></beforeSource>
<source><![CDATA[                        chunk.StartDate = calendar.AddDays(startDate, i);]]></source>
<afterSource><![CDATA[                        chunk.EndDate = calendar.AddDays(chunk.StartDate, 1);
                        break;
]]></afterSource>
</frame>
<frame value="  at ApportionmentManagerTest.setupDatedChunksForApportionToPeriod(ApportionmentManager, DateTime, DateTime, AppotionmentPeriod) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs(27)" method="ApportionmentManagerTest.setupDatedChunksForApportionToPeriod(ApportionmentManager, DateTime, DateTime, AppotionmentPeriod)" offset="6" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs" line="27"><method assemblyName="emAPI.Tests" name="setupDatedChunksForApportionToPeriod" token="6000001"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="startDate" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="endDate" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="interval" position="4"><type spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="AppotionmentPeriod" token="2000011" namespace="emAPI.ClassLibrary"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            AppotionmentPeriod interval
        )
        {]]></beforeSource>
<source><![CDATA[            List<Chunk> result = target.setupDatedChunksForApportionToPeriod(startDate, endDate, interval);]]></source>
<afterSource><![CDATA[            return result;
            // TODO: add assertions to method ApportionmentManagerTest.setupDatedChunksForApportionToPeriod(ApportionmentManager, DateTime, DateTime, AppotionmentPeriod)
        }]]></afterSource>
</frame>
</stackTrace>
</uninstrumented>
<uninstrumented methodDisplayName="System.DateTime System.Globalization.Calendar.AddDays(System.DateTime time, System.Int32 days)" declaringTypeDisplayName="System.Globalization.Calendar" methodShortDisplayName="Calendar.AddDays(DateTime, Int32)" wikiTopic="Uninstrumented Method Called"><method><definition assemblyName="mscorlib" name="AddDays" token="6002d1e"><declaringType assemblyName="mscorlib" name="Calendar" token="200049e" namespace="System.Globalization"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="Calendar" token="200049e" namespace="System.Globalization"/>
</type>
</parameter>
<parameter name="time" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="days" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</resultType>
</definition>
</method>
<stackTrace><frame value="  at ApportionmentManager.setupDatedChunksForApportionToPeriod(DateTime, DateTime, AppotionmentPeriod) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs(141)" method="ApportionmentManager.setupDatedChunksForApportionToPeriod(DateTime, DateTime, AppotionmentPeriod)" offset="84" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs" line="141"><method assemblyName="emAPI" name="setupDatedChunksForApportionToPeriod" token="60001f0"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="startDate" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="endDate" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="interval" position="3"><type spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="AppotionmentPeriod" token="2000011" namespace="emAPI.ClassLibrary"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[                    case 1: ///interval is daily
                        ///
]]></beforeSource>
<source><![CDATA[                        chunk.StartDate = calendar.AddDays(startDate, i);]]></source>
<afterSource><![CDATA[                        chunk.EndDate = calendar.AddDays(chunk.StartDate, 1);
                        break;
]]></afterSource>
</frame>
<frame value="  at ApportionmentManagerTest.setupDatedChunksForApportionToPeriod(ApportionmentManager, DateTime, DateTime, AppotionmentPeriod) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs(27)" method="ApportionmentManagerTest.setupDatedChunksForApportionToPeriod(ApportionmentManager, DateTime, DateTime, AppotionmentPeriod)" offset="6" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs" line="27"><method assemblyName="emAPI.Tests" name="setupDatedChunksForApportionToPeriod" token="6000001"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="startDate" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="endDate" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="interval" position="4"><type spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="AppotionmentPeriod" token="2000011" namespace="emAPI.ClassLibrary"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            AppotionmentPeriod interval
        )
        {]]></beforeSource>
<source><![CDATA[            List<Chunk> result = target.setupDatedChunksForApportionToPeriod(startDate, endDate, interval);]]></source>
<afterSource><![CDATA[            return result;
            // TODO: add assertions to method ApportionmentManagerTest.setupDatedChunksForApportionToPeriod(ApportionmentManager, DateTime, DateTime, AppotionmentPeriod)
        }]]></afterSource>
</frame>
</stackTrace>
</uninstrumented>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.08"/>
<generatedTest id="bafe0239-861e-477b-94f7-6b47d976d831" index="2" run="3" status="normaltermination" duplicateOf="6000003" generated="true" assemblyName="emAPI.Tests" name="setupDatedChunksForApportionToPeriod829" token="6000003"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<rcov name="Block" dcov="13" dtot="0" acov="21" atot="80"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">new ApportionmentManager{}</value>
<value name="startDate">0001-01-01 00:00:00Z</value>
<value name="endDate">0001-01-01 00:00:00Z</value>
<value name="interval">Daily</value>
<value name="result(target)">new ApportionmentManager{}</value>
<value name="result">{new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-01 23:00:00Z,Amount=0}}</value>
<code><![CDATA[ApportionmentManager apportionmentManager;
List<Chunk> list;
apportionmentManager = new ApportionmentManager();
list = this.setupDatedChunksForApportionToPeriod
           (apportionmentManager, default(DateTime), 
            default(DateTime), AppotionmentPeriod.Daily);
Assert.IsNotNull((object)list);
Assert.AreEqual<int>(4, list.Capacity);
Assert.AreEqual<int>(1, list.Count);
Assert.IsNotNull((object)apportionmentManager);
]]></code>
<methodCode imports="emAPI.ClassLibrary;System.Collections.Generic;System;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(ApportionmentManagerTest))]
public void setupDatedChunksForApportionToPeriod82901()
{
    ApportionmentManager apportionmentManager;
    List<Chunk> list;
    apportionmentManager = new ApportionmentManager();
    list = this.setupDatedChunksForApportionToPeriod
               (apportionmentManager, default(DateTime), 
                default(DateTime), AppotionmentPeriod.Daily);
    Assert.IsNotNull((object)list);
    Assert.AreEqual<int>(4, list.Capacity);
    Assert.AreEqual<int>(1, list.Count);
    Assert.IsNotNull((object)apportionmentManager);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="emAPI.Tests" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.Tests.dll"/>
<reference name="emAPI" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.dll"/>
<reference name="emAPI_ClassLibrary" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI_ClassLibrary.dll"/>
<pathCondition><![CDATA[return target != (ApportionmentManager)null && (long)(4611686018427387903uL & (13835058055282163712uL ^ endDate.dateData)) < 828000000000L && 
                                               methodof(target.setupDatedChunksForApportionToPeriod) == methodof(ApportionmentManager.setupDatedChunksForApportionToPeriod) && interval == AppotionmentPeriod.Daily;
]]></pathCondition>
</generatedTest>
<log level="message" time="2012-09-03 11:32:09Z" category="coverage" message="coverage increased from 8 to 21 blocks (+13) after flipping emAPI.Controllers.ApportionmentManager.setupDatedChunksForApportionToPeriod at 0x0031"/>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.03"/>
<uninstrumented methodDisplayName="System.DateTime System.Globalization.GregorianCalendar.AddMonths(System.DateTime time, System.Int32 months)" declaringTypeDisplayName="System.Globalization.GregorianCalendar" methodShortDisplayName="GregorianCalendar.AddMonths(DateTime, Int32)" wikiTopic="Uninstrumented Method Called"><method><definition assemblyName="mscorlib" name="AddMonths" token="6002f52"><declaringType assemblyName="mscorlib" name="GregorianCalendar" token="20004ca" namespace="System.Globalization"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="GregorianCalendar" token="20004ca" namespace="System.Globalization"/>
</type>
</parameter>
<parameter name="time" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="months" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</resultType>
</definition>
</method>
<stackTrace><frame value="  at DateTime.get_Ticks()" method="DateTime.get_Ticks()" offset="0"><method assemblyName="mscorlib" name="get_Ticks" token="6000438"><declaringType assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
<parameter this="true" name="this" position="0"><type spec="ManagedPointer"><elementType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</elementType>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int64" token="20000ff" namespace="System"/>
</resultType>
</method>
</frame>
<frame value="  at GregorianCalendar.AddMonths(DateTime, Int32)" method="GregorianCalendar.AddMonths(DateTime, Int32)" offset="85"><method assemblyName="mscorlib" name="AddMonths" token="6002f52"><declaringType assemblyName="mscorlib" name="GregorianCalendar" token="20004ca" namespace="System.Globalization"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="GregorianCalendar" token="20004ca" namespace="System.Globalization"/>
</type>
</parameter>
<parameter name="time" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="months" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</resultType>
</method>
</frame>
<frame value="  at ApportionmentManager.setupDatedChunksForApportionToPeriod(DateTime, DateTime, AppotionmentPeriod) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs(159)" method="ApportionmentManager.setupDatedChunksForApportionToPeriod(DateTime, DateTime, AppotionmentPeriod)" offset="209" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs" line="159"><method assemblyName="emAPI" name="setupDatedChunksForApportionToPeriod" token="60001f0"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="startDate" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="endDate" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="interval" position="3"><type spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="AppotionmentPeriod" token="2000011" namespace="emAPI.ClassLibrary"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[
                    case 4: ///interval is quarterly
                        ///]]></beforeSource>
<source><![CDATA[                        chunk.StartDate = calendar.AddMonths(startDate, 3 * i);]]></source>
<afterSource><![CDATA[                        chunk.EndDate = calendar.AddMonths(chunk.StartDate, 3 * 1);

                        break;]]></afterSource>
</frame>
<frame value="  at ApportionmentManagerTest.setupDatedChunksForApportionToPeriod(ApportionmentManager, DateTime, DateTime, AppotionmentPeriod) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs(27)" method="ApportionmentManagerTest.setupDatedChunksForApportionToPeriod(ApportionmentManager, DateTime, DateTime, AppotionmentPeriod)" offset="6" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs" line="27"><method assemblyName="emAPI.Tests" name="setupDatedChunksForApportionToPeriod" token="6000001"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="startDate" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="endDate" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="interval" position="4"><type spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="AppotionmentPeriod" token="2000011" namespace="emAPI.ClassLibrary"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            AppotionmentPeriod interval
        )
        {]]></beforeSource>
<source><![CDATA[            List<Chunk> result = target.setupDatedChunksForApportionToPeriod(startDate, endDate, interval);]]></source>
<afterSource><![CDATA[            return result;
            // TODO: add assertions to method ApportionmentManagerTest.setupDatedChunksForApportionToPeriod(ApportionmentManager, DateTime, DateTime, AppotionmentPeriod)
        }]]></afterSource>
</frame>
</stackTrace>
</uninstrumented>
<uninstrumented methodDisplayName="System.DateTime System.Globalization.GregorianCalendar.AddMonths(System.DateTime time, System.Int32 months)" declaringTypeDisplayName="System.Globalization.GregorianCalendar" methodShortDisplayName="GregorianCalendar.AddMonths(DateTime, Int32)" wikiTopic="Uninstrumented Method Called"><method><definition assemblyName="mscorlib" name="AddMonths" token="6002f52"><declaringType assemblyName="mscorlib" name="GregorianCalendar" token="20004ca" namespace="System.Globalization"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="GregorianCalendar" token="20004ca" namespace="System.Globalization"/>
</type>
</parameter>
<parameter name="time" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="months" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</resultType>
</definition>
</method>
<stackTrace><frame value="  at ApportionmentManager.setupDatedChunksForApportionToPeriod(DateTime, DateTime, AppotionmentPeriod) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs(159)" method="ApportionmentManager.setupDatedChunksForApportionToPeriod(DateTime, DateTime, AppotionmentPeriod)" offset="209" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs" line="159"><method assemblyName="emAPI" name="setupDatedChunksForApportionToPeriod" token="60001f0"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="startDate" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="endDate" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="interval" position="3"><type spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="AppotionmentPeriod" token="2000011" namespace="emAPI.ClassLibrary"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[
                    case 4: ///interval is quarterly
                        ///]]></beforeSource>
<source><![CDATA[                        chunk.StartDate = calendar.AddMonths(startDate, 3 * i);]]></source>
<afterSource><![CDATA[                        chunk.EndDate = calendar.AddMonths(chunk.StartDate, 3 * 1);

                        break;]]></afterSource>
</frame>
<frame value="  at ApportionmentManagerTest.setupDatedChunksForApportionToPeriod(ApportionmentManager, DateTime, DateTime, AppotionmentPeriod) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs(27)" method="ApportionmentManagerTest.setupDatedChunksForApportionToPeriod(ApportionmentManager, DateTime, DateTime, AppotionmentPeriod)" offset="6" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs" line="27"><method assemblyName="emAPI.Tests" name="setupDatedChunksForApportionToPeriod" token="6000001"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="startDate" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="endDate" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="interval" position="4"><type spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="AppotionmentPeriod" token="2000011" namespace="emAPI.ClassLibrary"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            AppotionmentPeriod interval
        )
        {]]></beforeSource>
<source><![CDATA[            List<Chunk> result = target.setupDatedChunksForApportionToPeriod(startDate, endDate, interval);]]></source>
<afterSource><![CDATA[            return result;
            // TODO: add assertions to method ApportionmentManagerTest.setupDatedChunksForApportionToPeriod(ApportionmentManager, DateTime, DateTime, AppotionmentPeriod)
        }]]></afterSource>
</frame>
</stackTrace>
</uninstrumented>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.03"/>
<generatedTest id="a17bc5bf-c8e6-4203-b64a-207653f2687d" index="3" run="5" status="normaltermination" duplicateOf="6000004" generated="true" assemblyName="emAPI.Tests" name="setupDatedChunksForApportionToPeriod50" token="6000004"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<rcov name="Block" dcov="6" dtot="0" acov="27" atot="80"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">new ApportionmentManager{}</value>
<value name="startDate">0001-01-01 00:00:00Z</value>
<value name="endDate">0001-01-01 00:00:00Z</value>
<value name="interval">Quarterly</value>
<value name="result(target)">new ApportionmentManager{}</value>
<value name="result">{new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-03-31 23:00:00Z,Amount=0}}</value>
<code><![CDATA[ApportionmentManager apportionmentManager;
List<Chunk> list;
apportionmentManager = new ApportionmentManager();
list = this.setupDatedChunksForApportionToPeriod
           (apportionmentManager, default(DateTime), 
            default(DateTime), AppotionmentPeriod.Quarterly);
Assert.IsNotNull((object)list);
Assert.AreEqual<int>(4, list.Capacity);
Assert.AreEqual<int>(1, list.Count);
Assert.IsNotNull((object)apportionmentManager);
]]></code>
<methodCode imports="emAPI.ClassLibrary;System.Collections.Generic;System;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(ApportionmentManagerTest))]
public void setupDatedChunksForApportionToPeriod5001()
{
    ApportionmentManager apportionmentManager;
    List<Chunk> list;
    apportionmentManager = new ApportionmentManager();
    list = this.setupDatedChunksForApportionToPeriod
               (apportionmentManager, default(DateTime), 
                default(DateTime), AppotionmentPeriod.Quarterly);
    Assert.IsNotNull((object)list);
    Assert.AreEqual<int>(4, list.Capacity);
    Assert.AreEqual<int>(1, list.Count);
    Assert.IsNotNull((object)apportionmentManager);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="emAPI.Tests" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.Tests.dll"/>
<reference name="emAPI" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.dll"/>
<reference name="emAPI_ClassLibrary" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI_ClassLibrary.dll"/>
<pathCondition><![CDATA[return target != (ApportionmentManager)null && (long)(4611686018427387903uL & (13835058055282163712uL ^ endDate.dateData)) < 77724000000000L && 
                                               methodof(target.setupDatedChunksForApportionToPeriod) == methodof(ApportionmentManager.setupDatedChunksForApportionToPeriod) && interval == AppotionmentPeriod.Quarterly;
]]></pathCondition>
</generatedTest>
<log level="message" time="2012-09-03 11:32:09Z" category="coverage" message="coverage increased from 21 to 27 blocks (+6) after flipping emAPI.Controllers.ApportionmentManager.setupDatedChunksForApportionToPeriod at 0x0031"/>
<uninstrumented methodDisplayName="System.DateTime System.Globalization.GregorianCalendar.AddYears(System.DateTime time, System.Int32 years)" declaringTypeDisplayName="System.Globalization.GregorianCalendar" methodShortDisplayName="GregorianCalendar.AddYears(DateTime, Int32)" wikiTopic="Uninstrumented Method Called"><method><definition assemblyName="mscorlib" name="AddYears" token="6002f53"><declaringType assemblyName="mscorlib" name="GregorianCalendar" token="20004ca" namespace="System.Globalization"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="GregorianCalendar" token="20004ca" namespace="System.Globalization"/>
</type>
</parameter>
<parameter name="time" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="years" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</resultType>
</definition>
</method>
<stackTrace><frame value="  at DateTime.get_Ticks()" method="DateTime.get_Ticks()" offset="0"><method assemblyName="mscorlib" name="get_Ticks" token="6000438"><declaringType assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
<parameter this="true" name="this" position="0"><type spec="ManagedPointer"><elementType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</elementType>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int64" token="20000ff" namespace="System"/>
</resultType>
</method>
</frame>
<frame value="  at GregorianCalendar.AddMonths(DateTime, Int32)" method="GregorianCalendar.AddMonths(DateTime, Int32)" offset="85"><method assemblyName="mscorlib" name="AddMonths" token="6002f52"><declaringType assemblyName="mscorlib" name="GregorianCalendar" token="20004ca" namespace="System.Globalization"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="GregorianCalendar" token="20004ca" namespace="System.Globalization"/>
</type>
</parameter>
<parameter name="time" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="months" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</resultType>
</method>
</frame>
<frame value="  at GregorianCalendar.AddYears(DateTime, Int32)" method="GregorianCalendar.AddYears(DateTime, Int32)" offset="0"><method assemblyName="mscorlib" name="AddYears" token="6002f53"><declaringType assemblyName="mscorlib" name="GregorianCalendar" token="20004ca" namespace="System.Globalization"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="GregorianCalendar" token="20004ca" namespace="System.Globalization"/>
</type>
</parameter>
<parameter name="time" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="years" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</resultType>
</method>
</frame>
<frame value="  at ApportionmentManager.setupDatedChunksForApportionToPeriod(DateTime, DateTime, AppotionmentPeriod) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs(166)" method="ApportionmentManager.setupDatedChunksForApportionToPeriod(DateTime, DateTime, AppotionmentPeriod)" offset="249" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs" line="166"><method assemblyName="emAPI" name="setupDatedChunksForApportionToPeriod" token="60001f0"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="startDate" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="endDate" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="interval" position="3"><type spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="AppotionmentPeriod" token="2000011" namespace="emAPI.ClassLibrary"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[
                    case 5: ///interval is annually
                        ///]]></beforeSource>
<source><![CDATA[                        chunk.StartDate = calendar.AddYears(startDate, i);]]></source>
<afterSource><![CDATA[                        chunk.EndDate = calendar.AddYears(chunk.StartDate, 1);
                        break;
]]></afterSource>
</frame>
<frame value="  at ApportionmentManagerTest.setupDatedChunksForApportionToPeriod(ApportionmentManager, DateTime, DateTime, AppotionmentPeriod) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs(27)" method="ApportionmentManagerTest.setupDatedChunksForApportionToPeriod(ApportionmentManager, DateTime, DateTime, AppotionmentPeriod)" offset="6" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs" line="27"><method assemblyName="emAPI.Tests" name="setupDatedChunksForApportionToPeriod" token="6000001"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="startDate" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="endDate" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="interval" position="4"><type spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="AppotionmentPeriod" token="2000011" namespace="emAPI.ClassLibrary"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            AppotionmentPeriod interval
        )
        {]]></beforeSource>
<source><![CDATA[            List<Chunk> result = target.setupDatedChunksForApportionToPeriod(startDate, endDate, interval);]]></source>
<afterSource><![CDATA[            return result;
            // TODO: add assertions to method ApportionmentManagerTest.setupDatedChunksForApportionToPeriod(ApportionmentManager, DateTime, DateTime, AppotionmentPeriod)
        }]]></afterSource>
</frame>
</stackTrace>
</uninstrumented>
<uninstrumented methodDisplayName="System.DateTime System.Globalization.GregorianCalendar.AddYears(System.DateTime time, System.Int32 years)" declaringTypeDisplayName="System.Globalization.GregorianCalendar" methodShortDisplayName="GregorianCalendar.AddYears(DateTime, Int32)" wikiTopic="Uninstrumented Method Called"><method><definition assemblyName="mscorlib" name="AddYears" token="6002f53"><declaringType assemblyName="mscorlib" name="GregorianCalendar" token="20004ca" namespace="System.Globalization"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="GregorianCalendar" token="20004ca" namespace="System.Globalization"/>
</type>
</parameter>
<parameter name="time" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="years" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</resultType>
</definition>
</method>
<stackTrace><frame value="  at ApportionmentManager.setupDatedChunksForApportionToPeriod(DateTime, DateTime, AppotionmentPeriod) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs(166)" method="ApportionmentManager.setupDatedChunksForApportionToPeriod(DateTime, DateTime, AppotionmentPeriod)" offset="249" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs" line="166"><method assemblyName="emAPI" name="setupDatedChunksForApportionToPeriod" token="60001f0"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="startDate" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="endDate" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="interval" position="3"><type spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="AppotionmentPeriod" token="2000011" namespace="emAPI.ClassLibrary"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[
                    case 5: ///interval is annually
                        ///]]></beforeSource>
<source><![CDATA[                        chunk.StartDate = calendar.AddYears(startDate, i);]]></source>
<afterSource><![CDATA[                        chunk.EndDate = calendar.AddYears(chunk.StartDate, 1);
                        break;
]]></afterSource>
</frame>
<frame value="  at ApportionmentManagerTest.setupDatedChunksForApportionToPeriod(ApportionmentManager, DateTime, DateTime, AppotionmentPeriod) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs(27)" method="ApportionmentManagerTest.setupDatedChunksForApportionToPeriod(ApportionmentManager, DateTime, DateTime, AppotionmentPeriod)" offset="6" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs" line="27"><method assemblyName="emAPI.Tests" name="setupDatedChunksForApportionToPeriod" token="6000001"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="startDate" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="endDate" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="interval" position="4"><type spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="AppotionmentPeriod" token="2000011" namespace="emAPI.ClassLibrary"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            AppotionmentPeriod interval
        )
        {]]></beforeSource>
<source><![CDATA[            List<Chunk> result = target.setupDatedChunksForApportionToPeriod(startDate, endDate, interval);]]></source>
<afterSource><![CDATA[            return result;
            // TODO: add assertions to method ApportionmentManagerTest.setupDatedChunksForApportionToPeriod(ApportionmentManager, DateTime, DateTime, AppotionmentPeriod)
        }]]></afterSource>
</frame>
</stackTrace>
</uninstrumented>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.03"/>
<generatedTest id="2a83e1f0-aebe-4354-85ed-a51df394d64a" index="4" run="6" status="normaltermination" duplicateOf="6000005" generated="true" assemblyName="emAPI.Tests" name="setupDatedChunksForApportionToPeriod379" token="6000005"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<rcov name="Block" dcov="6" dtot="0" acov="33" atot="80"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">new ApportionmentManager{}</value>
<value name="startDate">0001-01-01 00:00:00Z</value>
<value name="endDate">0001-01-01 00:00:00Z</value>
<value name="interval">Annually</value>
<value name="result(target)">new ApportionmentManager{}</value>
<value name="result">{new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-12-31 23:00:00Z,Amount=0}}</value>
<code><![CDATA[ApportionmentManager apportionmentManager;
List<Chunk> list;
apportionmentManager = new ApportionmentManager();
list = this.setupDatedChunksForApportionToPeriod
           (apportionmentManager, default(DateTime), 
            default(DateTime), AppotionmentPeriod.Annually);
Assert.IsNotNull((object)list);
Assert.AreEqual<int>(4, list.Capacity);
Assert.AreEqual<int>(1, list.Count);
Assert.IsNotNull((object)apportionmentManager);
]]></code>
<methodCode imports="emAPI.ClassLibrary;System.Collections.Generic;System;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(ApportionmentManagerTest))]
public void setupDatedChunksForApportionToPeriod37901()
{
    ApportionmentManager apportionmentManager;
    List<Chunk> list;
    apportionmentManager = new ApportionmentManager();
    list = this.setupDatedChunksForApportionToPeriod
               (apportionmentManager, default(DateTime), 
                default(DateTime), AppotionmentPeriod.Annually);
    Assert.IsNotNull((object)list);
    Assert.AreEqual<int>(4, list.Capacity);
    Assert.AreEqual<int>(1, list.Count);
    Assert.IsNotNull((object)apportionmentManager);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="emAPI.Tests" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.Tests.dll"/>
<reference name="emAPI" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.dll"/>
<reference name="emAPI_ClassLibrary" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI_ClassLibrary.dll"/>
<pathCondition><![CDATA[return target != (ApportionmentManager)null && (long)(4611686018427387903uL & (13835058055282163712uL ^ endDate.dateData)) < 315324000000000L && 
                                               methodof(target.setupDatedChunksForApportionToPeriod) == methodof(ApportionmentManager.setupDatedChunksForApportionToPeriod) && interval == AppotionmentPeriod.Annually;
]]></pathCondition>
</generatedTest>
<log level="message" time="2012-09-03 11:32:09Z" category="coverage" message="coverage increased from 27 to 33 blocks (+6) after flipping emAPI.Controllers.ApportionmentManager.setupDatedChunksForApportionToPeriod at 0x0031"/>
<uninstrumented methodDisplayName="System.DateTime System.Globalization.Calendar.AddWeeks(System.DateTime time, System.Int32 weeks)" declaringTypeDisplayName="System.Globalization.Calendar" methodShortDisplayName="Calendar.AddWeeks(DateTime, Int32)" wikiTopic="Uninstrumented Method Called"><method><definition assemblyName="mscorlib" name="AddWeeks" token="6002d23"><declaringType assemblyName="mscorlib" name="Calendar" token="200049e" namespace="System.Globalization"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="Calendar" token="200049e" namespace="System.Globalization"/>
</type>
</parameter>
<parameter name="time" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="weeks" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</resultType>
</definition>
</method>
<stackTrace><frame value="  at DateTime.get_Ticks()" method="DateTime.get_Ticks()" offset="0"><method assemblyName="mscorlib" name="get_Ticks" token="6000438"><declaringType assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
<parameter this="true" name="this" position="0"><type spec="ManagedPointer"><elementType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</elementType>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int64" token="20000ff" namespace="System"/>
</resultType>
</method>
</frame>
<frame value="  at Calendar.Add(DateTime, Double, Int32)" method="Calendar.Add(DateTime, Double, Int32)" offset="84"><method assemblyName="mscorlib" name="Add" token="6002d1c"><declaringType assemblyName="mscorlib" name="Calendar" token="200049e" namespace="System.Globalization"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="Calendar" token="200049e" namespace="System.Globalization"/>
</type>
</parameter>
<parameter name="time" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="value" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Double" token="20000d5" namespace="System"/>
</type>
</parameter>
<parameter name="scale" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</resultType>
</method>
</frame>
<frame value="  at Calendar.AddDays(DateTime, Int32)" method="Calendar.AddDays(DateTime, Int32)" offset="0"><method assemblyName="mscorlib" name="AddDays" token="6002d1e"><declaringType assemblyName="mscorlib" name="Calendar" token="200049e" namespace="System.Globalization"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="Calendar" token="200049e" namespace="System.Globalization"/>
</type>
</parameter>
<parameter name="time" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="days" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</resultType>
</method>
</frame>
<frame value="  at Calendar.AddWeeks(DateTime, Int32)" method="Calendar.AddWeeks(DateTime, Int32)" offset="0"><method assemblyName="mscorlib" name="AddWeeks" token="6002d23"><declaringType assemblyName="mscorlib" name="Calendar" token="200049e" namespace="System.Globalization"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="Calendar" token="200049e" namespace="System.Globalization"/>
</type>
</parameter>
<parameter name="time" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="weeks" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</resultType>
</method>
</frame>
<frame value="  at ApportionmentManager.setupDatedChunksForApportionToPeriod(DateTime, DateTime, AppotionmentPeriod) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs(147)" method="ApportionmentManager.setupDatedChunksForApportionToPeriod(DateTime, DateTime, AppotionmentPeriod)" offset="127" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs" line="147"><method assemblyName="emAPI" name="setupDatedChunksForApportionToPeriod" token="60001f0"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="startDate" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="endDate" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="interval" position="3"><type spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="AppotionmentPeriod" token="2000011" namespace="emAPI.ClassLibrary"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[
                    case 2: ///interval is weekly
                        ///]]></beforeSource>
<source><![CDATA[                        chunk.StartDate = calendar.AddWeeks(startDate, i);]]></source>
<afterSource><![CDATA[                        chunk.EndDate = calendar.AddWeeks(chunk.StartDate, 1);
                        break;
]]></afterSource>
</frame>
<frame value="  at ApportionmentManagerTest.setupDatedChunksForApportionToPeriod(ApportionmentManager, DateTime, DateTime, AppotionmentPeriod) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs(27)" method="ApportionmentManagerTest.setupDatedChunksForApportionToPeriod(ApportionmentManager, DateTime, DateTime, AppotionmentPeriod)" offset="6" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs" line="27"><method assemblyName="emAPI.Tests" name="setupDatedChunksForApportionToPeriod" token="6000001"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="startDate" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="endDate" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="interval" position="4"><type spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="AppotionmentPeriod" token="2000011" namespace="emAPI.ClassLibrary"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            AppotionmentPeriod interval
        )
        {]]></beforeSource>
<source><![CDATA[            List<Chunk> result = target.setupDatedChunksForApportionToPeriod(startDate, endDate, interval);]]></source>
<afterSource><![CDATA[            return result;
            // TODO: add assertions to method ApportionmentManagerTest.setupDatedChunksForApportionToPeriod(ApportionmentManager, DateTime, DateTime, AppotionmentPeriod)
        }]]></afterSource>
</frame>
</stackTrace>
</uninstrumented>
<uninstrumented methodDisplayName="System.DateTime System.Globalization.Calendar.AddWeeks(System.DateTime time, System.Int32 weeks)" declaringTypeDisplayName="System.Globalization.Calendar" methodShortDisplayName="Calendar.AddWeeks(DateTime, Int32)" wikiTopic="Uninstrumented Method Called"><method><definition assemblyName="mscorlib" name="AddWeeks" token="6002d23"><declaringType assemblyName="mscorlib" name="Calendar" token="200049e" namespace="System.Globalization"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="Calendar" token="200049e" namespace="System.Globalization"/>
</type>
</parameter>
<parameter name="time" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="weeks" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</resultType>
</definition>
</method>
<stackTrace><frame value="  at ApportionmentManager.setupDatedChunksForApportionToPeriod(DateTime, DateTime, AppotionmentPeriod) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs(147)" method="ApportionmentManager.setupDatedChunksForApportionToPeriod(DateTime, DateTime, AppotionmentPeriod)" offset="127" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs" line="147"><method assemblyName="emAPI" name="setupDatedChunksForApportionToPeriod" token="60001f0"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="startDate" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="endDate" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="interval" position="3"><type spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="AppotionmentPeriod" token="2000011" namespace="emAPI.ClassLibrary"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[
                    case 2: ///interval is weekly
                        ///]]></beforeSource>
<source><![CDATA[                        chunk.StartDate = calendar.AddWeeks(startDate, i);]]></source>
<afterSource><![CDATA[                        chunk.EndDate = calendar.AddWeeks(chunk.StartDate, 1);
                        break;
]]></afterSource>
</frame>
<frame value="  at ApportionmentManagerTest.setupDatedChunksForApportionToPeriod(ApportionmentManager, DateTime, DateTime, AppotionmentPeriod) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs(27)" method="ApportionmentManagerTest.setupDatedChunksForApportionToPeriod(ApportionmentManager, DateTime, DateTime, AppotionmentPeriod)" offset="6" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs" line="27"><method assemblyName="emAPI.Tests" name="setupDatedChunksForApportionToPeriod" token="6000001"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="startDate" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="endDate" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="DateTime" token="2000058" namespace="System"/>
</type>
</parameter>
<parameter name="interval" position="4"><type spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="AppotionmentPeriod" token="2000011" namespace="emAPI.ClassLibrary"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            AppotionmentPeriod interval
        )
        {]]></beforeSource>
<source><![CDATA[            List<Chunk> result = target.setupDatedChunksForApportionToPeriod(startDate, endDate, interval);]]></source>
<afterSource><![CDATA[            return result;
            // TODO: add assertions to method ApportionmentManagerTest.setupDatedChunksForApportionToPeriod(ApportionmentManager, DateTime, DateTime, AppotionmentPeriod)
        }]]></afterSource>
</frame>
</stackTrace>
</uninstrumented>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.03"/>
<generatedTest id="63f75f9e-b46d-4644-a081-e94dc58c10cb" index="5" run="7" status="normaltermination" duplicateOf="6000006" generated="true" assemblyName="emAPI.Tests" name="setupDatedChunksForApportionToPeriod177" token="6000006"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<rcov name="Block" dcov="6" dtot="0" acov="39" atot="80"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">new ApportionmentManager{}</value>
<value name="startDate">0001-01-01 00:00:00Z</value>
<value name="endDate">0001-01-01 00:00:00Z</value>
<value name="interval">Weekly</value>
<value name="result(target)">new ApportionmentManager{}</value>
<value name="result">{new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-07 23:00:00Z,Amount=0}}</value>
<code><![CDATA[ApportionmentManager apportionmentManager;
List<Chunk> list;
apportionmentManager = new ApportionmentManager();
list = this.setupDatedChunksForApportionToPeriod
           (apportionmentManager, default(DateTime), 
            default(DateTime), AppotionmentPeriod.Weekly);
Assert.IsNotNull((object)list);
Assert.AreEqual<int>(4, list.Capacity);
Assert.AreEqual<int>(1, list.Count);
Assert.IsNotNull((object)apportionmentManager);
]]></code>
<methodCode imports="emAPI.ClassLibrary;System.Collections.Generic;System;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(ApportionmentManagerTest))]
public void setupDatedChunksForApportionToPeriod17701()
{
    ApportionmentManager apportionmentManager;
    List<Chunk> list;
    apportionmentManager = new ApportionmentManager();
    list = this.setupDatedChunksForApportionToPeriod
               (apportionmentManager, default(DateTime), 
                default(DateTime), AppotionmentPeriod.Weekly);
    Assert.IsNotNull((object)list);
    Assert.AreEqual<int>(4, list.Capacity);
    Assert.AreEqual<int>(1, list.Count);
    Assert.IsNotNull((object)apportionmentManager);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="emAPI.Tests" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.Tests.dll"/>
<reference name="emAPI" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.dll"/>
<reference name="emAPI_ClassLibrary" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI_ClassLibrary.dll"/>
<pathCondition><![CDATA[return target != (ApportionmentManager)null && (long)(4611686018427387903uL & (13835058055282163712uL ^ endDate.dateData)) < 6012000000000L && 
                                               methodof(target.setupDatedChunksForApportionToPeriod) == methodof(ApportionmentManager.setupDatedChunksForApportionToPeriod) && interval == AppotionmentPeriod.Weekly;
]]></pathCondition>
</generatedTest>
<log level="message" time="2012-09-03 11:32:09Z" category="coverage" message="coverage increased from 33 to 39 blocks (+6) after flipping emAPI.Controllers.ApportionmentManager.setupDatedChunksForApportionToPeriod at 0x0031"/>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.02"/>
<generatedTest id="1b99c0f2-22fb-407d-8a70-34066935e223" index="6" run="8" status="normaltermination" duplicateOf="6000007" generated="true" assemblyName="emAPI.Tests" name="setupDatedChunksForApportionToPeriod937" token="6000007"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<rcov name="Block" dcov="6" dtot="0" acov="45" atot="80"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">new ApportionmentManager{}</value>
<value name="startDate">0001-01-01 00:00:00Z</value>
<value name="endDate">0001-01-01 00:00:00Z</value>
<value name="interval">Monthly</value>
<value name="result(target)">new ApportionmentManager{}</value>
<value name="result">{new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-31 23:00:00Z,Amount=0}}</value>
<code><![CDATA[ApportionmentManager apportionmentManager;
List<Chunk> list;
apportionmentManager = new ApportionmentManager();
list = this.setupDatedChunksForApportionToPeriod
           (apportionmentManager, default(DateTime), 
            default(DateTime), AppotionmentPeriod.Monthly);
Assert.IsNotNull((object)list);
Assert.AreEqual<int>(4, list.Capacity);
Assert.AreEqual<int>(1, list.Count);
Assert.IsNotNull((object)apportionmentManager);
]]></code>
<methodCode imports="emAPI.ClassLibrary;System.Collections.Generic;System;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(ApportionmentManagerTest))]
public void setupDatedChunksForApportionToPeriod93701()
{
    ApportionmentManager apportionmentManager;
    List<Chunk> list;
    apportionmentManager = new ApportionmentManager();
    list = this.setupDatedChunksForApportionToPeriod
               (apportionmentManager, default(DateTime), 
                default(DateTime), AppotionmentPeriod.Monthly);
    Assert.IsNotNull((object)list);
    Assert.AreEqual<int>(4, list.Capacity);
    Assert.AreEqual<int>(1, list.Count);
    Assert.IsNotNull((object)apportionmentManager);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="emAPI.Tests" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.Tests.dll"/>
<reference name="emAPI" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.dll"/>
<reference name="emAPI_ClassLibrary" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI_ClassLibrary.dll"/>
<pathCondition><![CDATA[return target != (ApportionmentManager)null && (long)(4611686018427387903uL & (13835058055282163712uL ^ endDate.dateData)) < 26748000000000L && 
                                               methodof(target.setupDatedChunksForApportionToPeriod) == methodof(ApportionmentManager.setupDatedChunksForApportionToPeriod) && interval == AppotionmentPeriod.Monthly;
]]></pathCondition>
</generatedTest>
<log level="message" time="2012-09-03 11:32:09Z" category="coverage" message="coverage increased from 39 to 45 blocks (+6) after flipping emAPI.Controllers.ApportionmentManager.setupDatedChunksForApportionToPeriod at 0x0031"/>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.02"/>
<generatedTest id="86b5f17b-deee-43db-8a5d-70ce84f968ad" index="7" run="9" status="normaltermination" duplicateOf="6000008" generated="true" assemblyName="emAPI.Tests" name="setupDatedChunksForApportionToPeriod330" token="6000008"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="45" atot="80"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">new ApportionmentManager{}</value>
<value name="startDate">0001-01-01 00:00:00Z</value>
<value name="endDate">0001-02-21 07:54:42Z</value>
<value name="interval">Monthly</value>
<value name="result(target)">new ApportionmentManager{}</value>
<value name="result">{new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-31 23:00:00Z,Amount=0}, new Chunk{StartDate=0001-02-01 00:00:00Z,EndDate=0001-02-28 23:00:00Z,Amount=0}}</value>
<code><![CDATA[ApportionmentManager apportionmentManager;
List<Chunk> list;
apportionmentManager = new ApportionmentManager();
list = this.setupDatedChunksForApportionToPeriod
           (apportionmentManager, default(DateTime), 
            new DateTime(4611686018427387903L & 44348826916864L, 
                         (DateTimeKind)(44348826916864uL >> 62)), AppotionmentPeriod.Monthly);
Assert.IsNotNull((object)list);
Assert.AreEqual<int>(4, list.Capacity);
Assert.AreEqual<int>(2, list.Count);
Assert.IsNotNull((object)apportionmentManager);
]]></code>
<methodCode imports="emAPI.ClassLibrary;System.Collections.Generic;System;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(ApportionmentManagerTest))]
public void setupDatedChunksForApportionToPeriod33001()
{
    ApportionmentManager apportionmentManager;
    List<Chunk> list;
    apportionmentManager = new ApportionmentManager();
    list = this.setupDatedChunksForApportionToPeriod
               (apportionmentManager, default(DateTime), 
                new DateTime(4611686018427387903L & 44348826916864L, 
                             (DateTimeKind)(44348826916864uL >> 62)), AppotionmentPeriod.Monthly);
    Assert.IsNotNull((object)list);
    Assert.AreEqual<int>(4, list.Capacity);
    Assert.AreEqual<int>(2, list.Count);
    Assert.IsNotNull((object)apportionmentManager);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="emAPI.Tests" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.Tests.dll"/>
<reference name="emAPI" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.dll"/>
<reference name="emAPI_ClassLibrary" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI_ClassLibrary.dll"/>
<pathCondition><![CDATA[ulong s0 = 4611686018427387903uL & (13835058055282163712uL ^ endDate.dateData);
return target != (ApportionmentManager)null && 26747999999999L < (long)s0 && 
                                               (long)s0 < 50940000000000L && methodof(target.setupDatedChunksForApportionToPeriod) == methodof(ApportionmentManager.setupDatedChunksForApportionToPeriod) && interval == AppotionmentPeriod.Monthly;
]]></pathCondition>
</generatedTest>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.03"/>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.02"/>
<generatedTest id="8f3708f6-b05a-4cf5-bd06-9fd0ad8b5891" index="8" run="11" status="normaltermination" duplicateOf="6000009" generated="true" assemblyName="emAPI.Tests" name="setupDatedChunksForApportionToPeriod253" token="6000009"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="45" atot="80"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">new ApportionmentManager{}</value>
<value name="startDate">0001-01-01 00:00:00Z</value>
<value name="endDate">0002-12-04 20:51:58Z</value>
<value name="interval">Annually</value>
<value name="result(target)">new ApportionmentManager{}</value>
<value name="result">{new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-12-31 23:00:00Z,Amount=0}, new Chunk{StartDate=0002-01-01 00:00:00Z,EndDate=0002-12-31 23:00:00Z,Amount=0}}</value>
<code><![CDATA[ApportionmentManager apportionmentManager;
List<Chunk> list;
apportionmentManager = new ApportionmentManager();
list = this.setupDatedChunksForApportionToPeriod
           (apportionmentManager, default(DateTime), 
            new DateTime(4611686018427387903L & 607279183501312L, 
                         (DateTimeKind)(607279183501312uL >> 62)), AppotionmentPeriod.Annually);
Assert.IsNotNull((object)list);
Assert.AreEqual<int>(4, list.Capacity);
Assert.AreEqual<int>(2, list.Count);
Assert.IsNotNull((object)apportionmentManager);
]]></code>
<methodCode imports="emAPI.ClassLibrary;System.Collections.Generic;System;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(ApportionmentManagerTest))]
public void setupDatedChunksForApportionToPeriod25301()
{
    ApportionmentManager apportionmentManager;
    List<Chunk> list;
    apportionmentManager = new ApportionmentManager();
    list = this.setupDatedChunksForApportionToPeriod
               (apportionmentManager, default(DateTime), 
                new DateTime(4611686018427387903L & 607279183501312L, 
                             (DateTimeKind)(607279183501312uL >> 62)), AppotionmentPeriod.Annually);
    Assert.IsNotNull((object)list);
    Assert.AreEqual<int>(4, list.Capacity);
    Assert.AreEqual<int>(2, list.Count);
    Assert.IsNotNull((object)apportionmentManager);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="emAPI.Tests" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.Tests.dll"/>
<reference name="emAPI" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.dll"/>
<reference name="emAPI_ClassLibrary" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI_ClassLibrary.dll"/>
<pathCondition><![CDATA[ulong s0 = 4611686018427387903uL & (13835058055282163712uL ^ endDate.dateData);
return target != (ApportionmentManager)null && 315323999999999L < (long)s0 && 
                                               (long)s0 < 630684000000000L && methodof(target.setupDatedChunksForApportionToPeriod) == methodof(ApportionmentManager.setupDatedChunksForApportionToPeriod) && interval == AppotionmentPeriod.Annually;
]]></pathCondition>
</generatedTest>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.02"/>
<generatedTest id="17214f8e-5aba-4424-9680-855e875a2961" index="9" run="12" status="normaltermination" duplicateOf="600000a" generated="true" assemblyName="emAPI.Tests" name="setupDatedChunksForApportionToPeriod462" token="600000a"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="45" atot="80"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">new ApportionmentManager{}</value>
<value name="startDate">0001-01-01 00:00:00Z</value>
<value name="endDate">0001-01-11 16:29:04Z</value>
<value name="interval">Weekly</value>
<value name="result(target)">new ApportionmentManager{}</value>
<value name="result">{new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-07 23:00:00Z,Amount=0}, new Chunk{StartDate=0001-01-08 00:00:00Z,EndDate=0001-01-14 23:00:00Z,Amount=0}}</value>
<code><![CDATA[ApportionmentManager apportionmentManager;
List<Chunk> list;
apportionmentManager = new ApportionmentManager();
list = this.setupDatedChunksForApportionToPeriod
           (apportionmentManager, default(DateTime), 
            new DateTime(4611686018427387903L & 9233445099520L, 
                         (DateTimeKind)(9233445099520uL >> 62)), AppotionmentPeriod.Weekly);
Assert.IsNotNull((object)list);
Assert.AreEqual<int>(4, list.Capacity);
Assert.AreEqual<int>(2, list.Count);
Assert.IsNotNull((object)apportionmentManager);
]]></code>
<methodCode imports="emAPI.ClassLibrary;System.Collections.Generic;System;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(ApportionmentManagerTest))]
public void setupDatedChunksForApportionToPeriod46201()
{
    ApportionmentManager apportionmentManager;
    List<Chunk> list;
    apportionmentManager = new ApportionmentManager();
    list = this.setupDatedChunksForApportionToPeriod
               (apportionmentManager, default(DateTime), 
                new DateTime(4611686018427387903L & 9233445099520L, 
                             (DateTimeKind)(9233445099520uL >> 62)), AppotionmentPeriod.Weekly);
    Assert.IsNotNull((object)list);
    Assert.AreEqual<int>(4, list.Capacity);
    Assert.AreEqual<int>(2, list.Count);
    Assert.IsNotNull((object)apportionmentManager);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="emAPI.Tests" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.Tests.dll"/>
<reference name="emAPI" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.dll"/>
<reference name="emAPI_ClassLibrary" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI_ClassLibrary.dll"/>
<pathCondition><![CDATA[ulong s0 = 4611686018427387903uL & (13835058055282163712uL ^ endDate.dateData);
return target != (ApportionmentManager)null && 6011999999999L < (long)s0 && 
                                               (long)s0 < 12060000000000L && methodof(target.setupDatedChunksForApportionToPeriod) == methodof(ApportionmentManager.setupDatedChunksForApportionToPeriod) && interval == AppotionmentPeriod.Weekly;
]]></pathCondition>
</generatedTest>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.02"/>
<generatedTest id="fb72d175-aa06-4587-aded-8f3360bc5916" index="10" run="13" status="normaltermination" duplicateOf="600000b" generated="true" assemblyName="emAPI.Tests" name="setupDatedChunksForApportionToPeriod485" token="600000b"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="45" atot="80"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">new ApportionmentManager{}</value>
<value name="startDate">0001-01-01 00:00:00Z</value>
<value name="endDate">0001-01-05 01:52:08Z</value>
<value name="interval">Daily</value>
<value name="result(target)">new ApportionmentManager{}</value>
<value name="result">{new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-01 23:00:00Z,Amount=0}, new Chunk{StartDate=0001-01-02 00:00:00Z,EndDate=0001-01-02 23:00:00Z,Amount=0}, new Chunk{StartDate=0001-01-03 00:00:00Z,EndDate=0001-01-03 23:00:00Z,Amount=0}, new Chunk{StartDate=0001-01-04 00:00:00Z,EndDate=0001-01-04 23:00:00Z,Amount=0}, new Chunk{StartDate=0001-01-05 00:00:00Z,EndDate=0001-01-05 23:00:00Z,Amount=0}}</value>
<code><![CDATA[ApportionmentManager apportionmentManager;
List<Chunk> list;
apportionmentManager = new ApportionmentManager();
list = this.setupDatedChunksForApportionToPeriod
           (apportionmentManager, default(DateTime), 
            new DateTime(4611686018427387903L & 3523284768768L, 
                         (DateTimeKind)(3523284768768uL >> 62)), AppotionmentPeriod.Daily);
Assert.IsNotNull((object)list);
Assert.AreEqual<int>(8, list.Capacity);
Assert.AreEqual<int>(5, list.Count);
Assert.IsNotNull((object)apportionmentManager);
]]></code>
<methodCode imports="emAPI.ClassLibrary;System.Collections.Generic;System;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(ApportionmentManagerTest))]
public void setupDatedChunksForApportionToPeriod48501()
{
    ApportionmentManager apportionmentManager;
    List<Chunk> list;
    apportionmentManager = new ApportionmentManager();
    list = this.setupDatedChunksForApportionToPeriod
               (apportionmentManager, default(DateTime), 
                new DateTime(4611686018427387903L & 3523284768768L, 
                             (DateTimeKind)(3523284768768uL >> 62)), AppotionmentPeriod.Daily);
    Assert.IsNotNull((object)list);
    Assert.AreEqual<int>(8, list.Capacity);
    Assert.AreEqual<int>(5, list.Count);
    Assert.IsNotNull((object)apportionmentManager);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="emAPI.Tests" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.Tests.dll"/>
<reference name="emAPI" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.dll"/>
<reference name="emAPI_ClassLibrary" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI_ClassLibrary.dll"/>
<pathCondition><![CDATA[ulong s0 = 4611686018427387903uL & (13835058055282163712uL ^ endDate.dateData);
return target != (ApportionmentManager)null && 3419999999999L < (long)s0 && 
                                               (long)s0 < 4284000000000L && methodof(target.setupDatedChunksForApportionToPeriod) == methodof(ApportionmentManager.setupDatedChunksForApportionToPeriod) && interval == AppotionmentPeriod.Daily;
]]></pathCondition>
</generatedTest>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.02"/>
<generatedTest id="8e3db1e7-533c-499e-a100-bfa3854f59bf" index="11" run="14" status="normaltermination" duplicateOf="600000c" generated="true" assemblyName="emAPI.Tests" name="setupDatedChunksForApportionToPeriod378" token="600000c"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="45" atot="80"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">new ApportionmentManager{}</value>
<value name="startDate">0001-01-01 00:00:00Z</value>
<value name="endDate">0001-12-03 13:09:27Z</value>
<value name="interval">Quarterly</value>
<value name="result(target)">new ApportionmentManager{}</value>
<value name="result">{new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-03-31 23:00:00Z,Amount=0}, new Chunk{StartDate=0001-04-01 00:00:00Z,EndDate=0001-06-30 23:00:00Z,Amount=0}, new Chunk{StartDate=0001-07-01 00:00:00Z,EndDate=0001-09-30 23:00:00Z,Amount=0}, new Chunk{StartDate=0001-10-01 00:00:00Z,EndDate=0001-12-31 23:00:00Z,Amount=0}}</value>
<code><![CDATA[ApportionmentManager apportionmentManager;
List<Chunk> list;
apportionmentManager = new ApportionmentManager();
list = this.setupDatedChunksForApportionToPeriod
           (apportionmentManager, default(DateTime), 
            new DateTime(4611686018427387903L & 290777674749952L, 
                         (DateTimeKind)(290777674749952uL >> 62)), AppotionmentPeriod.Quarterly);
Assert.IsNotNull((object)list);
Assert.AreEqual<int>(4, list.Capacity);
Assert.AreEqual<int>(4, list.Count);
Assert.IsNotNull((object)apportionmentManager);
]]></code>
<methodCode imports="emAPI.ClassLibrary;System.Collections.Generic;System;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(ApportionmentManagerTest))]
public void setupDatedChunksForApportionToPeriod37801()
{
    ApportionmentManager apportionmentManager;
    List<Chunk> list;
    apportionmentManager = new ApportionmentManager();
    list = this.setupDatedChunksForApportionToPeriod
               (apportionmentManager, default(DateTime), 
                new DateTime(4611686018427387903L & 290777674749952L, 
                             (DateTimeKind)(290777674749952uL >> 62)), AppotionmentPeriod.Quarterly);
    Assert.IsNotNull((object)list);
    Assert.AreEqual<int>(4, list.Capacity);
    Assert.AreEqual<int>(4, list.Count);
    Assert.IsNotNull((object)apportionmentManager);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="emAPI.Tests" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.Tests.dll"/>
<reference name="emAPI" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.dll"/>
<reference name="emAPI_ClassLibrary" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI_ClassLibrary.dll"/>
<pathCondition><![CDATA[ulong s0 = 4611686018427387903uL & (13835058055282163712uL ^ endDate.dateData);
return target != (ApportionmentManager)null && 235835999999999L < (long)s0 && (long)s0 < 315324000000000L && 
                                                                              methodof(target.setupDatedChunksForApportionToPeriod) == methodof(ApportionmentManager.setupDatedChunksForApportionToPeriod) && interval == AppotionmentPeriod.Quarterly;
]]></pathCondition>
</generatedTest>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.03"/>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.03"/>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.02"/>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.02"/>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.03"/>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.03"/>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.02"/>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.02"/>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.02"/>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.02"/>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.02"/>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.02"/>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.02"/>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.03"/>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.02"/>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.03"/>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.02"/>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.03"/>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.02"/>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.02"/>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.02"/>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.02"/>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.02"/>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.02"/>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.02"/>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.02"/>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.02"/>
<test name="setupDatedChunksForApportionToPeriod" state="success" duration="0.02"/>
<coverage domain="usercodeundertest" unit="block" covered="45" total="80" coveredRatio="0.5625"/>
<sourceCoverage xml="cov\e304\cov.xml" html="cov\e304\cov.html"/>
<result name="setupDatedChunksForApportionToPeriod(ApportionmentManager, DateTime, DateTime, AppotionmentPeriod)" state="success" duration="6.55211521296701"/>
<duration start="2012-09-03 11:32:04Z" end="2012-09-03 11:32:11Z" seconds="6.5903594"/>
<trajectory><image src="fix\emapicontrollers634822723315427996.trajectories.png" width="800" height="1600"/>
</trajectory>
</exploration>
<coverage domain="usercodeundertest" unit="block" covered="45" total="80" coveredRatio="0.5625"/>
<sourceCoverage xml="cov\t100\cov.xml" html="cov\t100\cov.html"/>
<duration start="2012-09-03 11:32:04Z" end="2012-09-03 11:32:11Z" seconds="6.7037538"/>
</fixture>
<coverage domain="usercodeundertest" unit="block" covered="45" total="80" coveredRatio="0.5625"/>
<sourceCoverage xml="cov\a38380208\cov.xml" html="cov\a38380208\cov.html"/>
<duration start="2012-09-03 11:32:04Z" end="2012-09-03 11:32:11Z" seconds="6.8133454"/>
<frameTreeRef exceptionCount="1"/>
</assembly>
<duration start="2012-09-03 11:32:04Z" end="2012-09-03 11:32:11Z" seconds="7.3203454"/>
<background/>
</pex>
