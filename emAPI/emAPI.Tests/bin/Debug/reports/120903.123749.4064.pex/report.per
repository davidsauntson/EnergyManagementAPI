<?xml version="1.0" encoding="utf-8"?>
<pex id="{ae989894-f62b-4477-bbad-61c4c5388d95}" creationTime="2012-09-03 11:37:49Z" configuration="emAPI.Controllers!\ApportionmentManagerTest!\apportion!" product="emAPI" created="2012-09-03 11:37:49Z" pexVersion="0.94.51006.1" xml="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\reports\120903.123749.4064.pex\report.per" html="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\reports\120903.123749.4064.pex\report.html"><environment commandLine="&quot;C:\Program Files\Microsoft Pex\bin\Microsoft.Pex.exe&quot; &quot;C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.Tests.dll&quot; /methodnamefilter:apportion! /namespacefilter:emAPI.Controllers! /typefilter:ApportionmentManagerTest! /x64failsilently /clrversion:v4.0.30319 /referencedprojectassemblies:emAPI /donotopenreport /reportlevel:Xml /reportrootpath:&quot;C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\reports&quot; /testframework:VisualStudioUnitTest /testlanguage:cs /testprojectfile:&quot;C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\emAPI.Tests.csproj&quot; /testprojectnotupdate /testprojectskip" machineName="WIN-5QGLTLJJF9P" osVersion="Microsoft Windows NT 6.1.7601 Service Pack 1" processorCount="4" clrVersion="4.0.30319.269" bitness="x86" user="David Sauntson"><envVars><envVar name="HOMEPATH" value="\Users\David Sauntson"/>
<envVar name="PUBLIC" value="C:\Users\Public"/>
<envVar name="COMPUTERNAME" value="WIN-5QGLTLJJF9P"/>
<envVar name="CLRMONITOR_INJECT_TYPES" value=""/>
<envVar name="COMPLUS_ProfAPI_ProfilerCompatibilitySetting" value="EnableV2Profiler"/>
<envVar name="PROCESSOR_REVISION" value="3a09"/>
<envVar name="CLRMONITOR_INSTRUMENT_TYPES_EXCLUSIONS" value=""/>
<envVar name="PATHEXT" value=".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC"/>
<envVar name="COMPLUS_DEFAULTVERSION" value="v4.0.30319"/>
<envVar name="CLRMONITOR_CLSID" value="{21bbb412-71ac-41f9-a377-48529a4859cf}"/>
<envVar name="TMP" value="C:\Users\DAVIDS~1\AppData\Local\Temp"/>
<envVar name="TEMP" value="C:\Users\DAVIDS~1\AppData\Local\Temp"/>
<envVar name="LOCALAPPDATA" value="C:\Users\David Sauntson\AppData\Local"/>
<envVar name="CLRMONITOR_INSTRUMENT_NAMESPACES_EXCLUSIONS" value=""/>
<envVar name="CLRMONITOR_PROTECT_TYPES" value="Microsoft.FSharp.Text.Printf,Microsoft.FSharp.Text.PrintfImpl"/>
<envVar name="CLRMONITOR_INJECT_ASSEMBLIES" value=""/>
<envVar name="ProgramData" value="C:\ProgramData"/>
<envVar name="CLRMONITOR_INITIALIZED" value="0xe"/>
<envVar name="USERDOMAIN" value="WIN-5QGLTLJJF9P"/>
<envVar name="windir" value="C:\Windows"/>
<envVar name="CLRMONITOR_ERASE_FINALIZER_TYPES" value=""/>
<envVar name="CLRMONITOR_INJECT_NAMESPACES" value=""/>
<envVar name="PROCESSOR_IDENTIFIER" value="x86 Family 6 Model 58 Stepping 9, GenuineIntel"/>
<envVar name="windows_tracing_flags" value="3"/>
<envVar name="Path" value="C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;c:\Program Files\Microsoft SQL Server\100\Tools\Binn\;c:\Program Files\Microsoft SQL Server\100\DTS\Binn\;c:\Program Files\Microsoft ASP.NET\ASP.NET Web Pages\v1.0\;C:\Program Files\doxygen\bin;C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\packages\EntityFramework.4.3.1\tools;C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\packages\SilverlightToolkitWP.4.2012.6.25\tools"/>
<envVar name="PSModulePath" value="\\vmware-host\Shared Folders\Documents\WindowsPowerShell\Modules;C:\Windows\system32\WindowsPowerShell\v1.0\Modules\"/>
<envVar name="PROCESSOR_LEVEL" value="6"/>
<envVar name="CommonProgramFiles" value="C:\Program Files\Common Files"/>
<envVar name="CLRMONITOR_FLAGS" value=""/>
<envVar name="pex_instrumentation" value="1"/>
<envVar name="SESSIONNAME" value="Console"/>
<envVar name="CLRMONITOR_INSTRUMENT_TYPES" value="System.Array,System.Array+ArrayEnumerator,System.Array+FunctorComparer`1,System.Array+SZArrayEnumerator,System.Array+SorterGenericArray,System.Array+SorterObjectArray,System.Boolean,System.Byte,System.Char,System.CharEnumerator,System.ComponentModel.Component,System.ComponentModel.Container,System.ComponentModel.Container+Site,System.Convert,System.Currency,System.DateTime,System.Decimal,System.Diagnostics.Assert,System.Double,System.Globalization.CharUnicodeInfo,System.Globalization.CultureTableRecord,System.Globalization.TextInfo,System.Guid,System.IO.MemoryStream,System.IO.Stream,System.IO.StreamReader,System.IO.StreamWriter,System.IO.StringReader,System.IO.StringWriter,System.Int16,System.Int32,System.Int64,System.Lazy`1,System.Lazy`1+Boxed,System.Lazy`1+LazyInternalExceptionHolder,System.Linq.Expressions.ExpressionCompiler,System.Math,System.Nullable,System.Nullable`1,System.OrdinalComparer,System.SByte,System.SZArrayHelper,System.SZArrayHelper+SZGenericArrayEnumerator`1,System.Single,System.String,System.StringComparer,System.Text.ASCIIEncoding,System.Text.DecoderNLS,System.Text.Encoding,System.Text.UTF8Encoding,System.TimeSpan,System.Tuple,System.Tuple`1,System.Tuple`2,System.Tuple`3,System.Tuple`4,System.Tuple`5,System.Tuple`6,System.Tuple`7,System.Tuple`8,System.UInt16,System.UInt32,System.UInt64,System.Xml.XmlTextWriter,System.Xml.XmlTextWriter+Namespace,System.Xml.XmlTextWriter+NamespaceState,System.Xml.XmlTextWriter+SpecialAttr,System.Xml.XmlTextWriter+State,System.Xml.XmlTextWriter+TagInfo,System.Xml.XmlTextWriter+Token,System.Xml.XmlWriter,__Box`1,__SzArrayHelper`1"/>
<envVar name="VisualStudioDir" value="\\vmware-host\Shared Folders\Documents\Visual Studio 2010"/>
<envVar name="ProgramFiles" value="C:\Program Files"/>
<envVar name="XNAGSShared" value="C:\Program Files\Common Files\Microsoft Shared\XNA\"/>
<envVar name="CLRMONITOR_ERASE_CCTOR_TYPES" value=""/>
<envVar name="FP_NO_HOST_CHECK" value="NO"/>
<envVar name="pex_clientid" value="pex2584_1"/>
<envVar name="NUMBER_OF_PROCESSORS" value="4"/>
<envVar name="SystemRoot" value="C:\Windows"/>
<envVar name="CLRMONITOR_INSTRUMENT_ATTRIBUTE" value="Microsoft.Moles.Framework.Moles.MolesInstrumentAttribute"/>
<envVar name="CLRMONITOR_PROTECT_ALL_CCTORS" value="1"/>
<envVar name="XNAGSv4" value="C:\Program Files\Microsoft XNA\XNA Game Studio\v4.0\"/>
<envVar name="LOGONSERVER" value="\\WIN-5QGLTLJJF9P"/>
<envVar name="USERPROFILE" value="C:\Users\David Sauntson"/>
<envVar name="CLRMONITOR_SUBSTITUTIONS" value="C:\Windows\assembly\GAC_MSIL\Microsoft.ExtendedReflection\0.94.0.0__31bf3856ad364e35\Microsoft.ExtendedReflection.dll,C:\Windows\assembly\GAC_MSIL\Microsoft.Pex.Linq\0.94.0.0__31bf3856ad364e35\Microsoft.Pex.Linq.dll"/>
<envVar name="CLRMONITOR_INSTRUMENT_ASSEMBLIES_EXCLUSIONS" value=""/>
<envVar name="APPDATA" value="C:\Users\David Sauntson\AppData\Roaming"/>
<envVar name="HOMEDRIVE" value="C:"/>
<envVar name="PSExecutionPolicyPreference" value="RemoteSigned"/>
<envVar name="windows_tracing_logfile" value="C:\BVTBin\Tests\installpackage\csilogfile.log"/>
<envVar name="ComSpec" value="C:\Windows\system32\cmd.exe"/>
<envVar name="VS100COMNTOOLS" value="C:\Program Files\Microsoft Visual Studio 10.0\Common7\Tools\"/>
<envVar name="USERNAME" value="David Sauntson"/>
<envVar name="COR_PROFILER" value="{21bbb412-71ac-41f9-a377-48529a4859cf}"/>
<envVar name="PROCESSOR_ARCHITECTURE" value="x86"/>
<envVar name="pex_server_channel" value="pex2584"/>
<envVar name="OS" value="Windows_NT"/>
<envVar name="CLRMONITOR_INSTRUMENT_NAMESPACES" value="System.Collections,System.Collections.Generic,System.Collections.ObjectModel,System.Collections.Specialized,System.Diagnostics.Contracts"/>
<envVar name="SystemDrive" value="C:"/>
<envVar name="CLRMONITOR_INSTRUMENT_ASSEMBLIES" value="EntityFramework,FSharp.Core,FSharp.PowerPack,Microsoft.Contracts,Microsoft.VisualBasic,Microsoft.VisualStudio.QualityTools.UnitTestFramework,Newtonsoft.Json,System,System.Core,System.ServiceModel,System.Web,emAPI,emAPI.Tests,emAPI_ClassLibrary"/>
<envVar name="ALLUSERSPROFILE" value="C:\ProgramData"/>
</envVars>
</environment>
<settings/>
<reflection><existingTest method="apportion814" type="emAPI.Controllers.ApportionmentManagerTest" token="600000e" generated="true"/>
<existingTest method="apportionThrowsArgumentNullException955" type="emAPI.Controllers.ApportionmentManagerTest" token="6000003" generated="true" failure="true" exceptionType="System.ArgumentNullException"/>
<existingTest method="apportionThrowsInvalidOperationException729" type="emAPI.Controllers.ApportionmentManagerTest" token="6000004" generated="true" failure="true" exceptionType="System.InvalidOperationException"/>
<existingTest method="apportionThrowsNullReferenceException184" type="emAPI.Controllers.ApportionmentManagerTest" token="6000009" generated="true" failure="true" exceptionType="System.NullReferenceException"/>
<existingTest method="apportionThrowsNullReferenceException190" type="emAPI.Controllers.ApportionmentManagerTest" token="600000c" generated="true" failure="true" exceptionType="System.NullReferenceException"/>
<existingTest method="apportionThrowsNullReferenceException280" type="emAPI.Controllers.ApportionmentManagerTest" token="6000005" generated="true" failure="true" exceptionType="System.NullReferenceException"/>
<existingTest method="apportionThrowsNullReferenceException401" type="emAPI.Controllers.ApportionmentManagerTest" token="600000b" generated="true" failure="true" exceptionType="System.NullReferenceException"/>
<existingTest method="apportionThrowsNullReferenceException449" type="emAPI.Controllers.ApportionmentManagerTest" token="6000008" generated="true" failure="true" exceptionType="System.NullReferenceException"/>
<existingTest method="apportionThrowsNullReferenceException483" type="emAPI.Controllers.ApportionmentManagerTest" token="600000d" generated="true" failure="true" exceptionType="System.NullReferenceException"/>
<existingTest method="apportionThrowsNullReferenceException503" type="emAPI.Controllers.ApportionmentManagerTest" token="600000a" generated="true" failure="true" exceptionType="System.NullReferenceException"/>
<existingTest method="apportionThrowsNullReferenceException629" type="emAPI.Controllers.ApportionmentManagerTest" token="6000006" generated="true" failure="true" exceptionType="System.NullReferenceException"/>
<existingTest method="apportionThrowsNullReferenceException935" type="emAPI.Controllers.ApportionmentManagerTest" token="6000007" generated="true" failure="true" exceptionType="System.NullReferenceException"/>
</reflection>
<assembly name="emAPI.Tests" version="0.0.0.0" fileVersion="0.0.0.0" fullName="emAPI.Tests, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.Tests.dll" fileName="emAPI.Tests.dll"><settings testFramework="VisualStudioUnitTest" testLanguage="cs"/>
<fixture name="ApportionmentManagerTest" type="emAPI.Controllers.ApportionmentManagerTest" typeName="ApportionmentManagerTest" token="2000002" href="fix\emAPI.Tests.100.html"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
<settings typeUnderTest="emAPI.Controllers.ApportionmentManager"/>
<exploration shortName="apportion(ApportionmentManager, List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" fullName="emAPI.Controllers.ApportionmentManagerTest.apportion(ApportionmentManager, List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)"><method><definition assemblyName="emAPI.Tests" name="apportion" token="6000002"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</definition>
</method>
<settings maxBranches="20000" maxConstraintSolverTime="4"/>
<memberUnderTest assemblyName="emAPI" name="apportion" token="60001f1"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</memberUnderTest>
<explorable title="guessed how to create emAPI.Controllers.ApportionmentManager" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</explorableType>
<testAssemblyName name="emAPI.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\ApportionmentManagerFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for emAPI.Controllers.ApportionmentManager instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="emAPI" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.dll"/>
<typeDefinition assemblyName="emAPI.Tests" name="ApportionmentManagerFactory" token="ffffffff" namespace="emAPI.Controllers"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="emAPI.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for emAPI.Controllers.ApportionmentManager instances</summary>
]]></doc>
<reference name="emAPI" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.dll"/>
<reference name="mscorlib"/>
<methodDefinition assemblyName="emAPI.Tests" name="Create" static="true"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerFactory" token="ffffffff" namespace="emAPI.Controllers"/>
<resultType spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="emAPI.Tests" name="ApportionmentManagerFactory" token="ffffffff" namespace="emAPI.Controllers"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="emAPI.Tests" name="Create" static="true"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerFactory" token="ffffffff" namespace="emAPI.Controllers"/>
<resultType spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<log level="message" time="2012-09-03 11:37:52Z" category="symbols" message="could not load symbols for C:\Program Files\Microsoft Pex\bin\Microsoft.Pex.exe"/>
<log level="message" time="2012-09-03 11:37:52Z" category="symbols" message="search path: ;"/>
<test name="apportion" state="success" duration="0.11"/>
<log level="message" time="2012-09-03 11:37:53Z" category="symbols" message="could not load symbols for C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<log level="message" time="2012-09-03 11:37:53Z" category="symbols" message="could not load symbols for C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Core\v4.0_4.0.0.0__b77a5c561934e089\System.Core.dll"/>
<log level="message" time="2012-09-03 11:37:53Z" category="symbols" message="could not load symbols for C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\EntityFramework.dll"/>
<uninstrumented methodDisplayName="System.Void System.Text.EncoderReplacementFallback..ctor(System.String replacement)" declaringTypeDisplayName="System.Text.EncoderReplacementFallback" methodShortDisplayName="EncoderReplacementFallback..ctor(String)" wikiTopic="Uninstrumented Method Called"><method><definition assemblyName="mscorlib" name=".ctor" token="600343c"><declaringType assemblyName="mscorlib" name="EncoderReplacementFallback" token="200051d" namespace="System.Text"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="EncoderReplacementFallback" token="200051d" namespace="System.Text"/>
</type>
</parameter>
<parameter name="replacement" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
</definition>
</method>
<stackTrace><frame value="  at Char.IsSurrogate(String, Int32)" method="Char.IsSurrogate(String, Int32)" offset="0"><method assemblyName="mscorlib" name="IsSurrogate" static="true" token="60067ca"><declaringType assemblyName="mscorlib" valueType="true" name="Char" token="20000a1" namespace="System"/>
<parameter position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</resultType>
</method>
</frame>
<frame value="  at EncoderReplacementFallback..ctor(String)" method="EncoderReplacementFallback..ctor(String)" offset="26"><method assemblyName="mscorlib" name=".ctor" token="600343c"><declaringType assemblyName="mscorlib" name="EncoderReplacementFallback" token="200051d" namespace="System.Text"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="EncoderReplacementFallback" token="200051d" namespace="System.Text"/>
</type>
</parameter>
<parameter name="replacement" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at UTF8Encoding.SetDefaultFallbacks()" method="UTF8Encoding.SetDefaultFallbacks()" offset="37"><method assemblyName="mscorlib" name="SetDefaultFallbacks" token="6003505"><declaringType assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at Encoding..ctor(Int32)" method="Encoding..ctor(Int32)" offset="36"><method assemblyName="mscorlib" name=".ctor" token="6006b05"><declaringType assemblyName="mscorlib" name="Encoding" token="20004fc" namespace="System.Text"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="Encoding" token="20004fc" namespace="System.Text"/>
</type>
</parameter>
<parameter position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at UTF8Encoding..ctor(Boolean, Boolean)" method="UTF8Encoding..ctor(Boolean, Boolean)" offset="6"><method assemblyName="mscorlib" name=".ctor" token="6003504"><declaringType assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
</type>
</parameter>
<parameter name="encoderShouldEmitUTF8Identifier" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
<parameter name="throwOnInvalidBytes" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at CustomAttributeBuilder.InitCustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[], FieldInfo[], Object[])" method="CustomAttributeBuilder.InitCustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[], FieldInfo[], Object[])" offset="435"><method assemblyName="mscorlib" name="InitCustomAttributeBuilder" token="60057f7"><declaringType assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
</type>
</parameter>
<parameter name="con" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ConstructorInfo" token="200045a" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="constructorArgs" position="2"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter name="namedProperties" position="3"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="PropertyInfo" token="200045e" namespace="System.Reflection"/>
</elementType>
</type>
</parameter>
<parameter name="propertyValues" position="4"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter name="namedFields" position="5"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="FieldInfo" token="200045c" namespace="System.Reflection"/>
</elementType>
</type>
</parameter>
<parameter name="fieldValues" position="6"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
</method>
</frame>
<frame value="  at CustomAttributeBuilder..ctor(ConstructorInfo, Object[])" method="CustomAttributeBuilder..ctor(ConstructorInfo, Object[])" offset="38"><method assemblyName="mscorlib" name=".ctor" token="60057f2"><declaringType assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
</type>
</parameter>
<parameter name="con" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ConstructorInfo" token="200045a" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="constructorArgs" position="2"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
</method>
</frame>
<frame value="  at DynamicMethod.GetDynamicMethodsModule()" method="DynamicMethod.GetDynamicMethodsModule()" offset="96"><method assemblyName="mscorlib" name="GetDynamicMethodsModule" static="true" token="600567d"><declaringType assemblyName="mscorlib" name="DynamicMethod" token="200098a" namespace="System.Reflection.Emit"/>
<resultType spec="Class"><definition assemblyName="mscorlib" name="RuntimeModule" token="2000443" namespace="System.Reflection"/>
</resultType>
</method>
</frame>
<frame value="  at DynamicMethod.Init(String, MethodAttributes, CallingConventions, Type, Type[], Type, Module, Boolean, Boolean)" method="DynamicMethod.Init(String, MethodAttributes, CallingConventions, Type, Type[], Type, Module, Boolean, Boolean)" offset="288"><method assemblyName="mscorlib" name="Init" token="600567e"><declaringType assemblyName="mscorlib" name="DynamicMethod" token="200098a" namespace="System.Reflection.Emit"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="DynamicMethod" token="200098a" namespace="System.Reflection.Emit"/>
</type>
</parameter>
<parameter name="name" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="attributes" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="MethodAttributes" token="200043d" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="callingConvention" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="CallingConventions" token="2000406" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="returnType" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
<parameter name="signature" position="5"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter name="owner" position="6"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
<parameter name="m" position="7"><type spec="Class"><definition assemblyName="mscorlib" name="Module" token="2000442" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="skipVisibility" position="8"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
<parameter name="transparentMethod" position="9"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at LambdaCompiler..ctor(AnalyzedTree, LambdaExpression)" method="LambdaCompiler..ctor(AnalyzedTree, LambdaExpression)" offset="86"><method assemblyName="System.Core" name=".ctor" token="60014c8"><declaringType assemblyName="System.Core" name="LambdaCompiler" token="20002d0" namespace="System.Linq.Expressions.Compiler"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="System.Core" name="LambdaCompiler" token="20002d0" namespace="System.Linq.Expressions.Compiler"/>
</type>
</parameter>
<parameter name="tree" position="1"><type spec="Class"><definition assemblyName="System.Core" name="AnalyzedTree" token="20002b8" namespace="System.Linq.Expressions.Compiler"/>
</type>
</parameter>
<parameter name="lambda" position="2"><type spec="Class"><definition assemblyName="System.Core" name="LambdaExpression" token="200028e" namespace="System.Linq.Expressions"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at LambdaCompiler.Compile(LambdaExpression, DebugInfoGenerator)" method="LambdaCompiler.Compile(LambdaExpression, DebugInfoGenerator)" offset="17"><method assemblyName="System.Core" name="Compile" static="true" token="60014d0"><declaringType assemblyName="System.Core" name="LambdaCompiler" token="20002d0" namespace="System.Linq.Expressions.Compiler"/>
<parameter name="lambda" position="0"><type spec="Class"><definition assemblyName="System.Core" name="LambdaExpression" token="200028e" namespace="System.Linq.Expressions"/>
</type>
</parameter>
<parameter name="debugInfoGenerator" position="1"><type spec="Class"><definition assemblyName="System.Core" name="DebugInfoGenerator" token="20002c7" namespace="System.Runtime.CompilerServices"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Delegate" token="2000015" namespace="System"/>
</resultType>
</method>
</frame>
<frame value="  at Expression`1.Compile()" method="Expression`1.Compile()" offset="2"><method assemblyName="System.Core" name="Compile" token="60012d8"><declaringType assemblyName="System.Core" name="Expression`1" token="200028f" namespace="System.Linq.Expressions"><genericParameter value="TDelegate"/>
</declaringType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="System.Core" name="Expression`1" token="200028f" namespace="System.Linq.Expressions"><genericParameter value="TDelegate"/>
</definition>
<genericTypeArgument spec="GenericTypeParameter" index="0"/>
</type>
</parameter>
<resultType spec="GenericTypeParameter" index="0"/>
</method>
</frame>
<frame value="  at DbSetDiscoveryService.GetSets()" method="DbSetDiscoveryService.GetSets()" offset="398"><method assemblyName="EntityFramework" name="GetSets" token="6000c71"><declaringType assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Dictionary`2" token="2000354" namespace="System.Collections.Generic"><genericParameter value="TKey"/>
<genericParameter value="TValue"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</genericTypeArgument>
<genericTypeArgument spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</genericTypeArgument>
</genericTypeArgument>
</resultType>
</method>
</frame>
<frame value="  at DbSetDiscoveryService.InitializeSets()" method="DbSetDiscoveryService.InitializeSets()" offset="1"><method assemblyName="EntityFramework" name="InitializeSets" token="6000c72"><declaringType assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at DbContext.DiscoverAndInitializeSets()" method="DbContext.DiscoverAndInitializeSets()" offset="6"><method assemblyName="EntityFramework" name="DiscoverAndInitializeSets" token="6000105"><declaringType assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at DbContext.InitializeLazyInternalContext(IInternalConnection, DbCompiledModel)" method="DbContext.InitializeLazyInternalContext(IInternalConnection, DbCompiledModel)" offset="15"><method assemblyName="EntityFramework" name="InitializeLazyInternalContext" token="6000104"><declaringType assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
</type>
</parameter>
<parameter name="internalConnection" position="1"><type spec="Class"><definition assemblyName="EntityFramework" name="IInternalConnection" token="2000019" namespace="System.Data.Entity.Internal"/>
</type>
</parameter>
<parameter name="model" position="2"><type spec="Class"><definition assemblyName="EntityFramework" name="DbCompiledModel" token="20000d5" namespace="System.Data.Entity.Infrastructure"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at DbContext..ctor()" method="DbContext..ctor()" offset="24"><method assemblyName="EntityFramework" name=".ctor" token="60000fd"><declaringType assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at EMDatabase..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDatabase.cs(28)" method="EMDatabase..ctor()" offset="1" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDatabase.cs" line="28"><method assemblyName="emAPI" name=".ctor" token="600025e"><declaringType assemblyName="emAPI" name="EMDatabase" token="2000022" namespace="emAPI.DAL"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="EMDatabase" token="2000022" namespace="emAPI.DAL"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[    /// </summary>
    class EMDatabase : DbContext
    {]]></beforeSource>
<source><![CDATA[        internal EMDatabase()]]></source>
<afterSource><![CDATA[        {
            //Seed method to populate the database with sample data
            System.Data.Entity.Database.SetInitializer(new SampleData());]]></afterSource>
</frame>
<frame value="  at EMDataManager..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDataManager.cs(36)" method="EMDataManager..ctor()" offset="9" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDataManager.cs" line="36"><method assemblyName="emAPI" name=".ctor" token="6000190"><declaringType assemblyName="emAPI" name="EMDataManager" token="2000015" namespace="emAPI.DAL"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="EMDataManager" token="2000015" namespace="emAPI.DAL"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[        /// </summary>
        public EMDataManager()
        {]]></beforeSource>
<source><![CDATA[            emdb = new EMDatabase();]]></source>
<afterSource><![CDATA[        }

//* * * METHODS]]></afterSource>
</frame>
<frame value="  at EMMediator..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\EMMediator.cs(43)" method="EMMediator..ctor()" offset="9" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\EMMediator.cs" line="43"><method assemblyName="emAPI" name=".ctor" token="6000249"><declaringType assemblyName="emAPI" name="EMMediator" token="2000020" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="EMMediator" token="2000020" namespace="emAPI.Controllers"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[
        internal EMMediator()
        {]]></beforeSource>
<source><![CDATA[            DataManager = new EMDataManager();]]></source>
<afterSource><![CDATA[        }

        public void addPropertyToUser(int propertyId, int userId)]]></afterSource>
</frame>
<frame value="  at ApportionmentManager..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs(27)" method="ApportionmentManager..ctor()" offset="1" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs" line="27"><method assemblyName="emAPI" name=".ctor" token="60001f8"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[    /// </summary>
    public class ApportionmentManager : IApportionmentManager
    {]]></beforeSource>
<source><![CDATA[        private EMMediator mediator = new EMMediator();]]></source>
<afterSource><![CDATA[

        /// <summary>]]></afterSource>
</frame>
<frame value="  at ApportionmentManagerFactory.Create()" method="ApportionmentManagerFactory.Create()" offset="0"><method assemblyName="emAPI.Explorables" name="Create" static="true" token="6000002"><declaringType assemblyName="emAPI.Explorables" name="ApportionmentManagerFactory" token="2000002" namespace="emAPI.Controllers"/>
<resultType spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</resultType>
</method>
</frame>
<frame value="  at ThreadHelper.ThreadStart_Context(Object)" method="ThreadHelper.ThreadStart_Context(Object)" offset="59"><method assemblyName="mscorlib" name="ThreadStart_Context" static="true" token="6001664"><declaringType assemblyName="mscorlib" name="ThreadHelper" token="20001be" namespace="System.Threading"/>
<parameter name="state" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" offset="142"><method assemblyName="mscorlib" name="Run" static="true" token="600158d"><declaringType assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
<parameter name="executionContext" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="callback" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ContextCallback" token="20001a2" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="state" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
<parameter name="ignoreSyncCtx" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" offset="9"><method assemblyName="mscorlib" name="Run" static="true" token="600158c"><declaringType assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
<parameter name="executionContext" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="callback" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ContextCallback" token="20001a2" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="state" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ThreadHelper.ThreadStart(Object)" method="ThreadHelper.ThreadStart(Object)" offset="50"><method assemblyName="mscorlib" name="ThreadStart" token="6001665"><declaringType assemblyName="mscorlib" name="ThreadHelper" token="20001be" namespace="System.Threading"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="ThreadHelper" token="20001be" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="obj" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
</method>
</frame>
</stackTrace>
</uninstrumented>
<uninstrumented methodDisplayName="System.Void System.Text.DecoderReplacementFallback..ctor(System.String replacement)" declaringTypeDisplayName="System.Text.DecoderReplacementFallback" methodShortDisplayName="DecoderReplacementFallback..ctor(String)" wikiTopic="Uninstrumented Method Called"><method><definition assemblyName="mscorlib" name=".ctor" token="60033e9"><declaringType assemblyName="mscorlib" name="DecoderReplacementFallback" token="2000513" namespace="System.Text"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="DecoderReplacementFallback" token="2000513" namespace="System.Text"/>
</type>
</parameter>
<parameter name="replacement" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
</definition>
</method>
<stackTrace><frame value="  at Char.IsSurrogate(String, Int32)" method="Char.IsSurrogate(String, Int32)" offset="0"><method assemblyName="mscorlib" name="IsSurrogate" static="true" token="60067ca"><declaringType assemblyName="mscorlib" valueType="true" name="Char" token="20000a1" namespace="System"/>
<parameter position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</resultType>
</method>
</frame>
<frame value="  at DecoderReplacementFallback..ctor(String)" method="DecoderReplacementFallback..ctor(String)" offset="26"><method assemblyName="mscorlib" name=".ctor" token="60033e9"><declaringType assemblyName="mscorlib" name="DecoderReplacementFallback" token="2000513" namespace="System.Text"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="DecoderReplacementFallback" token="2000513" namespace="System.Text"/>
</type>
</parameter>
<parameter name="replacement" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at UTF8Encoding.SetDefaultFallbacks()" method="UTF8Encoding.SetDefaultFallbacks()" offset="53"><method assemblyName="mscorlib" name="SetDefaultFallbacks" token="6003505"><declaringType assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at Encoding..ctor(Int32)" method="Encoding..ctor(Int32)" offset="36"><method assemblyName="mscorlib" name=".ctor" token="6006b05"><declaringType assemblyName="mscorlib" name="Encoding" token="20004fc" namespace="System.Text"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="Encoding" token="20004fc" namespace="System.Text"/>
</type>
</parameter>
<parameter position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at UTF8Encoding..ctor(Boolean, Boolean)" method="UTF8Encoding..ctor(Boolean, Boolean)" offset="6"><method assemblyName="mscorlib" name=".ctor" token="6003504"><declaringType assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
</type>
</parameter>
<parameter name="encoderShouldEmitUTF8Identifier" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
<parameter name="throwOnInvalidBytes" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at CustomAttributeBuilder.InitCustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[], FieldInfo[], Object[])" method="CustomAttributeBuilder.InitCustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[], FieldInfo[], Object[])" offset="435"><method assemblyName="mscorlib" name="InitCustomAttributeBuilder" token="60057f7"><declaringType assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
</type>
</parameter>
<parameter name="con" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ConstructorInfo" token="200045a" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="constructorArgs" position="2"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter name="namedProperties" position="3"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="PropertyInfo" token="200045e" namespace="System.Reflection"/>
</elementType>
</type>
</parameter>
<parameter name="propertyValues" position="4"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter name="namedFields" position="5"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="FieldInfo" token="200045c" namespace="System.Reflection"/>
</elementType>
</type>
</parameter>
<parameter name="fieldValues" position="6"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
</method>
</frame>
<frame value="  at CustomAttributeBuilder..ctor(ConstructorInfo, Object[])" method="CustomAttributeBuilder..ctor(ConstructorInfo, Object[])" offset="38"><method assemblyName="mscorlib" name=".ctor" token="60057f2"><declaringType assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
</type>
</parameter>
<parameter name="con" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ConstructorInfo" token="200045a" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="constructorArgs" position="2"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
</method>
</frame>
<frame value="  at DynamicMethod.GetDynamicMethodsModule()" method="DynamicMethod.GetDynamicMethodsModule()" offset="96"><method assemblyName="mscorlib" name="GetDynamicMethodsModule" static="true" token="600567d"><declaringType assemblyName="mscorlib" name="DynamicMethod" token="200098a" namespace="System.Reflection.Emit"/>
<resultType spec="Class"><definition assemblyName="mscorlib" name="RuntimeModule" token="2000443" namespace="System.Reflection"/>
</resultType>
</method>
</frame>
<frame value="  at DynamicMethod.Init(String, MethodAttributes, CallingConventions, Type, Type[], Type, Module, Boolean, Boolean)" method="DynamicMethod.Init(String, MethodAttributes, CallingConventions, Type, Type[], Type, Module, Boolean, Boolean)" offset="288"><method assemblyName="mscorlib" name="Init" token="600567e"><declaringType assemblyName="mscorlib" name="DynamicMethod" token="200098a" namespace="System.Reflection.Emit"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="DynamicMethod" token="200098a" namespace="System.Reflection.Emit"/>
</type>
</parameter>
<parameter name="name" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="attributes" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="MethodAttributes" token="200043d" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="callingConvention" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="CallingConventions" token="2000406" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="returnType" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
<parameter name="signature" position="5"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter name="owner" position="6"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
<parameter name="m" position="7"><type spec="Class"><definition assemblyName="mscorlib" name="Module" token="2000442" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="skipVisibility" position="8"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
<parameter name="transparentMethod" position="9"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at LambdaCompiler..ctor(AnalyzedTree, LambdaExpression)" method="LambdaCompiler..ctor(AnalyzedTree, LambdaExpression)" offset="86"><method assemblyName="System.Core" name=".ctor" token="60014c8"><declaringType assemblyName="System.Core" name="LambdaCompiler" token="20002d0" namespace="System.Linq.Expressions.Compiler"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="System.Core" name="LambdaCompiler" token="20002d0" namespace="System.Linq.Expressions.Compiler"/>
</type>
</parameter>
<parameter name="tree" position="1"><type spec="Class"><definition assemblyName="System.Core" name="AnalyzedTree" token="20002b8" namespace="System.Linq.Expressions.Compiler"/>
</type>
</parameter>
<parameter name="lambda" position="2"><type spec="Class"><definition assemblyName="System.Core" name="LambdaExpression" token="200028e" namespace="System.Linq.Expressions"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at LambdaCompiler.Compile(LambdaExpression, DebugInfoGenerator)" method="LambdaCompiler.Compile(LambdaExpression, DebugInfoGenerator)" offset="17"><method assemblyName="System.Core" name="Compile" static="true" token="60014d0"><declaringType assemblyName="System.Core" name="LambdaCompiler" token="20002d0" namespace="System.Linq.Expressions.Compiler"/>
<parameter name="lambda" position="0"><type spec="Class"><definition assemblyName="System.Core" name="LambdaExpression" token="200028e" namespace="System.Linq.Expressions"/>
</type>
</parameter>
<parameter name="debugInfoGenerator" position="1"><type spec="Class"><definition assemblyName="System.Core" name="DebugInfoGenerator" token="20002c7" namespace="System.Runtime.CompilerServices"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Delegate" token="2000015" namespace="System"/>
</resultType>
</method>
</frame>
<frame value="  at Expression`1.Compile()" method="Expression`1.Compile()" offset="2"><method assemblyName="System.Core" name="Compile" token="60012d8"><declaringType assemblyName="System.Core" name="Expression`1" token="200028f" namespace="System.Linq.Expressions"><genericParameter value="TDelegate"/>
</declaringType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="System.Core" name="Expression`1" token="200028f" namespace="System.Linq.Expressions"><genericParameter value="TDelegate"/>
</definition>
<genericTypeArgument spec="GenericTypeParameter" index="0"/>
</type>
</parameter>
<resultType spec="GenericTypeParameter" index="0"/>
</method>
</frame>
<frame value="  at DbSetDiscoveryService.GetSets()" method="DbSetDiscoveryService.GetSets()" offset="398"><method assemblyName="EntityFramework" name="GetSets" token="6000c71"><declaringType assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Dictionary`2" token="2000354" namespace="System.Collections.Generic"><genericParameter value="TKey"/>
<genericParameter value="TValue"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</genericTypeArgument>
<genericTypeArgument spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</genericTypeArgument>
</genericTypeArgument>
</resultType>
</method>
</frame>
<frame value="  at DbSetDiscoveryService.InitializeSets()" method="DbSetDiscoveryService.InitializeSets()" offset="1"><method assemblyName="EntityFramework" name="InitializeSets" token="6000c72"><declaringType assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at DbContext.DiscoverAndInitializeSets()" method="DbContext.DiscoverAndInitializeSets()" offset="6"><method assemblyName="EntityFramework" name="DiscoverAndInitializeSets" token="6000105"><declaringType assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at DbContext.InitializeLazyInternalContext(IInternalConnection, DbCompiledModel)" method="DbContext.InitializeLazyInternalContext(IInternalConnection, DbCompiledModel)" offset="15"><method assemblyName="EntityFramework" name="InitializeLazyInternalContext" token="6000104"><declaringType assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
</type>
</parameter>
<parameter name="internalConnection" position="1"><type spec="Class"><definition assemblyName="EntityFramework" name="IInternalConnection" token="2000019" namespace="System.Data.Entity.Internal"/>
</type>
</parameter>
<parameter name="model" position="2"><type spec="Class"><definition assemblyName="EntityFramework" name="DbCompiledModel" token="20000d5" namespace="System.Data.Entity.Infrastructure"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at DbContext..ctor()" method="DbContext..ctor()" offset="24"><method assemblyName="EntityFramework" name=".ctor" token="60000fd"><declaringType assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at EMDatabase..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDatabase.cs(28)" method="EMDatabase..ctor()" offset="1" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDatabase.cs" line="28"><method assemblyName="emAPI" name=".ctor" token="600025e"><declaringType assemblyName="emAPI" name="EMDatabase" token="2000022" namespace="emAPI.DAL"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="EMDatabase" token="2000022" namespace="emAPI.DAL"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[    /// </summary>
    class EMDatabase : DbContext
    {]]></beforeSource>
<source><![CDATA[        internal EMDatabase()]]></source>
<afterSource><![CDATA[        {
            //Seed method to populate the database with sample data
            System.Data.Entity.Database.SetInitializer(new SampleData());]]></afterSource>
</frame>
<frame value="  at EMDataManager..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDataManager.cs(36)" method="EMDataManager..ctor()" offset="9" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDataManager.cs" line="36"><method assemblyName="emAPI" name=".ctor" token="6000190"><declaringType assemblyName="emAPI" name="EMDataManager" token="2000015" namespace="emAPI.DAL"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="EMDataManager" token="2000015" namespace="emAPI.DAL"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[        /// </summary>
        public EMDataManager()
        {]]></beforeSource>
<source><![CDATA[            emdb = new EMDatabase();]]></source>
<afterSource><![CDATA[        }

//* * * METHODS]]></afterSource>
</frame>
<frame value="  at EMMediator..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\EMMediator.cs(43)" method="EMMediator..ctor()" offset="9" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\EMMediator.cs" line="43"><method assemblyName="emAPI" name=".ctor" token="6000249"><declaringType assemblyName="emAPI" name="EMMediator" token="2000020" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="EMMediator" token="2000020" namespace="emAPI.Controllers"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[
        internal EMMediator()
        {]]></beforeSource>
<source><![CDATA[            DataManager = new EMDataManager();]]></source>
<afterSource><![CDATA[        }

        public void addPropertyToUser(int propertyId, int userId)]]></afterSource>
</frame>
<frame value="  at ApportionmentManager..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs(27)" method="ApportionmentManager..ctor()" offset="1" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs" line="27"><method assemblyName="emAPI" name=".ctor" token="60001f8"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[    /// </summary>
    public class ApportionmentManager : IApportionmentManager
    {]]></beforeSource>
<source><![CDATA[        private EMMediator mediator = new EMMediator();]]></source>
<afterSource><![CDATA[

        /// <summary>]]></afterSource>
</frame>
<frame value="  at ApportionmentManagerFactory.Create()" method="ApportionmentManagerFactory.Create()" offset="0"><method assemblyName="emAPI.Explorables" name="Create" static="true" token="6000002"><declaringType assemblyName="emAPI.Explorables" name="ApportionmentManagerFactory" token="2000002" namespace="emAPI.Controllers"/>
<resultType spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</resultType>
</method>
</frame>
<frame value="  at ThreadHelper.ThreadStart_Context(Object)" method="ThreadHelper.ThreadStart_Context(Object)" offset="59"><method assemblyName="mscorlib" name="ThreadStart_Context" static="true" token="6001664"><declaringType assemblyName="mscorlib" name="ThreadHelper" token="20001be" namespace="System.Threading"/>
<parameter name="state" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" offset="142"><method assemblyName="mscorlib" name="Run" static="true" token="600158d"><declaringType assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
<parameter name="executionContext" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="callback" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ContextCallback" token="20001a2" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="state" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
<parameter name="ignoreSyncCtx" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" offset="9"><method assemblyName="mscorlib" name="Run" static="true" token="600158c"><declaringType assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
<parameter name="executionContext" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="callback" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ContextCallback" token="20001a2" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="state" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ThreadHelper.ThreadStart(Object)" method="ThreadHelper.ThreadStart(Object)" offset="50"><method assemblyName="mscorlib" name="ThreadStart" token="6001665"><declaringType assemblyName="mscorlib" name="ThreadHelper" token="20001be" namespace="System.Threading"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="ThreadHelper" token="20001be" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="obj" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
</method>
</frame>
</stackTrace>
</uninstrumented>
<uninstrumented methodDisplayName="System.Text.EncoderFallback System.Text.EncoderFallback.get_ExceptionFallback()" declaringTypeDisplayName="System.Text.EncoderFallback" methodShortDisplayName="EncoderFallback.get_ExceptionFallback()" wikiTopic="Uninstrumented Method Called"><method><definition assemblyName="mscorlib" name="get_ExceptionFallback" static="true" token="6003407"><declaringType assemblyName="mscorlib" name="EncoderFallback" token="2000516" namespace="System.Text"/>
<resultType spec="Class"><definition assemblyName="mscorlib" name="EncoderFallback" token="2000516" namespace="System.Text"/>
</resultType>
</definition>
</method>
<stackTrace><frame value="  at UTF8Encoding.SetDefaultFallbacks()" method="UTF8Encoding.SetDefaultFallbacks()" offset="14"><method assemblyName="mscorlib" name="SetDefaultFallbacks" token="6003505"><declaringType assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at UTF8Encoding..ctor(Boolean, Boolean)" method="UTF8Encoding..ctor(Boolean, Boolean)" offset="34"><method assemblyName="mscorlib" name=".ctor" token="6003504"><declaringType assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
</type>
</parameter>
<parameter name="encoderShouldEmitUTF8Identifier" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
<parameter name="throwOnInvalidBytes" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at CustomAttributeBuilder.InitCustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[], FieldInfo[], Object[])" method="CustomAttributeBuilder.InitCustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[], FieldInfo[], Object[])" offset="435"><method assemblyName="mscorlib" name="InitCustomAttributeBuilder" token="60057f7"><declaringType assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
</type>
</parameter>
<parameter name="con" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ConstructorInfo" token="200045a" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="constructorArgs" position="2"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter name="namedProperties" position="3"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="PropertyInfo" token="200045e" namespace="System.Reflection"/>
</elementType>
</type>
</parameter>
<parameter name="propertyValues" position="4"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter name="namedFields" position="5"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="FieldInfo" token="200045c" namespace="System.Reflection"/>
</elementType>
</type>
</parameter>
<parameter name="fieldValues" position="6"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
</method>
</frame>
<frame value="  at CustomAttributeBuilder..ctor(ConstructorInfo, Object[])" method="CustomAttributeBuilder..ctor(ConstructorInfo, Object[])" offset="38"><method assemblyName="mscorlib" name=".ctor" token="60057f2"><declaringType assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
</type>
</parameter>
<parameter name="con" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ConstructorInfo" token="200045a" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="constructorArgs" position="2"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
</method>
</frame>
<frame value="  at DynamicMethod.GetDynamicMethodsModule()" method="DynamicMethod.GetDynamicMethodsModule()" offset="96"><method assemblyName="mscorlib" name="GetDynamicMethodsModule" static="true" token="600567d"><declaringType assemblyName="mscorlib" name="DynamicMethod" token="200098a" namespace="System.Reflection.Emit"/>
<resultType spec="Class"><definition assemblyName="mscorlib" name="RuntimeModule" token="2000443" namespace="System.Reflection"/>
</resultType>
</method>
</frame>
<frame value="  at DynamicMethod.Init(String, MethodAttributes, CallingConventions, Type, Type[], Type, Module, Boolean, Boolean)" method="DynamicMethod.Init(String, MethodAttributes, CallingConventions, Type, Type[], Type, Module, Boolean, Boolean)" offset="288"><method assemblyName="mscorlib" name="Init" token="600567e"><declaringType assemblyName="mscorlib" name="DynamicMethod" token="200098a" namespace="System.Reflection.Emit"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="DynamicMethod" token="200098a" namespace="System.Reflection.Emit"/>
</type>
</parameter>
<parameter name="name" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="attributes" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="MethodAttributes" token="200043d" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="callingConvention" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="CallingConventions" token="2000406" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="returnType" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
<parameter name="signature" position="5"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter name="owner" position="6"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
<parameter name="m" position="7"><type spec="Class"><definition assemblyName="mscorlib" name="Module" token="2000442" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="skipVisibility" position="8"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
<parameter name="transparentMethod" position="9"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at LambdaCompiler..ctor(AnalyzedTree, LambdaExpression)" method="LambdaCompiler..ctor(AnalyzedTree, LambdaExpression)" offset="86"><method assemblyName="System.Core" name=".ctor" token="60014c8"><declaringType assemblyName="System.Core" name="LambdaCompiler" token="20002d0" namespace="System.Linq.Expressions.Compiler"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="System.Core" name="LambdaCompiler" token="20002d0" namespace="System.Linq.Expressions.Compiler"/>
</type>
</parameter>
<parameter name="tree" position="1"><type spec="Class"><definition assemblyName="System.Core" name="AnalyzedTree" token="20002b8" namespace="System.Linq.Expressions.Compiler"/>
</type>
</parameter>
<parameter name="lambda" position="2"><type spec="Class"><definition assemblyName="System.Core" name="LambdaExpression" token="200028e" namespace="System.Linq.Expressions"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at LambdaCompiler.Compile(LambdaExpression, DebugInfoGenerator)" method="LambdaCompiler.Compile(LambdaExpression, DebugInfoGenerator)" offset="17"><method assemblyName="System.Core" name="Compile" static="true" token="60014d0"><declaringType assemblyName="System.Core" name="LambdaCompiler" token="20002d0" namespace="System.Linq.Expressions.Compiler"/>
<parameter name="lambda" position="0"><type spec="Class"><definition assemblyName="System.Core" name="LambdaExpression" token="200028e" namespace="System.Linq.Expressions"/>
</type>
</parameter>
<parameter name="debugInfoGenerator" position="1"><type spec="Class"><definition assemblyName="System.Core" name="DebugInfoGenerator" token="20002c7" namespace="System.Runtime.CompilerServices"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Delegate" token="2000015" namespace="System"/>
</resultType>
</method>
</frame>
<frame value="  at Expression`1.Compile()" method="Expression`1.Compile()" offset="2"><method assemblyName="System.Core" name="Compile" token="60012d8"><declaringType assemblyName="System.Core" name="Expression`1" token="200028f" namespace="System.Linq.Expressions"><genericParameter value="TDelegate"/>
</declaringType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="System.Core" name="Expression`1" token="200028f" namespace="System.Linq.Expressions"><genericParameter value="TDelegate"/>
</definition>
<genericTypeArgument spec="GenericTypeParameter" index="0"/>
</type>
</parameter>
<resultType spec="GenericTypeParameter" index="0"/>
</method>
</frame>
<frame value="  at DbSetDiscoveryService.GetSets()" method="DbSetDiscoveryService.GetSets()" offset="398"><method assemblyName="EntityFramework" name="GetSets" token="6000c71"><declaringType assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Dictionary`2" token="2000354" namespace="System.Collections.Generic"><genericParameter value="TKey"/>
<genericParameter value="TValue"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</genericTypeArgument>
<genericTypeArgument spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</genericTypeArgument>
</genericTypeArgument>
</resultType>
</method>
</frame>
<frame value="  at DbSetDiscoveryService.InitializeSets()" method="DbSetDiscoveryService.InitializeSets()" offset="1"><method assemblyName="EntityFramework" name="InitializeSets" token="6000c72"><declaringType assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at DbContext.DiscoverAndInitializeSets()" method="DbContext.DiscoverAndInitializeSets()" offset="6"><method assemblyName="EntityFramework" name="DiscoverAndInitializeSets" token="6000105"><declaringType assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at DbContext.InitializeLazyInternalContext(IInternalConnection, DbCompiledModel)" method="DbContext.InitializeLazyInternalContext(IInternalConnection, DbCompiledModel)" offset="15"><method assemblyName="EntityFramework" name="InitializeLazyInternalContext" token="6000104"><declaringType assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
</type>
</parameter>
<parameter name="internalConnection" position="1"><type spec="Class"><definition assemblyName="EntityFramework" name="IInternalConnection" token="2000019" namespace="System.Data.Entity.Internal"/>
</type>
</parameter>
<parameter name="model" position="2"><type spec="Class"><definition assemblyName="EntityFramework" name="DbCompiledModel" token="20000d5" namespace="System.Data.Entity.Infrastructure"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at DbContext..ctor()" method="DbContext..ctor()" offset="24"><method assemblyName="EntityFramework" name=".ctor" token="60000fd"><declaringType assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at EMDatabase..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDatabase.cs(28)" method="EMDatabase..ctor()" offset="1" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDatabase.cs" line="28"><method assemblyName="emAPI" name=".ctor" token="600025e"><declaringType assemblyName="emAPI" name="EMDatabase" token="2000022" namespace="emAPI.DAL"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="EMDatabase" token="2000022" namespace="emAPI.DAL"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[    /// </summary>
    class EMDatabase : DbContext
    {]]></beforeSource>
<source><![CDATA[        internal EMDatabase()]]></source>
<afterSource><![CDATA[        {
            //Seed method to populate the database with sample data
            System.Data.Entity.Database.SetInitializer(new SampleData());]]></afterSource>
</frame>
<frame value="  at EMDataManager..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDataManager.cs(36)" method="EMDataManager..ctor()" offset="9" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDataManager.cs" line="36"><method assemblyName="emAPI" name=".ctor" token="6000190"><declaringType assemblyName="emAPI" name="EMDataManager" token="2000015" namespace="emAPI.DAL"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="EMDataManager" token="2000015" namespace="emAPI.DAL"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[        /// </summary>
        public EMDataManager()
        {]]></beforeSource>
<source><![CDATA[            emdb = new EMDatabase();]]></source>
<afterSource><![CDATA[        }

//* * * METHODS]]></afterSource>
</frame>
<frame value="  at EMMediator..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\EMMediator.cs(43)" method="EMMediator..ctor()" offset="9" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\EMMediator.cs" line="43"><method assemblyName="emAPI" name=".ctor" token="6000249"><declaringType assemblyName="emAPI" name="EMMediator" token="2000020" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="EMMediator" token="2000020" namespace="emAPI.Controllers"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[
        internal EMMediator()
        {]]></beforeSource>
<source><![CDATA[            DataManager = new EMDataManager();]]></source>
<afterSource><![CDATA[        }

        public void addPropertyToUser(int propertyId, int userId)]]></afterSource>
</frame>
<frame value="  at ApportionmentManager..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs(27)" method="ApportionmentManager..ctor()" offset="1" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs" line="27"><method assemblyName="emAPI" name=".ctor" token="60001f8"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[    /// </summary>
    public class ApportionmentManager : IApportionmentManager
    {]]></beforeSource>
<source><![CDATA[        private EMMediator mediator = new EMMediator();]]></source>
<afterSource><![CDATA[

        /// <summary>]]></afterSource>
</frame>
<frame value="  at ApportionmentManagerFactory.Create()" method="ApportionmentManagerFactory.Create()" offset="0"><method assemblyName="emAPI.Explorables" name="Create" static="true" token="6000002"><declaringType assemblyName="emAPI.Explorables" name="ApportionmentManagerFactory" token="2000002" namespace="emAPI.Controllers"/>
<resultType spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</resultType>
</method>
</frame>
<frame value="  at ThreadHelper.ThreadStart_Context(Object)" method="ThreadHelper.ThreadStart_Context(Object)" offset="59"><method assemblyName="mscorlib" name="ThreadStart_Context" static="true" token="6001664"><declaringType assemblyName="mscorlib" name="ThreadHelper" token="20001be" namespace="System.Threading"/>
<parameter name="state" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" offset="142"><method assemblyName="mscorlib" name="Run" static="true" token="600158d"><declaringType assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
<parameter name="executionContext" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="callback" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ContextCallback" token="20001a2" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="state" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
<parameter name="ignoreSyncCtx" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" offset="9"><method assemblyName="mscorlib" name="Run" static="true" token="600158c"><declaringType assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
<parameter name="executionContext" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="callback" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ContextCallback" token="20001a2" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="state" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ThreadHelper.ThreadStart(Object)" method="ThreadHelper.ThreadStart(Object)" offset="50"><method assemblyName="mscorlib" name="ThreadStart" token="6001665"><declaringType assemblyName="mscorlib" name="ThreadHelper" token="20001be" namespace="System.Threading"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="ThreadHelper" token="20001be" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="obj" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
</method>
</frame>
</stackTrace>
</uninstrumented>
<uninstrumented methodDisplayName="System.Text.DecoderFallback System.Text.DecoderFallback.get_ExceptionFallback()" declaringTypeDisplayName="System.Text.DecoderFallback" methodShortDisplayName="DecoderFallback.get_ExceptionFallback()" wikiTopic="Uninstrumented Method Called"><method><definition assemblyName="mscorlib" name="get_ExceptionFallback" static="true" token="60033b8"><declaringType assemblyName="mscorlib" name="DecoderFallback" token="200050c" namespace="System.Text"/>
<resultType spec="Class"><definition assemblyName="mscorlib" name="DecoderFallback" token="200050c" namespace="System.Text"/>
</resultType>
</definition>
</method>
<stackTrace><frame value="  at UTF8Encoding.SetDefaultFallbacks()" method="UTF8Encoding.SetDefaultFallbacks()" offset="25"><method assemblyName="mscorlib" name="SetDefaultFallbacks" token="6003505"><declaringType assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at UTF8Encoding..ctor(Boolean, Boolean)" method="UTF8Encoding..ctor(Boolean, Boolean)" offset="34"><method assemblyName="mscorlib" name=".ctor" token="6003504"><declaringType assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
</type>
</parameter>
<parameter name="encoderShouldEmitUTF8Identifier" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
<parameter name="throwOnInvalidBytes" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at CustomAttributeBuilder.InitCustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[], FieldInfo[], Object[])" method="CustomAttributeBuilder.InitCustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[], FieldInfo[], Object[])" offset="435"><method assemblyName="mscorlib" name="InitCustomAttributeBuilder" token="60057f7"><declaringType assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
</type>
</parameter>
<parameter name="con" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ConstructorInfo" token="200045a" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="constructorArgs" position="2"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter name="namedProperties" position="3"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="PropertyInfo" token="200045e" namespace="System.Reflection"/>
</elementType>
</type>
</parameter>
<parameter name="propertyValues" position="4"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter name="namedFields" position="5"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="FieldInfo" token="200045c" namespace="System.Reflection"/>
</elementType>
</type>
</parameter>
<parameter name="fieldValues" position="6"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
</method>
</frame>
<frame value="  at CustomAttributeBuilder..ctor(ConstructorInfo, Object[])" method="CustomAttributeBuilder..ctor(ConstructorInfo, Object[])" offset="38"><method assemblyName="mscorlib" name=".ctor" token="60057f2"><declaringType assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
</type>
</parameter>
<parameter name="con" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ConstructorInfo" token="200045a" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="constructorArgs" position="2"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
</method>
</frame>
<frame value="  at DynamicMethod.GetDynamicMethodsModule()" method="DynamicMethod.GetDynamicMethodsModule()" offset="96"><method assemblyName="mscorlib" name="GetDynamicMethodsModule" static="true" token="600567d"><declaringType assemblyName="mscorlib" name="DynamicMethod" token="200098a" namespace="System.Reflection.Emit"/>
<resultType spec="Class"><definition assemblyName="mscorlib" name="RuntimeModule" token="2000443" namespace="System.Reflection"/>
</resultType>
</method>
</frame>
<frame value="  at DynamicMethod.Init(String, MethodAttributes, CallingConventions, Type, Type[], Type, Module, Boolean, Boolean)" method="DynamicMethod.Init(String, MethodAttributes, CallingConventions, Type, Type[], Type, Module, Boolean, Boolean)" offset="288"><method assemblyName="mscorlib" name="Init" token="600567e"><declaringType assemblyName="mscorlib" name="DynamicMethod" token="200098a" namespace="System.Reflection.Emit"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="DynamicMethod" token="200098a" namespace="System.Reflection.Emit"/>
</type>
</parameter>
<parameter name="name" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="attributes" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="MethodAttributes" token="200043d" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="callingConvention" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="CallingConventions" token="2000406" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="returnType" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
<parameter name="signature" position="5"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter name="owner" position="6"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
<parameter name="m" position="7"><type spec="Class"><definition assemblyName="mscorlib" name="Module" token="2000442" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="skipVisibility" position="8"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
<parameter name="transparentMethod" position="9"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at LambdaCompiler..ctor(AnalyzedTree, LambdaExpression)" method="LambdaCompiler..ctor(AnalyzedTree, LambdaExpression)" offset="86"><method assemblyName="System.Core" name=".ctor" token="60014c8"><declaringType assemblyName="System.Core" name="LambdaCompiler" token="20002d0" namespace="System.Linq.Expressions.Compiler"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="System.Core" name="LambdaCompiler" token="20002d0" namespace="System.Linq.Expressions.Compiler"/>
</type>
</parameter>
<parameter name="tree" position="1"><type spec="Class"><definition assemblyName="System.Core" name="AnalyzedTree" token="20002b8" namespace="System.Linq.Expressions.Compiler"/>
</type>
</parameter>
<parameter name="lambda" position="2"><type spec="Class"><definition assemblyName="System.Core" name="LambdaExpression" token="200028e" namespace="System.Linq.Expressions"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at LambdaCompiler.Compile(LambdaExpression, DebugInfoGenerator)" method="LambdaCompiler.Compile(LambdaExpression, DebugInfoGenerator)" offset="17"><method assemblyName="System.Core" name="Compile" static="true" token="60014d0"><declaringType assemblyName="System.Core" name="LambdaCompiler" token="20002d0" namespace="System.Linq.Expressions.Compiler"/>
<parameter name="lambda" position="0"><type spec="Class"><definition assemblyName="System.Core" name="LambdaExpression" token="200028e" namespace="System.Linq.Expressions"/>
</type>
</parameter>
<parameter name="debugInfoGenerator" position="1"><type spec="Class"><definition assemblyName="System.Core" name="DebugInfoGenerator" token="20002c7" namespace="System.Runtime.CompilerServices"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Delegate" token="2000015" namespace="System"/>
</resultType>
</method>
</frame>
<frame value="  at Expression`1.Compile()" method="Expression`1.Compile()" offset="2"><method assemblyName="System.Core" name="Compile" token="60012d8"><declaringType assemblyName="System.Core" name="Expression`1" token="200028f" namespace="System.Linq.Expressions"><genericParameter value="TDelegate"/>
</declaringType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="System.Core" name="Expression`1" token="200028f" namespace="System.Linq.Expressions"><genericParameter value="TDelegate"/>
</definition>
<genericTypeArgument spec="GenericTypeParameter" index="0"/>
</type>
</parameter>
<resultType spec="GenericTypeParameter" index="0"/>
</method>
</frame>
<frame value="  at DbSetDiscoveryService.GetSets()" method="DbSetDiscoveryService.GetSets()" offset="398"><method assemblyName="EntityFramework" name="GetSets" token="6000c71"><declaringType assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Dictionary`2" token="2000354" namespace="System.Collections.Generic"><genericParameter value="TKey"/>
<genericParameter value="TValue"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</genericTypeArgument>
<genericTypeArgument spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</genericTypeArgument>
</genericTypeArgument>
</resultType>
</method>
</frame>
<frame value="  at DbSetDiscoveryService.InitializeSets()" method="DbSetDiscoveryService.InitializeSets()" offset="1"><method assemblyName="EntityFramework" name="InitializeSets" token="6000c72"><declaringType assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at DbContext.DiscoverAndInitializeSets()" method="DbContext.DiscoverAndInitializeSets()" offset="6"><method assemblyName="EntityFramework" name="DiscoverAndInitializeSets" token="6000105"><declaringType assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at DbContext.InitializeLazyInternalContext(IInternalConnection, DbCompiledModel)" method="DbContext.InitializeLazyInternalContext(IInternalConnection, DbCompiledModel)" offset="15"><method assemblyName="EntityFramework" name="InitializeLazyInternalContext" token="6000104"><declaringType assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
</type>
</parameter>
<parameter name="internalConnection" position="1"><type spec="Class"><definition assemblyName="EntityFramework" name="IInternalConnection" token="2000019" namespace="System.Data.Entity.Internal"/>
</type>
</parameter>
<parameter name="model" position="2"><type spec="Class"><definition assemblyName="EntityFramework" name="DbCompiledModel" token="20000d5" namespace="System.Data.Entity.Infrastructure"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at DbContext..ctor()" method="DbContext..ctor()" offset="24"><method assemblyName="EntityFramework" name=".ctor" token="60000fd"><declaringType assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at EMDatabase..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDatabase.cs(28)" method="EMDatabase..ctor()" offset="1" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDatabase.cs" line="28"><method assemblyName="emAPI" name=".ctor" token="600025e"><declaringType assemblyName="emAPI" name="EMDatabase" token="2000022" namespace="emAPI.DAL"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="EMDatabase" token="2000022" namespace="emAPI.DAL"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[    /// </summary>
    class EMDatabase : DbContext
    {]]></beforeSource>
<source><![CDATA[        internal EMDatabase()]]></source>
<afterSource><![CDATA[        {
            //Seed method to populate the database with sample data
            System.Data.Entity.Database.SetInitializer(new SampleData());]]></afterSource>
</frame>
<frame value="  at EMDataManager..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDataManager.cs(36)" method="EMDataManager..ctor()" offset="9" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDataManager.cs" line="36"><method assemblyName="emAPI" name=".ctor" token="6000190"><declaringType assemblyName="emAPI" name="EMDataManager" token="2000015" namespace="emAPI.DAL"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="EMDataManager" token="2000015" namespace="emAPI.DAL"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[        /// </summary>
        public EMDataManager()
        {]]></beforeSource>
<source><![CDATA[            emdb = new EMDatabase();]]></source>
<afterSource><![CDATA[        }

//* * * METHODS]]></afterSource>
</frame>
<frame value="  at EMMediator..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\EMMediator.cs(43)" method="EMMediator..ctor()" offset="9" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\EMMediator.cs" line="43"><method assemblyName="emAPI" name=".ctor" token="6000249"><declaringType assemblyName="emAPI" name="EMMediator" token="2000020" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="EMMediator" token="2000020" namespace="emAPI.Controllers"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[
        internal EMMediator()
        {]]></beforeSource>
<source><![CDATA[            DataManager = new EMDataManager();]]></source>
<afterSource><![CDATA[        }

        public void addPropertyToUser(int propertyId, int userId)]]></afterSource>
</frame>
<frame value="  at ApportionmentManager..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs(27)" method="ApportionmentManager..ctor()" offset="1" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs" line="27"><method assemblyName="emAPI" name=".ctor" token="60001f8"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[    /// </summary>
    public class ApportionmentManager : IApportionmentManager
    {]]></beforeSource>
<source><![CDATA[        private EMMediator mediator = new EMMediator();]]></source>
<afterSource><![CDATA[

        /// <summary>]]></afterSource>
</frame>
<frame value="  at ApportionmentManagerFactory.Create()" method="ApportionmentManagerFactory.Create()" offset="0"><method assemblyName="emAPI.Explorables" name="Create" static="true" token="6000002"><declaringType assemblyName="emAPI.Explorables" name="ApportionmentManagerFactory" token="2000002" namespace="emAPI.Controllers"/>
<resultType spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</resultType>
</method>
</frame>
<frame value="  at ThreadHelper.ThreadStart_Context(Object)" method="ThreadHelper.ThreadStart_Context(Object)" offset="59"><method assemblyName="mscorlib" name="ThreadStart_Context" static="true" token="6001664"><declaringType assemblyName="mscorlib" name="ThreadHelper" token="20001be" namespace="System.Threading"/>
<parameter name="state" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" offset="142"><method assemblyName="mscorlib" name="Run" static="true" token="600158d"><declaringType assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
<parameter name="executionContext" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="callback" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ContextCallback" token="20001a2" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="state" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
<parameter name="ignoreSyncCtx" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" offset="9"><method assemblyName="mscorlib" name="Run" static="true" token="600158c"><declaringType assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
<parameter name="executionContext" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="callback" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ContextCallback" token="20001a2" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="state" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ThreadHelper.ThreadStart(Object)" method="ThreadHelper.ThreadStart(Object)" offset="50"><method assemblyName="mscorlib" name="ThreadStart" token="6001665"><declaringType assemblyName="mscorlib" name="ThreadHelper" token="20001be" namespace="System.Threading"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="ThreadHelper" token="20001be" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="obj" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
</method>
</frame>
</stackTrace>
</uninstrumented>
<uninstrumented methodDisplayName="System.Void System.Text.UTF8Encoding+UTF8Encoder..ctor(System.Text.UTF8Encoding encoding)" declaringTypeDisplayName="System.Text.UTF8Encoding+UTF8Encoder" methodShortDisplayName="UTF8Encoder..ctor(UTF8Encoding)" wikiTopic="Uninstrumented Method Called"><method><definition assemblyName="mscorlib" name=".ctor" token="6003522"><declaringType assemblyName="mscorlib" name="UTF8Encoder" token="2000536"><declaringType assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
</declaringType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="UTF8Encoder" token="2000536"><declaringType assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
</definition>
</type>
</parameter>
<parameter name="encoding" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
</type>
</parameter>
</definition>
</method>
<stackTrace><frame value="  at Encoding.get_EncoderFallback()" method="Encoding.get_EncoderFallback()" offset="0"><method assemblyName="mscorlib" name="get_EncoderFallback" token="60032ed"><declaringType assemblyName="mscorlib" name="Encoding" token="20004fc" namespace="System.Text"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="Encoding" token="20004fc" namespace="System.Text"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="EncoderFallback" token="2000516" namespace="System.Text"/>
</resultType>
</method>
</frame>
<frame value="  at UTF8Encoding.GetEncoder()" method="UTF8Encoding.GetEncoder()" offset="1"><method assemblyName="mscorlib" name="GetEncoder" token="600351c"><declaringType assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="UTF8Encoding" token="2000535" namespace="System.Text"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Encoder" token="20004fd" namespace="System.Text"/>
</resultType>
</method>
</frame>
<frame value="  at BinaryWriter..ctor(Stream, Encoding)" method="BinaryWriter..ctor(Stream, Encoding)" offset="97"><method assemblyName="mscorlib" name=".ctor" token="6003fff"><declaringType assemblyName="mscorlib" name="BinaryWriter" token="20006e6" namespace="System.IO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="BinaryWriter" token="20006e6" namespace="System.IO"/>
</type>
</parameter>
<parameter name="output" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Stream" token="20006dc" namespace="System.IO"/>
</type>
</parameter>
<parameter name="encoding" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="Encoding" token="20004fc" namespace="System.Text"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at CustomAttributeBuilder.InitCustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[], FieldInfo[], Object[])" method="CustomAttributeBuilder.InitCustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[], FieldInfo[], Object[])" offset="443"><method assemblyName="mscorlib" name="InitCustomAttributeBuilder" token="60057f7"><declaringType assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
</type>
</parameter>
<parameter name="con" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ConstructorInfo" token="200045a" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="constructorArgs" position="2"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter name="namedProperties" position="3"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="PropertyInfo" token="200045e" namespace="System.Reflection"/>
</elementType>
</type>
</parameter>
<parameter name="propertyValues" position="4"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter name="namedFields" position="5"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="FieldInfo" token="200045c" namespace="System.Reflection"/>
</elementType>
</type>
</parameter>
<parameter name="fieldValues" position="6"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
</method>
</frame>
<frame value="  at CustomAttributeBuilder..ctor(ConstructorInfo, Object[])" method="CustomAttributeBuilder..ctor(ConstructorInfo, Object[])" offset="38"><method assemblyName="mscorlib" name=".ctor" token="60057f2"><declaringType assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
</type>
</parameter>
<parameter name="con" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ConstructorInfo" token="200045a" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="constructorArgs" position="2"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
</method>
</frame>
<frame value="  at DynamicMethod.GetDynamicMethodsModule()" method="DynamicMethod.GetDynamicMethodsModule()" offset="96"><method assemblyName="mscorlib" name="GetDynamicMethodsModule" static="true" token="600567d"><declaringType assemblyName="mscorlib" name="DynamicMethod" token="200098a" namespace="System.Reflection.Emit"/>
<resultType spec="Class"><definition assemblyName="mscorlib" name="RuntimeModule" token="2000443" namespace="System.Reflection"/>
</resultType>
</method>
</frame>
<frame value="  at DynamicMethod.Init(String, MethodAttributes, CallingConventions, Type, Type[], Type, Module, Boolean, Boolean)" method="DynamicMethod.Init(String, MethodAttributes, CallingConventions, Type, Type[], Type, Module, Boolean, Boolean)" offset="288"><method assemblyName="mscorlib" name="Init" token="600567e"><declaringType assemblyName="mscorlib" name="DynamicMethod" token="200098a" namespace="System.Reflection.Emit"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="DynamicMethod" token="200098a" namespace="System.Reflection.Emit"/>
</type>
</parameter>
<parameter name="name" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="attributes" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="MethodAttributes" token="200043d" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="callingConvention" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="CallingConventions" token="2000406" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="returnType" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
<parameter name="signature" position="5"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter name="owner" position="6"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
<parameter name="m" position="7"><type spec="Class"><definition assemblyName="mscorlib" name="Module" token="2000442" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="skipVisibility" position="8"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
<parameter name="transparentMethod" position="9"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at LambdaCompiler..ctor(AnalyzedTree, LambdaExpression)" method="LambdaCompiler..ctor(AnalyzedTree, LambdaExpression)" offset="86"><method assemblyName="System.Core" name=".ctor" token="60014c8"><declaringType assemblyName="System.Core" name="LambdaCompiler" token="20002d0" namespace="System.Linq.Expressions.Compiler"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="System.Core" name="LambdaCompiler" token="20002d0" namespace="System.Linq.Expressions.Compiler"/>
</type>
</parameter>
<parameter name="tree" position="1"><type spec="Class"><definition assemblyName="System.Core" name="AnalyzedTree" token="20002b8" namespace="System.Linq.Expressions.Compiler"/>
</type>
</parameter>
<parameter name="lambda" position="2"><type spec="Class"><definition assemblyName="System.Core" name="LambdaExpression" token="200028e" namespace="System.Linq.Expressions"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at LambdaCompiler.Compile(LambdaExpression, DebugInfoGenerator)" method="LambdaCompiler.Compile(LambdaExpression, DebugInfoGenerator)" offset="17"><method assemblyName="System.Core" name="Compile" static="true" token="60014d0"><declaringType assemblyName="System.Core" name="LambdaCompiler" token="20002d0" namespace="System.Linq.Expressions.Compiler"/>
<parameter name="lambda" position="0"><type spec="Class"><definition assemblyName="System.Core" name="LambdaExpression" token="200028e" namespace="System.Linq.Expressions"/>
</type>
</parameter>
<parameter name="debugInfoGenerator" position="1"><type spec="Class"><definition assemblyName="System.Core" name="DebugInfoGenerator" token="20002c7" namespace="System.Runtime.CompilerServices"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Delegate" token="2000015" namespace="System"/>
</resultType>
</method>
</frame>
<frame value="  at Expression`1.Compile()" method="Expression`1.Compile()" offset="2"><method assemblyName="System.Core" name="Compile" token="60012d8"><declaringType assemblyName="System.Core" name="Expression`1" token="200028f" namespace="System.Linq.Expressions"><genericParameter value="TDelegate"/>
</declaringType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="System.Core" name="Expression`1" token="200028f" namespace="System.Linq.Expressions"><genericParameter value="TDelegate"/>
</definition>
<genericTypeArgument spec="GenericTypeParameter" index="0"/>
</type>
</parameter>
<resultType spec="GenericTypeParameter" index="0"/>
</method>
</frame>
<frame value="  at DbSetDiscoveryService.GetSets()" method="DbSetDiscoveryService.GetSets()" offset="398"><method assemblyName="EntityFramework" name="GetSets" token="6000c71"><declaringType assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Dictionary`2" token="2000354" namespace="System.Collections.Generic"><genericParameter value="TKey"/>
<genericParameter value="TValue"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</genericTypeArgument>
<genericTypeArgument spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</genericTypeArgument>
</genericTypeArgument>
</resultType>
</method>
</frame>
<frame value="  at DbSetDiscoveryService.InitializeSets()" method="DbSetDiscoveryService.InitializeSets()" offset="1"><method assemblyName="EntityFramework" name="InitializeSets" token="6000c72"><declaringType assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at DbContext.DiscoverAndInitializeSets()" method="DbContext.DiscoverAndInitializeSets()" offset="6"><method assemblyName="EntityFramework" name="DiscoverAndInitializeSets" token="6000105"><declaringType assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at DbContext.InitializeLazyInternalContext(IInternalConnection, DbCompiledModel)" method="DbContext.InitializeLazyInternalContext(IInternalConnection, DbCompiledModel)" offset="15"><method assemblyName="EntityFramework" name="InitializeLazyInternalContext" token="6000104"><declaringType assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
</type>
</parameter>
<parameter name="internalConnection" position="1"><type spec="Class"><definition assemblyName="EntityFramework" name="IInternalConnection" token="2000019" namespace="System.Data.Entity.Internal"/>
</type>
</parameter>
<parameter name="model" position="2"><type spec="Class"><definition assemblyName="EntityFramework" name="DbCompiledModel" token="20000d5" namespace="System.Data.Entity.Infrastructure"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at DbContext..ctor()" method="DbContext..ctor()" offset="24"><method assemblyName="EntityFramework" name=".ctor" token="60000fd"><declaringType assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at EMDatabase..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDatabase.cs(28)" method="EMDatabase..ctor()" offset="1" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDatabase.cs" line="28"><method assemblyName="emAPI" name=".ctor" token="600025e"><declaringType assemblyName="emAPI" name="EMDatabase" token="2000022" namespace="emAPI.DAL"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="EMDatabase" token="2000022" namespace="emAPI.DAL"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[    /// </summary>
    class EMDatabase : DbContext
    {]]></beforeSource>
<source><![CDATA[        internal EMDatabase()]]></source>
<afterSource><![CDATA[        {
            //Seed method to populate the database with sample data
            System.Data.Entity.Database.SetInitializer(new SampleData());]]></afterSource>
</frame>
<frame value="  at EMDataManager..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDataManager.cs(36)" method="EMDataManager..ctor()" offset="9" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDataManager.cs" line="36"><method assemblyName="emAPI" name=".ctor" token="6000190"><declaringType assemblyName="emAPI" name="EMDataManager" token="2000015" namespace="emAPI.DAL"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="EMDataManager" token="2000015" namespace="emAPI.DAL"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[        /// </summary>
        public EMDataManager()
        {]]></beforeSource>
<source><![CDATA[            emdb = new EMDatabase();]]></source>
<afterSource><![CDATA[        }

//* * * METHODS]]></afterSource>
</frame>
<frame value="  at EMMediator..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\EMMediator.cs(43)" method="EMMediator..ctor()" offset="9" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\EMMediator.cs" line="43"><method assemblyName="emAPI" name=".ctor" token="6000249"><declaringType assemblyName="emAPI" name="EMMediator" token="2000020" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="EMMediator" token="2000020" namespace="emAPI.Controllers"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[
        internal EMMediator()
        {]]></beforeSource>
<source><![CDATA[            DataManager = new EMDataManager();]]></source>
<afterSource><![CDATA[        }

        public void addPropertyToUser(int propertyId, int userId)]]></afterSource>
</frame>
<frame value="  at ApportionmentManager..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs(27)" method="ApportionmentManager..ctor()" offset="1" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs" line="27"><method assemblyName="emAPI" name=".ctor" token="60001f8"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[    /// </summary>
    public class ApportionmentManager : IApportionmentManager
    {]]></beforeSource>
<source><![CDATA[        private EMMediator mediator = new EMMediator();]]></source>
<afterSource><![CDATA[

        /// <summary>]]></afterSource>
</frame>
<frame value="  at ApportionmentManagerFactory.Create()" method="ApportionmentManagerFactory.Create()" offset="0"><method assemblyName="emAPI.Explorables" name="Create" static="true" token="6000002"><declaringType assemblyName="emAPI.Explorables" name="ApportionmentManagerFactory" token="2000002" namespace="emAPI.Controllers"/>
<resultType spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</resultType>
</method>
</frame>
<frame value="  at ThreadHelper.ThreadStart_Context(Object)" method="ThreadHelper.ThreadStart_Context(Object)" offset="59"><method assemblyName="mscorlib" name="ThreadStart_Context" static="true" token="6001664"><declaringType assemblyName="mscorlib" name="ThreadHelper" token="20001be" namespace="System.Threading"/>
<parameter name="state" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" offset="142"><method assemblyName="mscorlib" name="Run" static="true" token="600158d"><declaringType assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
<parameter name="executionContext" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="callback" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ContextCallback" token="20001a2" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="state" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
<parameter name="ignoreSyncCtx" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" offset="9"><method assemblyName="mscorlib" name="Run" static="true" token="600158c"><declaringType assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
<parameter name="executionContext" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="callback" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ContextCallback" token="20001a2" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="state" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ThreadHelper.ThreadStart(Object)" method="ThreadHelper.ThreadStart(Object)" offset="50"><method assemblyName="mscorlib" name="ThreadStart" token="6001665"><declaringType assemblyName="mscorlib" name="ThreadHelper" token="20001be" namespace="System.Threading"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="ThreadHelper" token="20001be" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="obj" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
</method>
</frame>
</stackTrace>
</uninstrumented>
<uninstrumented extern="true" methodDisplayName="System.Void System.Buffer.InternalBlockCopy(System.Array src, System.Int32 srcOffsetBytes, System.Array dst, System.Int32 dstOffsetBytes, System.Int32 byteCount)" declaringTypeDisplayName="System.Buffer" methodShortDisplayName="Buffer.InternalBlockCopy(Array, Int32, Array, Int32, Int32)" wikiTopic="External Method Called"><method><definition assemblyName="mscorlib" name="InternalBlockCopy" static="true" token="600081e"><declaringType assemblyName="mscorlib" name="Buffer" token="200009e" namespace="System"/>
<parameter name="src" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="Array" token="2000031" namespace="System"/>
</type>
</parameter>
<parameter name="srcOffsetBytes" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="dst" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="Array" token="2000031" namespace="System"/>
</type>
</parameter>
<parameter name="dstOffsetBytes" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
<parameter name="byteCount" position="4"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</parameter>
</definition>
</method>
<stackTrace><frame value="  at MemoryStream.ToArray()" method="MemoryStream.ToArray()" offset="51"><method assemblyName="mscorlib" name="ToArray" token="60041e7"><declaringType assemblyName="mscorlib" name="MemoryStream" token="2000708" namespace="System.IO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="MemoryStream" token="2000708" namespace="System.IO"/>
</type>
</parameter>
<resultType spec="SzArray"><elementType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Byte" token="200009f" namespace="System"/>
</elementType>
</resultType>
</method>
</frame>
<frame value="  at CustomAttributeBuilder.InitCustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[], FieldInfo[], Object[])" method="CustomAttributeBuilder.InitCustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[], FieldInfo[], Object[])" offset="1304"><method assemblyName="mscorlib" name="InitCustomAttributeBuilder" token="60057f7"><declaringType assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
</type>
</parameter>
<parameter name="con" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ConstructorInfo" token="200045a" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="constructorArgs" position="2"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter name="namedProperties" position="3"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="PropertyInfo" token="200045e" namespace="System.Reflection"/>
</elementType>
</type>
</parameter>
<parameter name="propertyValues" position="4"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter name="namedFields" position="5"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="FieldInfo" token="200045c" namespace="System.Reflection"/>
</elementType>
</type>
</parameter>
<parameter name="fieldValues" position="6"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
</method>
</frame>
<frame value="  at CustomAttributeBuilder..ctor(ConstructorInfo, Object[])" method="CustomAttributeBuilder..ctor(ConstructorInfo, Object[])" offset="38"><method assemblyName="mscorlib" name=".ctor" token="60057f2"><declaringType assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="CustomAttributeBuilder" token="20009a1" namespace="System.Reflection.Emit"/>
</type>
</parameter>
<parameter name="con" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ConstructorInfo" token="200045a" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="constructorArgs" position="2"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</elementType>
</type>
</parameter>
</method>
</frame>
<frame value="  at DynamicMethod.GetDynamicMethodsModule()" method="DynamicMethod.GetDynamicMethodsModule()" offset="96"><method assemblyName="mscorlib" name="GetDynamicMethodsModule" static="true" token="600567d"><declaringType assemblyName="mscorlib" name="DynamicMethod" token="200098a" namespace="System.Reflection.Emit"/>
<resultType spec="Class"><definition assemblyName="mscorlib" name="RuntimeModule" token="2000443" namespace="System.Reflection"/>
</resultType>
</method>
</frame>
<frame value="  at DynamicMethod.Init(String, MethodAttributes, CallingConventions, Type, Type[], Type, Module, Boolean, Boolean)" method="DynamicMethod.Init(String, MethodAttributes, CallingConventions, Type, Type[], Type, Module, Boolean, Boolean)" offset="288"><method assemblyName="mscorlib" name="Init" token="600567e"><declaringType assemblyName="mscorlib" name="DynamicMethod" token="200098a" namespace="System.Reflection.Emit"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="DynamicMethod" token="200098a" namespace="System.Reflection.Emit"/>
</type>
</parameter>
<parameter name="name" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="attributes" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="MethodAttributes" token="200043d" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="callingConvention" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="CallingConventions" token="2000406" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="returnType" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
<parameter name="signature" position="5"><type spec="SzArray"><elementType spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</elementType>
</type>
</parameter>
<parameter name="owner" position="6"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
<parameter name="m" position="7"><type spec="Class"><definition assemblyName="mscorlib" name="Module" token="2000442" namespace="System.Reflection"/>
</type>
</parameter>
<parameter name="skipVisibility" position="8"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
<parameter name="transparentMethod" position="9"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at LambdaCompiler..ctor(AnalyzedTree, LambdaExpression)" method="LambdaCompiler..ctor(AnalyzedTree, LambdaExpression)" offset="86"><method assemblyName="System.Core" name=".ctor" token="60014c8"><declaringType assemblyName="System.Core" name="LambdaCompiler" token="20002d0" namespace="System.Linq.Expressions.Compiler"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="System.Core" name="LambdaCompiler" token="20002d0" namespace="System.Linq.Expressions.Compiler"/>
</type>
</parameter>
<parameter name="tree" position="1"><type spec="Class"><definition assemblyName="System.Core" name="AnalyzedTree" token="20002b8" namespace="System.Linq.Expressions.Compiler"/>
</type>
</parameter>
<parameter name="lambda" position="2"><type spec="Class"><definition assemblyName="System.Core" name="LambdaExpression" token="200028e" namespace="System.Linq.Expressions"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at LambdaCompiler.Compile(LambdaExpression, DebugInfoGenerator)" method="LambdaCompiler.Compile(LambdaExpression, DebugInfoGenerator)" offset="17"><method assemblyName="System.Core" name="Compile" static="true" token="60014d0"><declaringType assemblyName="System.Core" name="LambdaCompiler" token="20002d0" namespace="System.Linq.Expressions.Compiler"/>
<parameter name="lambda" position="0"><type spec="Class"><definition assemblyName="System.Core" name="LambdaExpression" token="200028e" namespace="System.Linq.Expressions"/>
</type>
</parameter>
<parameter name="debugInfoGenerator" position="1"><type spec="Class"><definition assemblyName="System.Core" name="DebugInfoGenerator" token="20002c7" namespace="System.Runtime.CompilerServices"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Delegate" token="2000015" namespace="System"/>
</resultType>
</method>
</frame>
<frame value="  at Expression`1.Compile()" method="Expression`1.Compile()" offset="2"><method assemblyName="System.Core" name="Compile" token="60012d8"><declaringType assemblyName="System.Core" name="Expression`1" token="200028f" namespace="System.Linq.Expressions"><genericParameter value="TDelegate"/>
</declaringType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="System.Core" name="Expression`1" token="200028f" namespace="System.Linq.Expressions"><genericParameter value="TDelegate"/>
</definition>
<genericTypeArgument spec="GenericTypeParameter" index="0"/>
</type>
</parameter>
<resultType spec="GenericTypeParameter" index="0"/>
</method>
</frame>
<frame value="  at DbSetDiscoveryService.GetSets()" method="DbSetDiscoveryService.GetSets()" offset="398"><method assemblyName="EntityFramework" name="GetSets" token="6000c71"><declaringType assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Dictionary`2" token="2000354" namespace="System.Collections.Generic"><genericParameter value="TKey"/>
<genericParameter value="TValue"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</genericTypeArgument>
<genericTypeArgument spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</genericTypeArgument>
</genericTypeArgument>
</resultType>
</method>
</frame>
<frame value="  at DbSetDiscoveryService.InitializeSets()" method="DbSetDiscoveryService.InitializeSets()" offset="1"><method assemblyName="EntityFramework" name="InitializeSets" token="6000c72"><declaringType assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbSetDiscoveryService" token="2000157" namespace="System.Data.Entity.Internal"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at DbContext.DiscoverAndInitializeSets()" method="DbContext.DiscoverAndInitializeSets()" offset="6"><method assemblyName="EntityFramework" name="DiscoverAndInitializeSets" token="6000105"><declaringType assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at DbContext.InitializeLazyInternalContext(IInternalConnection, DbCompiledModel)" method="DbContext.InitializeLazyInternalContext(IInternalConnection, DbCompiledModel)" offset="15"><method assemblyName="EntityFramework" name="InitializeLazyInternalContext" token="6000104"><declaringType assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
</type>
</parameter>
<parameter name="internalConnection" position="1"><type spec="Class"><definition assemblyName="EntityFramework" name="IInternalConnection" token="2000019" namespace="System.Data.Entity.Internal"/>
</type>
</parameter>
<parameter name="model" position="2"><type spec="Class"><definition assemblyName="EntityFramework" name="DbCompiledModel" token="20000d5" namespace="System.Data.Entity.Infrastructure"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at DbContext..ctor()" method="DbContext..ctor()" offset="24"><method assemblyName="EntityFramework" name=".ctor" token="60000fd"><declaringType assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="EntityFramework" name="DbContext" token="2000033" namespace="System.Data.Entity"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at EMDatabase..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDatabase.cs(28)" method="EMDatabase..ctor()" offset="1" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDatabase.cs" line="28"><method assemblyName="emAPI" name=".ctor" token="600025e"><declaringType assemblyName="emAPI" name="EMDatabase" token="2000022" namespace="emAPI.DAL"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="EMDatabase" token="2000022" namespace="emAPI.DAL"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[    /// </summary>
    class EMDatabase : DbContext
    {]]></beforeSource>
<source><![CDATA[        internal EMDatabase()]]></source>
<afterSource><![CDATA[        {
            //Seed method to populate the database with sample data
            System.Data.Entity.Database.SetInitializer(new SampleData());]]></afterSource>
</frame>
<frame value="  at EMDataManager..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDataManager.cs(36)" method="EMDataManager..ctor()" offset="9" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\DAL\EMDataManager.cs" line="36"><method assemblyName="emAPI" name=".ctor" token="6000190"><declaringType assemblyName="emAPI" name="EMDataManager" token="2000015" namespace="emAPI.DAL"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="EMDataManager" token="2000015" namespace="emAPI.DAL"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[        /// </summary>
        public EMDataManager()
        {]]></beforeSource>
<source><![CDATA[            emdb = new EMDatabase();]]></source>
<afterSource><![CDATA[        }

//* * * METHODS]]></afterSource>
</frame>
<frame value="  at EMMediator..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\EMMediator.cs(43)" method="EMMediator..ctor()" offset="9" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\EMMediator.cs" line="43"><method assemblyName="emAPI" name=".ctor" token="6000249"><declaringType assemblyName="emAPI" name="EMMediator" token="2000020" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="EMMediator" token="2000020" namespace="emAPI.Controllers"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[
        internal EMMediator()
        {]]></beforeSource>
<source><![CDATA[            DataManager = new EMDataManager();]]></source>
<afterSource><![CDATA[        }

        public void addPropertyToUser(int propertyId, int userId)]]></afterSource>
</frame>
<frame value="  at ApportionmentManager..ctor() in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs(27)" method="ApportionmentManager..ctor()" offset="1" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs" line="27"><method assemblyName="emAPI" name=".ctor" token="60001f8"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[    /// </summary>
    public class ApportionmentManager : IApportionmentManager
    {]]></beforeSource>
<source><![CDATA[        private EMMediator mediator = new EMMediator();]]></source>
<afterSource><![CDATA[

        /// <summary>]]></afterSource>
</frame>
<frame value="  at ApportionmentManagerFactory.Create()" method="ApportionmentManagerFactory.Create()" offset="0"><method assemblyName="emAPI.Explorables" name="Create" static="true" token="6000002"><declaringType assemblyName="emAPI.Explorables" name="ApportionmentManagerFactory" token="2000002" namespace="emAPI.Controllers"/>
<resultType spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</resultType>
</method>
</frame>
<frame value="  at ThreadHelper.ThreadStart_Context(Object)" method="ThreadHelper.ThreadStart_Context(Object)" offset="59"><method assemblyName="mscorlib" name="ThreadStart_Context" static="true" token="6001664"><declaringType assemblyName="mscorlib" name="ThreadHelper" token="20001be" namespace="System.Threading"/>
<parameter name="state" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object, Boolean)" offset="142"><method assemblyName="mscorlib" name="Run" static="true" token="600158d"><declaringType assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
<parameter name="executionContext" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="callback" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ContextCallback" token="20001a2" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="state" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
<parameter name="ignoreSyncCtx" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" method="ExecutionContext.Run(ExecutionContext, ContextCallback, Object)" offset="9"><method assemblyName="mscorlib" name="Run" static="true" token="600158c"><declaringType assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
<parameter name="executionContext" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="ExecutionContext" token="20001a3" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="callback" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ContextCallback" token="20001a2" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="state" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ThreadHelper.ThreadStart(Object)" method="ThreadHelper.ThreadStart(Object)" offset="50"><method assemblyName="mscorlib" name="ThreadStart" token="6001665"><declaringType assemblyName="mscorlib" name="ThreadHelper" token="20001be" namespace="System.Threading"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="ThreadHelper" token="20001be" namespace="System.Threading"/>
</type>
</parameter>
<parameter name="obj" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
</method>
</frame>
</stackTrace>
</uninstrumented>
<test name="apportion" state="success" duration="2.50277647019384"/>
<generatedTest id="7f9a2f37-2d03-4bc1-9bcd-d2cdec86ea29" index="1" run="2" exceptionState="unexpected" status="exception" duplicateOf="6000003" failed="true" failureText="Exception not validated by PexAllowedExceptionFromTypeUnderTest(typeof(ArgumentException), AcceptExceptionSubtypes), PexAllowedExceptionFromTypeUnderTest(typeof(InvalidOperationException)), documented, contract requires failure at type-under-test surface." generated="true" assemblyName="emAPI.Tests" name="apportionThrowsArgumentNullException955" token="6000003"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<rcov name="Block" dcov="5" dtot="126" acov="5" atot="126"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">new ApportionmentManager{}</value>
<value name="datedChunks">null</value>
<value name="dataIn">null</value>
<code><![CDATA[ApportionmentManager apportionmentManager;
List<Chunk> list;
apportionmentManager = new ApportionmentManager();
list =
  this.apportion(apportionmentManager, (List<Chunk>)null, (List<Chunk>)null);
]]></code>
<methodCode imports="emAPI.ClassLibrary;System.Collections.Generic;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated;System"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(ApportionmentManagerTest))]
[PexRaisedException(typeof(ArgumentNullException))]
public void apportionThrowsArgumentNullException322()
{
    ApportionmentManager apportionmentManager;
    List<Chunk> list;
    apportionmentManager = new ApportionmentManager();
    list =
      this.apportion(apportionmentManager, (List<Chunk>)null, (List<Chunk>)null);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="emAPI.Tests" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.Tests.dll"/>
<reference name="emAPI" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.dll"/>
<reference name="emAPI_ClassLibrary" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI_ClassLibrary.dll"/>
<exceptionChain><exception typeDisplayName="ArgumentNullException" source="System.Core"><message><![CDATA[Value cannot be null.
Parameter name: source]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="ArgumentNullException" token="2000093" namespace="System"/>
</type>
<value name="paramName">source</value>
<stackTrace><frame value="  at OrderedEnumerable`2..ctor(IEnumerable`1&lt;!0&gt;, Func`2&lt;!0,!1&gt;, IComparer`1&lt;!1&gt;, Boolean)" method="OrderedEnumerable`2..ctor(IEnumerable`1&lt;!0&gt;, Func`2&lt;!0,!1&gt;, IComparer`1&lt;!1&gt;, Boolean)" offset="19"><method assemblyName="System.Core" name=".ctor" token="6000527"><declaringType assemblyName="System.Core" name="OrderedEnumerable`2" token="2000067" namespace="System.Linq"><genericParameter value="TElement"/>
<genericParameter value="TKey"/>
</declaringType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="System.Core" name="OrderedEnumerable`2" token="2000067" namespace="System.Linq"><genericParameter value="TElement"/>
<genericParameter value="TKey"/>
</definition>
<genericTypeArgument spec="GenericTypeParameter" index="0"/>
<genericTypeArgument spec="GenericTypeParameter" index="1"/>
</type>
</parameter>
<parameter name="source" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="IEnumerable`1" token="200004d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="GenericTypeParameter" index="0"/>
</type>
</parameter>
<parameter name="keySelector" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="Func`2" token="200001d" namespace="System"><genericParameter value="T"/>
<genericParameter value="TResult"/>
</definition>
<genericTypeArgument spec="GenericTypeParameter" index="0"/>
<genericTypeArgument spec="GenericTypeParameter" index="1"/>
</type>
</parameter>
<parameter name="comparer" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="IComparer`1" token="2000032" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="GenericTypeParameter" index="1"/>
</type>
</parameter>
<parameter name="descending" position="4"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at Enumerable.OrderBy(IEnumerable`1&lt;!!0&gt;, Func`2&lt;!!0,!!1&gt;)" method="Enumerable.OrderBy(IEnumerable`1&lt;!!0&gt;, Func`2&lt;!!0,!!1&gt;)" offset="4"><method assemblyName="System.Core" name="OrderBy" static="true" token="6000419"><declaringType assemblyName="System.Core" name="Enumerable" token="2000053" namespace="System.Linq"/>
<genericParameter value="TSource"/>
<genericParameter value="TKey"/>
<parameter name="source" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="IEnumerable`1" token="200004d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="GenericMethodParameter" index="0"/>
</type>
</parameter>
<parameter name="keySelector" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Func`2" token="200001d" namespace="System"><genericParameter value="T"/>
<genericParameter value="TResult"/>
</definition>
<genericTypeArgument spec="GenericMethodParameter" index="0"/>
<genericTypeArgument spec="GenericMethodParameter" index="1"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="System.Core" name="IOrderedEnumerable`1" token="200005d" namespace="System.Linq"><genericParameter value="TElement"/>
</definition>
<genericTypeArgument spec="GenericMethodParameter" index="0"/>
</resultType>
</method>
</frame>
<frame value="  at ApportionmentManager.apportion(List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs(207)" method="ApportionmentManager.apportion(List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" offset="39" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs" line="207"><method assemblyName="emAPI" name="apportion" token="60001f1"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            List<Chunk> resultChunks = new List<Chunk>();
            
            ///ensure provided list is in ascending date order]]></beforeSource>
<source><![CDATA[            dataIn = dataIn.OrderBy(chunk => chunk.StartDate).ToList();]]></source>
<afterSource><![CDATA[
            ///determine max start and end dates from dataIn
            DateTime maxStart = dataIn.First().StartDate;]]></afterSource>
</frame>
<frame value="  at ApportionmentManagerTest.apportion(ApportionmentManager, List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs(38)" method="ApportionmentManagerTest.apportion(ApportionmentManager, List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" offset="4" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs" line="38"><method assemblyName="emAPI.Tests" name="apportion" token="6000002"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            List<Chunk> dataIn
        )
        {]]></beforeSource>
<source><![CDATA[            List<Chunk> result = target.apportion(datedChunks, dataIn);]]></source>
<afterSource><![CDATA[            return result;
            // TODO: add assertions to method ApportionmentManagerTest.apportion(ApportionmentManager, List`1<Chunk>, List`1<Chunk>)
        }]]></afterSource>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<fix rank="5" testid="7f9a2f37-2d03-4bc1-9bcd-d2cdec86ea29" kind="precondition" shortMethodNameWithParameters="ApportionmentManagerTest.apportion(ApportionmentManager, List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" imports="Microsoft.ExtendedReflection.Collections.SafeSet`1[System.String]"><reference name="Microsoft.Pex.Framework"/>
<reference name="mscorlib"/>
<reference name="Microsoft.ExtendedReflection"/>
<method><definition assemblyName="emAPI.Tests" name="apportion" token="6000002"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</definition>
</method>
<code><![CDATA[PexAssume.IsNotNull((object)dataIn, "dataIn");
]]></code>
</fix>
<pathCondition><![CDATA[return target != (ApportionmentManager)null && dataIn == (List<Chunk>)null;
]]></pathCondition>
</generatedTest>
<log level="message" time="2012-09-03 11:37:54Z" category="coverage" message="coverage increased from 0 to 5 blocks (+5) after flipping emAPI.Controllers.ApportionmentManagerTest.apportion at 0x0004"/>
<test name="apportion" state="success" duration="0.03"/>
<test name="apportion" state="success" duration="0.03"/>
<test name="apportion" state="success" duration="0.03"/>
<staticFieldStore fieldDisplayName="System.Linq.SR.loader" declaringTypeDisplayName="System.Linq.SR" fieldShortDisplayName="loader" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System.Core" name="loader" static="true" token="4000bee"><declaringType assemblyName="System.Core" name="SR" token="2000347" namespace="System.Linq"/>
<fieldType spec="Class"><definition assemblyName="System.Core" name="SR" token="2000347" namespace="System.Linq"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at SR.GetLoader()" method="SR.GetLoader()" offset="20"><method assemblyName="System.Core" name="GetLoader" static="true" token="60018a6"><declaringType assemblyName="System.Core" name="SR" token="2000347" namespace="System.Linq"/>
<resultType spec="Class"><definition assemblyName="System.Core" name="SR" token="2000347" namespace="System.Linq"/>
</resultType>
</method>
</frame>
<frame value="  at SR.GetString(String)" method="SR.GetString(String)" offset="0"><method assemblyName="System.Core" name="GetString" static="true" token="60018aa"><declaringType assemblyName="System.Core" name="SR" token="2000347" namespace="System.Linq"/>
<parameter name="name" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</resultType>
</method>
</frame>
<frame value="  at Strings.get_NoElements()" method="Strings.get_NoElements()" offset="5"><method assemblyName="System.Core" name="get_NoElements" static="true" token="6000648"><declaringType assemblyName="System.Core" name="Strings" token="2000076" namespace="System.Linq"/>
<resultType spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</resultType>
</method>
</frame>
<frame value="  at Error.NoElements()" method="Error.NoElements()" offset="0"><method assemblyName="System.Core" name="NoElements" static="true" token="6000690"><declaringType assemblyName="System.Core" name="Error" token="2000077" namespace="System.Linq"/>
<resultType spec="Class"><definition assemblyName="mscorlib" name="Exception" token="2000008" namespace="System"/>
</resultType>
</method>
</frame>
<frame value="  at Enumerable.First(IEnumerable`1&lt;!!0&gt;)" method="Enumerable.First(IEnumerable`1&lt;!!0&gt;)" offset="77"><method assemblyName="System.Core" name="First" static="true" token="600044f"><declaringType assemblyName="System.Core" name="Enumerable" token="2000053" namespace="System.Linq"/>
<genericParameter value="TSource"/>
<parameter name="source" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="IEnumerable`1" token="200004d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="GenericMethodParameter" index="0"/>
</type>
</parameter>
<resultType spec="GenericMethodParameter" index="0"/>
</method>
</frame>
<frame value="  at ApportionmentManager.apportion(List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs(210)" method="ApportionmentManager.apportion(List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" offset="52" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs" line="210"><method assemblyName="emAPI" name="apportion" token="60001f1"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            dataIn = dataIn.OrderBy(chunk => chunk.StartDate).ToList();

            ///determine max start and end dates from dataIn]]></beforeSource>
<source><![CDATA[            DateTime maxStart = dataIn.First().StartDate;]]></source>
<afterSource><![CDATA[            DateTime maxEnd = dataIn.Last().EndDate;

            ///do the apportioning]]></afterSource>
</frame>
<frame value="  at ApportionmentManagerTest.apportion(ApportionmentManager, List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs(38)" method="ApportionmentManagerTest.apportion(ApportionmentManager, List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" offset="4" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs" line="38"><method assemblyName="emAPI.Tests" name="apportion" token="6000002"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            List<Chunk> dataIn
        )
        {]]></beforeSource>
<source><![CDATA[            List<Chunk> result = target.apportion(datedChunks, dataIn);]]></source>
<afterSource><![CDATA[            return result;
            // TODO: add assertions to method ApportionmentManagerTest.apportion(ApportionmentManager, List`1<Chunk>, List`1<Chunk>)
        }]]></afterSource>
</frame>
</stackTrace>
</staticFieldStore>
<test name="apportion" state="success" duration="0.10"/>
<generatedTest id="89899d8a-0dc5-44d9-aadc-6b3294a371ca" index="2" run="6" exceptionState="unexpected" status="exception" duplicateOf="6000004" failed="true" failureText="Exception not validated by PexAllowedExceptionFromTypeUnderTest(typeof(ArgumentException), AcceptExceptionSubtypes), PexAllowedExceptionFromTypeUnderTest(typeof(InvalidOperationException)), documented, contract requires failure at type-under-test surface." generated="true" assemblyName="emAPI.Tests" name="apportionThrowsInvalidOperationException729" token="6000004"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<rcov name="Block" dcov="2" dtot="0" acov="7" atot="126"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">new ApportionmentManager{}</value>
<value name="datedChunks">null</value>
<value name="dataIn">{}</value>
<code><![CDATA[ApportionmentManager apportionmentManager;
List<Chunk> list;
List<Chunk> list1;
apportionmentManager = new ApportionmentManager();
Chunk[] chunks = new Chunk[0];
list = new List<Chunk>((IEnumerable<Chunk>)chunks);
list1 = this.apportion(apportionmentManager, (List<Chunk>)null, list);
]]></code>
<methodCode imports="emAPI.ClassLibrary;System.Collections.Generic;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated;System"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(ApportionmentManagerTest))]
[PexRaisedException(typeof(InvalidOperationException))]
public void apportionThrowsInvalidOperationException408()
{
    ApportionmentManager apportionmentManager;
    List<Chunk> list;
    List<Chunk> list1;
    apportionmentManager = new ApportionmentManager();
    Chunk[] chunks = new Chunk[0];
    list = new List<Chunk>((IEnumerable<Chunk>)chunks);
    list1 = this.apportion(apportionmentManager, (List<Chunk>)null, list);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="emAPI.Tests" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.Tests.dll"/>
<reference name="emAPI" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.dll"/>
<reference name="emAPI_ClassLibrary" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI_ClassLibrary.dll"/>
<exceptionChain><exception typeDisplayName="InvalidOperationException" source="System.Core"><message><![CDATA[Sequence contains no elements]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidOperationException" token="2000103" namespace="System"/>
</type>
<stackTrace><frame value="  at Enumerable.First(IEnumerable`1&lt;!!0&gt;)" method="Enumerable.First(IEnumerable`1&lt;!!0&gt;)" offset="82"><method assemblyName="System.Core" name="First" static="true" token="600044f"><declaringType assemblyName="System.Core" name="Enumerable" token="2000053" namespace="System.Linq"/>
<genericParameter value="TSource"/>
<parameter name="source" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="IEnumerable`1" token="200004d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="GenericMethodParameter" index="0"/>
</type>
</parameter>
<resultType spec="GenericMethodParameter" index="0"/>
</method>
</frame>
<frame value="  at ApportionmentManager.apportion(List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs(210)" method="ApportionmentManager.apportion(List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" offset="52" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs" line="210"><method assemblyName="emAPI" name="apportion" token="60001f1"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            dataIn = dataIn.OrderBy(chunk => chunk.StartDate).ToList();

            ///determine max start and end dates from dataIn]]></beforeSource>
<source><![CDATA[            DateTime maxStart = dataIn.First().StartDate;]]></source>
<afterSource><![CDATA[            DateTime maxEnd = dataIn.Last().EndDate;

            ///do the apportioning]]></afterSource>
</frame>
<frame value="  at ApportionmentManagerTest.apportion(ApportionmentManager, List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs(38)" method="ApportionmentManagerTest.apportion(ApportionmentManager, List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" offset="4" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs" line="38"><method assemblyName="emAPI.Tests" name="apportion" token="6000002"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            List<Chunk> dataIn
        )
        {]]></beforeSource>
<source><![CDATA[            List<Chunk> result = target.apportion(datedChunks, dataIn);]]></source>
<afterSource><![CDATA[            return result;
            // TODO: add assertions to method ApportionmentManagerTest.apportion(ApportionmentManager, List`1<Chunk>, List`1<Chunk>)
        }]]></afterSource>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<pathAssumption><![CDATA[List<Chunk> s0 = new;
return dataIn == s0 && dataIn != (List<Chunk>)null && target != (ApportionmentManager)null;
]]></pathAssumption>
<pathCondition><![CDATA[return c != (Chunk[])null && c.Length < 1;
]]></pathCondition>
</generatedTest>
<log level="message" time="2012-09-03 11:37:55Z" category="coverage" message="coverage increased from 5 to 7 blocks (+2) after flipping emAPI.Controllers.ApportionmentManagerTest.apportion at 0x0004"/>
<test name="apportion" state="success" duration="0.04"/>
<test name="apportion" state="success" duration="0.04"/>
<test name="apportion" state="success" duration="0.03"/>
<test name="apportion" state="success" duration="0.02"/>
<test name="apportion" state="success" duration="0.04"/>
<test name="apportion" state="success" duration="0.07"/>
<generatedTest id="b0d9c939-68cc-41cd-bf46-93bb851c4075" index="3" run="12" exceptionState="unexpected" status="exception" duplicateOf="6000005" failed="true" failureText="Exception not validated by PexAllowedExceptionFromTypeUnderTest(typeof(ArgumentException), AcceptExceptionSubtypes), PexAllowedExceptionFromTypeUnderTest(typeof(InvalidOperationException)), documented, contract requires failure at type-under-test surface." generated="true" assemblyName="emAPI.Tests" name="apportionThrowsNullReferenceException280" token="6000005"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<rcov name="Block" dcov="6" dtot="2" acov="13" atot="128"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">new ApportionmentManager{}</value>
<value name="datedChunks">null</value>
<value name="dataIn">{new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-01 00:00:00Z,Amount=0}, new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-01 00:00:00Z,Amount=0}, new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-01 00:00:00Z,Amount=0}}</value>
<code><![CDATA[ApportionmentManager apportionmentManager;
List<Chunk> list;
List<Chunk> list1;
apportionmentManager = new ApportionmentManager();
Chunk[] chunks = new Chunk[3];
list = new List<Chunk>((IEnumerable<Chunk>)chunks);
list1 = this.apportion(apportionmentManager, (List<Chunk>)null, list);
]]></code>
<methodCode imports="emAPI.ClassLibrary;System.Collections.Generic;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated;System"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(ApportionmentManagerTest))]
[PexRaisedException(typeof(NullReferenceException))]
public void apportionThrowsNullReferenceException270()
{
    ApportionmentManager apportionmentManager;
    List<Chunk> list;
    List<Chunk> list1;
    apportionmentManager = new ApportionmentManager();
    Chunk[] chunks = new Chunk[3];
    list = new List<Chunk>((IEnumerable<Chunk>)chunks);
    list1 = this.apportion(apportionmentManager, (List<Chunk>)null, list);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="emAPI.Tests" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.Tests.dll"/>
<reference name="emAPI" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.dll"/>
<reference name="emAPI_ClassLibrary" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI_ClassLibrary.dll"/>
<exceptionChain><exception typeDisplayName="NullReferenceException" source="emAPI"><message><![CDATA[Object reference not set to an instance of an object.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="NullReferenceException" token="200011a" namespace="System"/>
</type>
<stackTrace><frame value="  at ApportionmentManager.apportion(List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs(214)" method="ApportionmentManager.apportion(List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" offset="85" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs" line="214"><method assemblyName="emAPI" name="apportion" token="60001f1"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            DateTime maxEnd = dataIn.Last().EndDate;

            ///do the apportioning]]></beforeSource>
<source><![CDATA[            foreach (Chunk datedChunk in datedChunks)]]></source>
<afterSource><![CDATA[            {
                ///list for storing the chunks from dataIn that are relevant to this results chunk
                List<Chunk> relevantChunks = new List<Chunk>();]]></afterSource>
</frame>
<frame value="  at ApportionmentManagerTest.apportion(ApportionmentManager, List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs(38)" method="ApportionmentManagerTest.apportion(ApportionmentManager, List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" offset="4" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs" line="38"><method assemblyName="emAPI.Tests" name="apportion" token="6000002"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            List<Chunk> dataIn
        )
        {]]></beforeSource>
<source><![CDATA[            List<Chunk> result = target.apportion(datedChunks, dataIn);]]></source>
<afterSource><![CDATA[            return result;
            // TODO: add assertions to method ApportionmentManagerTest.apportion(ApportionmentManager, List`1<Chunk>, List`1<Chunk>)
        }]]></afterSource>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<fix rank="65" testid="b0d9c939-68cc-41cd-bf46-93bb851c4075" kind="precondition" shortMethodNameWithParameters="ApportionmentManager.apportion(List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" imports="Microsoft.ExtendedReflection.Collections.SafeSet`1[System.String]"><reference name="mscorlib"/>
<method><definition assemblyName="emAPI" name="apportion" token="60001f1"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</definition>
</method>
<code><![CDATA[if (datedChunks == (List<Chunk>)null)
  throw new ArgumentNullException("datedChunks");
]]></code>
</fix>
<pathAssumption><![CDATA[List<Chunk> s0 = new;
return dataIn == s0 && dataIn != (List<Chunk>)null && target != (ApportionmentManager)null;
]]></pathAssumption>
<pathCondition><![CDATA[ulong s0 = 4611686018427387903uL & (13835058055282163712uL ^ c[0].StartDate.dateData);
ulong s1 = 4611686018427387903uL & (13835058055282163712uL ^ c[1].StartDate.dateData);
ulong s2 = 4611686018427387903uL & (13835058055282163712uL ^ c[2].StartDate.dateData);
int s7 = -1 + c.Length >> 1;
int s6 = s7 == 2 ? 2 : s7 == 1 ? 1 : 0;
int s5 = s6;
DateTime s4 = s5 == 1 ? c[1].StartDate : s5 == 0 ? c[0].StartDate : s5 == 2 ? c[2].StartDate : default(DateTime);
ulong s3 = 4611686018427387903uL & (13835058055282163712uL ^ s4.dateData);
int s11 = -1 + c.Length == 2 ? 2 : -1 + c.Length == 1 ? 1 : 0;
int s10 = s11;
DateTime s9 = s10 == 1 ? c[1].StartDate : s10 == 0 ? c[0].StartDate : s10 == 2 ? c[2].StartDate : default(DateTime);
ulong s8 = 4611686018427387903uL & (13835058055282163712uL ^ s9.dateData);
int s15 = c.Length - 2 == 2 ? 2 : c.Length - 2 == 1 ? 1 : 0;
int s14 = s15;
DateTime s13 = s14 == 1 ? c[1].StartDate : s14 == 0 ? c[0].StartDate : s14 == 2 ? c[2].StartDate : default(DateTime);
ulong s12 = 4611686018427387903uL & (13835058055282163712uL ^ s13.dateData);
return c != (Chunk[])null && (long)s0 >= (long)s1 && (long)s1 >= (long)s0 && (long)s2 >= (long)s1 && (long)s1 >= (long)s2 && c.Length == 3 && (long)s0 >= (long)s3 && (long)s3 >= (long)s0 && 
                                                                                                                                                                      (long)s1 >= (long)s3 && (long)s3 >= (long)s1 && (long)s8 >= (long)s3 && (long)s3 >= (long)s8 && (long)s12 >= (long)s3 && (long)s3 >= (long)s12 && datedChunks == (List<Chunk>)null;
]]></pathCondition>
</generatedTest>
<log level="message" time="2012-09-03 11:37:56Z" category="coverage" message="coverage increased from 7 to 13 blocks (+6) after flipping System.Linq.EnumerableSorter`1.QuickSort at 0x000c"/>
<test name="apportion" state="success" duration="0.02"/>
<test name="apportion" state="success" duration="0.04"/>
<generatedTest id="72e6ebfe-82b1-4cb1-81b5-8da007228ef2" index="4" run="14" exceptionState="unexpected" status="exception" duplicateOf="6000006" failed="true" failureText="Exception not validated by PexAllowedExceptionFromTypeUnderTest(typeof(ArgumentException), AcceptExceptionSubtypes), PexAllowedExceptionFromTypeUnderTest(typeof(InvalidOperationException)), documented, contract requires failure at type-under-test surface." generated="true" assemblyName="emAPI.Tests" name="apportionThrowsNullReferenceException629" token="6000006"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="13" atot="128"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">new ApportionmentManager{}</value>
<value name="datedChunks">null</value>
<value name="dataIn">{new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-01 00:00:00Z,Amount=2}, new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-01 00:00:00Z,Amount=1}, new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-01 00:00:00Z,Amount=3}}</value>
<code><![CDATA[ApportionmentManager apportionmentManager;
List<Chunk> list;
List<Chunk> list1;
apportionmentManager = new ApportionmentManager();
Chunk[] chunks = new Chunk[3];
Chunk s0 = default(Chunk);
s0.StartDate = default(DateTime);
s0.EndDate = default(DateTime);
s0.Amount = 2;
chunks[0] = s0;
Chunk s1 = default(Chunk);
s1.StartDate =
  new DateTime(4611686018427387903L & 1L, (DateTimeKind)(1uL >> 62));
s1.EndDate = default(DateTime);
s1.Amount = 1;
chunks[1] = s1;
Chunk s2 = default(Chunk);
s2.StartDate = default(DateTime);
s2.EndDate = default(DateTime);
s2.Amount = 3;
chunks[2] = s2;
list = new List<Chunk>((IEnumerable<Chunk>)chunks);
list1 = this.apportion(apportionmentManager, (List<Chunk>)null, list);
]]></code>
<methodCode imports="emAPI.ClassLibrary;System.Collections.Generic;System;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(ApportionmentManagerTest))]
[PexRaisedException(typeof(NullReferenceException))]
public void apportionThrowsNullReferenceException10()
{
    ApportionmentManager apportionmentManager;
    List<Chunk> list;
    List<Chunk> list1;
    apportionmentManager = new ApportionmentManager();
    Chunk[] chunks = new Chunk[3];
    Chunk s0 = default(Chunk);
    s0.StartDate = default(DateTime);
    s0.EndDate = default(DateTime);
    s0.Amount = 2;
    chunks[0] = s0;
    Chunk s1 = default(Chunk);
    s1.StartDate =
      new DateTime(4611686018427387903L & 1L, (DateTimeKind)(1uL >> 62));
    s1.EndDate = default(DateTime);
    s1.Amount = 1;
    chunks[1] = s1;
    Chunk s2 = default(Chunk);
    s2.StartDate = default(DateTime);
    s2.EndDate = default(DateTime);
    s2.Amount = 3;
    chunks[2] = s2;
    list = new List<Chunk>((IEnumerable<Chunk>)chunks);
    list1 = this.apportion(apportionmentManager, (List<Chunk>)null, list);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="emAPI.Tests" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.Tests.dll"/>
<reference name="emAPI" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.dll"/>
<reference name="emAPI_ClassLibrary" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI_ClassLibrary.dll"/>
<exceptionChain><exception typeDisplayName="NullReferenceException" source="emAPI"><message><![CDATA[Object reference not set to an instance of an object.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="NullReferenceException" token="200011a" namespace="System"/>
</type>
<stackTrace><frame value="  at ApportionmentManager.apportion(List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs(214)" method="ApportionmentManager.apportion(List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" offset="85" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs" line="214"><method assemblyName="emAPI" name="apportion" token="60001f1"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            DateTime maxEnd = dataIn.Last().EndDate;

            ///do the apportioning]]></beforeSource>
<source><![CDATA[            foreach (Chunk datedChunk in datedChunks)]]></source>
<afterSource><![CDATA[            {
                ///list for storing the chunks from dataIn that are relevant to this results chunk
                List<Chunk> relevantChunks = new List<Chunk>();]]></afterSource>
</frame>
<frame value="  at ApportionmentManagerTest.apportion(ApportionmentManager, List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs(38)" method="ApportionmentManagerTest.apportion(ApportionmentManager, List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" offset="4" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs" line="38"><method assemblyName="emAPI.Tests" name="apportion" token="6000002"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            List<Chunk> dataIn
        )
        {]]></beforeSource>
<source><![CDATA[            List<Chunk> result = target.apportion(datedChunks, dataIn);]]></source>
<afterSource><![CDATA[            return result;
            // TODO: add assertions to method ApportionmentManagerTest.apportion(ApportionmentManager, List`1<Chunk>, List`1<Chunk>)
        }]]></afterSource>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<fix rank="65" testid="72e6ebfe-82b1-4cb1-81b5-8da007228ef2" kind="precondition" shortMethodNameWithParameters="ApportionmentManager.apportion(List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" imports="Microsoft.ExtendedReflection.Collections.SafeSet`1[System.String]"><reference name="mscorlib"/>
<method><definition assemblyName="emAPI" name="apportion" token="60001f1"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</definition>
</method>
<code><![CDATA[if (datedChunks == (List<Chunk>)null)
  throw new ArgumentNullException("datedChunks");
]]></code>
</fix>
<pathAssumption><![CDATA[List<Chunk> s0 = new;
return dataIn == s0 && dataIn != (List<Chunk>)null && target != (ApportionmentManager)null;
]]></pathAssumption>
<pathCondition><![CDATA[int s0 = -1 + c.Length >> 1;
int s2 = s0 == 2 ? 2 : s0 == 1 ? 1 : 0;
int s1 = s2;
DateTime s4 = s1 == 1 ? c[1].StartDate : s1 == 0 ? c[0].StartDate : s1 == 2 ? c[2].StartDate : default(DateTime);
ulong s3 = 4611686018427387903uL & (13835058055282163712uL ^ s4.dateData);
int s6 = -1 + c.Length == 2 ? 2 : -1 + c.Length == 1 ? 1 : 0;
int s5 = s6;
DateTime s7 = s5 == 1 ? c[1].StartDate : s5 == 0 ? c[0].StartDate : s5 == 2 ? c[2].StartDate : default(DateTime);
int s8 = c.Length - 2 >> 1;
int s11 = s8 == 2 ? 2 : s8 == 1 ? s5 : 0;
int s10 = s8 - c.Length == -1 ? 1 : s11;
int s9 = s10;
int s13 = -c.Length == -1 ? 1 : 0;
int s12 = s13;
int s15 = c.Length - 2 == 2 ? 2 : c.Length - 2 == 1 ? s5 : 0;
int s14 = s15;
int s17 = c.Length - 3 == 2 ? 2 : c.Length - 3 == 1 ? s5 : 0;
int s16 = s17;
int s18 = 1 - c.Length == -1 ? 1 : s5;
int s19 = 2 - c.Length == -1 ? 1 : 2;
ulong s20 = 4611686018427387903uL & (13835058055282163712uL ^ c[1].StartDate.dateData);
DateTime s22 = s12 == 1 ? c[1].StartDate : s12 == 0 ? c[0].StartDate : s12 == 2 ? c[2].StartDate : default(DateTime);
ulong s21 = 4611686018427387903uL & (13835058055282163712uL ^ s22.dateData);
DateTime s24 = s9 == 1 ? c[1].StartDate : s9 == 0 ? c[0].StartDate : s9 == 2 ? c[2].StartDate : default(DateTime);
ulong s23 = 4611686018427387903uL & (13835058055282163712uL ^ s24.dateData);
DateTime s26 = s14 == 1 ? c[1].StartDate : s14 == 0 ? c[0].StartDate : s14 == 2 ? c[2].StartDate : default(DateTime);
ulong s25 = 4611686018427387903uL & (13835058055282163712uL ^ s26.dateData);
DateTime s28 = s16 == 1 ? c[1].StartDate : s16 == 0 ? c[0].StartDate : s16 == 2 ? c[2].StartDate : default(DateTime);
ulong s27 = 4611686018427387903uL & (13835058055282163712uL ^ s28.dateData);
return c != (Chunk[])null && (uint)s0 < (uint)(c.Length) && (uint)s1 < (uint)(c.Length) && (long)(4611686018427387903uL & (13835058055282163712uL ^ c[0].StartDate.dateData)) < (long)s3 && 
                                                                                           -1 + s1 < 1 && (uint)s5 < (uint)(c.Length) && (long)(4611686018427387903uL & (13835058055282163712uL ^ s7.dateData)) < (long)s3 && 
                                                                                                                                         (uint)s8 < (uint)(c.Length) && (uint)s9 < (uint)(c.Length) && (uint)s12 < (uint)(c.Length) && s9 - s12 < 1 && (uint)s14 < (uint)(c.Length) && s9 - s14 < 0 && 2 < c.Length && 
                                                                                                                                                                                                                                                                                                       (uint)s16 < (uint)(c.Length) && -1 < s9 - s16 && c.Length < 4 && c.Length < 5 && (uint)s18 < (uint)(c.Length) && (uint)s19 < (uint)(c.Length) && (long)s20 >= (long)s3 && (long)s3 >= (long)s20 && 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 (long)s21 >= (long)s23 && (long)s23 >= (long)s21 && (long)s25 >= (long)s23 && (long)s23 >= (long)s25 && (long)s27 >= (long)s23 && (long)s23 >= (long)s27 && datedChunks == (List<Chunk>)null;
]]></pathCondition>
</generatedTest>
<test name="apportion" state="success" duration="0.03"/>
<generatedTest id="3aa8303e-2e0f-410d-96e1-1f7fb66131a3" index="5" run="15" exceptionState="unexpected" status="exception" duplicateOf="6000007" failed="true" failureText="Exception not validated by PexAllowedExceptionFromTypeUnderTest(typeof(ArgumentException), AcceptExceptionSubtypes), PexAllowedExceptionFromTypeUnderTest(typeof(InvalidOperationException)), documented, contract requires failure at type-under-test surface." generated="true" assemblyName="emAPI.Tests" name="apportionThrowsNullReferenceException935" token="6000007"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="13" atot="128"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">new ApportionmentManager{}</value>
<value name="datedChunks">null</value>
<value name="dataIn">{new Chunk{StartDate=7307-12-05 18:42:01Z,EndDate=0001-01-01 00:00:00Z,Amount=1}, new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-01 00:00:00Z,Amount=2}, new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-01 00:00:00Z,Amount=3}}</value>
<code><![CDATA[ApportionmentManager apportionmentManager;
List<Chunk> list;
List<Chunk> list1;
apportionmentManager = new ApportionmentManager();
Chunk[] chunks = new Chunk[3];
Chunk s0 = default(Chunk);
s0.StartDate = new DateTime(4611686018427387903L & 2305843009213693952L, 
                            (DateTimeKind)(2305843009213693952uL >> 62));
s0.EndDate = default(DateTime);
s0.Amount = 1;
chunks[0] = s0;
Chunk s1 = default(Chunk);
s1.StartDate =
  new DateTime(4611686018427387903L & 1L, (DateTimeKind)(1uL >> 62));
s1.EndDate = default(DateTime);
s1.Amount = 2;
chunks[1] = s1;
Chunk s2 = default(Chunk);
s2.StartDate = default(DateTime);
s2.EndDate = default(DateTime);
s2.Amount = 3;
chunks[2] = s2;
list = new List<Chunk>((IEnumerable<Chunk>)chunks);
list1 = this.apportion(apportionmentManager, (List<Chunk>)null, list);
]]></code>
<methodCode imports="emAPI.ClassLibrary;System.Collections.Generic;System;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(ApportionmentManagerTest))]
[PexRaisedException(typeof(NullReferenceException))]
public void apportionThrowsNullReferenceException414()
{
    ApportionmentManager apportionmentManager;
    List<Chunk> list;
    List<Chunk> list1;
    apportionmentManager = new ApportionmentManager();
    Chunk[] chunks = new Chunk[3];
    Chunk s0 = default(Chunk);
    s0.StartDate = new DateTime(4611686018427387903L & 2305843009213693952L, 
                                (DateTimeKind)(2305843009213693952uL >> 62));
    s0.EndDate = default(DateTime);
    s0.Amount = 1;
    chunks[0] = s0;
    Chunk s1 = default(Chunk);
    s1.StartDate =
      new DateTime(4611686018427387903L & 1L, (DateTimeKind)(1uL >> 62));
    s1.EndDate = default(DateTime);
    s1.Amount = 2;
    chunks[1] = s1;
    Chunk s2 = default(Chunk);
    s2.StartDate = default(DateTime);
    s2.EndDate = default(DateTime);
    s2.Amount = 3;
    chunks[2] = s2;
    list = new List<Chunk>((IEnumerable<Chunk>)chunks);
    list1 = this.apportion(apportionmentManager, (List<Chunk>)null, list);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="emAPI.Tests" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.Tests.dll"/>
<reference name="emAPI" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.dll"/>
<reference name="emAPI_ClassLibrary" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI_ClassLibrary.dll"/>
<exceptionChain><exception typeDisplayName="NullReferenceException" source="emAPI"><message><![CDATA[Object reference not set to an instance of an object.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="NullReferenceException" token="200011a" namespace="System"/>
</type>
<stackTrace><frame value="  at ApportionmentManager.apportion(List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs(214)" method="ApportionmentManager.apportion(List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" offset="85" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs" line="214"><method assemblyName="emAPI" name="apportion" token="60001f1"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            DateTime maxEnd = dataIn.Last().EndDate;

            ///do the apportioning]]></beforeSource>
<source><![CDATA[            foreach (Chunk datedChunk in datedChunks)]]></source>
<afterSource><![CDATA[            {
                ///list for storing the chunks from dataIn that are relevant to this results chunk
                List<Chunk> relevantChunks = new List<Chunk>();]]></afterSource>
</frame>
<frame value="  at ApportionmentManagerTest.apportion(ApportionmentManager, List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs(38)" method="ApportionmentManagerTest.apportion(ApportionmentManager, List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" offset="4" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs" line="38"><method assemblyName="emAPI.Tests" name="apportion" token="6000002"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            List<Chunk> dataIn
        )
        {]]></beforeSource>
<source><![CDATA[            List<Chunk> result = target.apportion(datedChunks, dataIn);]]></source>
<afterSource><![CDATA[            return result;
            // TODO: add assertions to method ApportionmentManagerTest.apportion(ApportionmentManager, List`1<Chunk>, List`1<Chunk>)
        }]]></afterSource>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<fix rank="65" testid="3aa8303e-2e0f-410d-96e1-1f7fb66131a3" kind="precondition" shortMethodNameWithParameters="ApportionmentManager.apportion(List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" imports="Microsoft.ExtendedReflection.Collections.SafeSet`1[System.String]"><reference name="mscorlib"/>
<method><definition assemblyName="emAPI" name="apportion" token="60001f1"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</definition>
</method>
<code><![CDATA[if (datedChunks == (List<Chunk>)null)
  throw new ArgumentNullException("datedChunks");
]]></code>
</fix>
<pathAssumption><![CDATA[List<Chunk> s0 = new;
return dataIn == s0 && dataIn != (List<Chunk>)null && target != (ApportionmentManager)null;
]]></pathAssumption>
<pathCondition><![CDATA[ulong s0 = 4611686018427387903uL & (13835058055282163712uL ^ c[0].StartDate.dateData);
ulong s1 = 4611686018427387903uL & (13835058055282163712uL ^ c[1].StartDate.dateData);
int s6 = -1 + c.Length >> 1;
int s5 = s6 == 2 ? 2 : s6 == 1 ? 1 : 0;
int s4 = s5;
DateTime s3 = s4 == 1 ? c[1].StartDate : s4 == 0 ? c[0].StartDate : s4 == 2 ? c[2].StartDate : default(DateTime);
ulong s2 = 4611686018427387903uL & (13835058055282163712uL ^ s3.dateData);
int s10 = 1 - c.Length == -1 ? 0 : 1;
int s9 = s10;
DateTime s8 = s9 == 1 ? c[1].StartDate : s9 == 0 ? c[0].StartDate : s9 == 2 ? c[2].StartDate : default(DateTime);
ulong s7 = 4611686018427387903uL & (13835058055282163712uL ^ s8.dateData);
int s15 = -1 + c.Length == 2 ? 2 : -1 + c.Length == 1 ? 1 : 0;
int s14 = c.Length - 2 == 1 ? 1 : c.Length - 2 == 0 ? s15 : c.Length - 2 == 2 ? 2 : 0;
int s13 = s14;
DateTime s12 = s13 == 1 ? c[1].StartDate : s13 == 0 ? c[0].StartDate : s13 == 2 ? c[2].StartDate : default(DateTime);
ulong s11 = 4611686018427387903uL & (13835058055282163712uL ^ s12.dateData);
return c != (Chunk[])null && (long)s0 >= (long)s1 && (long)s1 < (long)s0 && (long)(4611686018427387903uL & (13835058055282163712uL ^ c[2].StartDate.dateData)) < (long)s1 && 
                                                                            c.Length == 3 && (long)s0 >= (long)s2 && (long)s7 >= (long)s2 && (long)s2 >= (long)s7 && (long)s11 >= (long)s2 && (long)s2 >= (long)s11 && datedChunks == (List<Chunk>)null;
]]></pathCondition>
</generatedTest>
<test name="apportion" state="success" duration="0.02"/>
<test name="apportion" state="success" duration="0.03"/>
<test name="apportion" state="success" duration="0.03"/>
<test name="apportion" state="success" duration="0.02"/>
<test name="apportion" state="success" duration="0.02"/>
<test name="apportion" state="success" duration="0.03"/>
<generatedTest id="b25f4115-ea19-4847-af99-eaaace0dfb1d" index="6" run="21" exceptionState="unexpected" status="exception" duplicateOf="6000008" failed="true" failureText="Exception not validated by PexAllowedExceptionFromTypeUnderTest(typeof(ArgumentException), AcceptExceptionSubtypes), PexAllowedExceptionFromTypeUnderTest(typeof(InvalidOperationException)), documented, contract requires failure at type-under-test surface." generated="true" assemblyName="emAPI.Tests" name="apportionThrowsNullReferenceException449" token="6000008"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="13" atot="128"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">new ApportionmentManager{}</value>
<value name="datedChunks">null</value>
<value name="dataIn">{new Chunk{StartDate=7309-09-17 10:06:28Z,EndDate=0001-01-01 00:00:00Z,Amount=2}, new Chunk{StartDate=0002-10-14 15:24:27Z,EndDate=0001-01-01 00:00:00Z,Amount=3}, new Chunk{StartDate=7307-12-05 18:42:01Z,EndDate=0001-01-01 00:00:00Z,Amount=1}}</value>
<code><![CDATA[ApportionmentManager apportionmentManager;
List<Chunk> list;
List<Chunk> list1;
apportionmentManager = new ApportionmentManager();
Chunk[] chunks = new Chunk[3];
Chunk s0 = default(Chunk);
s0.StartDate = new DateTime(4611686018427387903L & 2306406027886592000L, 
                            (DateTimeKind)(2306406027886592000uL >> 62));
s0.EndDate = default(DateTime);
s0.Amount = 2;
chunks[0] = s0;
Chunk s1 = default(Chunk);
s1.StartDate = new DateTime(4611686018427387903L & 563018672898049L, 
                            (DateTimeKind)(563018672898049uL >> 62));
s1.EndDate = default(DateTime);
s1.Amount = 3;
chunks[1] = s1;
Chunk s2 = default(Chunk);
s2.StartDate = new DateTime(4611686018427387903L & 2305843009213693952L, 
                            (DateTimeKind)(2305843009213693952uL >> 62));
s2.EndDate = default(DateTime);
s2.Amount = 1;
chunks[2] = s2;
list = new List<Chunk>((IEnumerable<Chunk>)chunks);
list1 = this.apportion(apportionmentManager, (List<Chunk>)null, list);
]]></code>
<methodCode imports="emAPI.ClassLibrary;System.Collections.Generic;System;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(ApportionmentManagerTest))]
[PexRaisedException(typeof(NullReferenceException))]
public void apportionThrowsNullReferenceException876()
{
    ApportionmentManager apportionmentManager;
    List<Chunk> list;
    List<Chunk> list1;
    apportionmentManager = new ApportionmentManager();
    Chunk[] chunks = new Chunk[3];
    Chunk s0 = default(Chunk);
    s0.StartDate = new DateTime(4611686018427387903L & 2306406027886592000L, 
                                (DateTimeKind)(2306406027886592000uL >> 62));
    s0.EndDate = default(DateTime);
    s0.Amount = 2;
    chunks[0] = s0;
    Chunk s1 = default(Chunk);
    s1.StartDate = new DateTime(4611686018427387903L & 563018672898049L, 
                                (DateTimeKind)(563018672898049uL >> 62));
    s1.EndDate = default(DateTime);
    s1.Amount = 3;
    chunks[1] = s1;
    Chunk s2 = default(Chunk);
    s2.StartDate = new DateTime(4611686018427387903L & 2305843009213693952L, 
                                (DateTimeKind)(2305843009213693952uL >> 62));
    s2.EndDate = default(DateTime);
    s2.Amount = 1;
    chunks[2] = s2;
    list = new List<Chunk>((IEnumerable<Chunk>)chunks);
    list1 = this.apportion(apportionmentManager, (List<Chunk>)null, list);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="emAPI.Tests" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.Tests.dll"/>
<reference name="emAPI" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.dll"/>
<reference name="emAPI_ClassLibrary" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI_ClassLibrary.dll"/>
<exceptionChain><exception typeDisplayName="NullReferenceException" source="emAPI"><message><![CDATA[Object reference not set to an instance of an object.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="NullReferenceException" token="200011a" namespace="System"/>
</type>
<stackTrace><frame value="  at ApportionmentManager.apportion(List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs(214)" method="ApportionmentManager.apportion(List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" offset="85" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs" line="214"><method assemblyName="emAPI" name="apportion" token="60001f1"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            DateTime maxEnd = dataIn.Last().EndDate;

            ///do the apportioning]]></beforeSource>
<source><![CDATA[            foreach (Chunk datedChunk in datedChunks)]]></source>
<afterSource><![CDATA[            {
                ///list for storing the chunks from dataIn that are relevant to this results chunk
                List<Chunk> relevantChunks = new List<Chunk>();]]></afterSource>
</frame>
<frame value="  at ApportionmentManagerTest.apportion(ApportionmentManager, List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs(38)" method="ApportionmentManagerTest.apportion(ApportionmentManager, List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" offset="4" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs" line="38"><method assemblyName="emAPI.Tests" name="apportion" token="6000002"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            List<Chunk> dataIn
        )
        {]]></beforeSource>
<source><![CDATA[            List<Chunk> result = target.apportion(datedChunks, dataIn);]]></source>
<afterSource><![CDATA[            return result;
            // TODO: add assertions to method ApportionmentManagerTest.apportion(ApportionmentManager, List`1<Chunk>, List`1<Chunk>)
        }]]></afterSource>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<fix rank="65" testid="b25f4115-ea19-4847-af99-eaaace0dfb1d" kind="precondition" shortMethodNameWithParameters="ApportionmentManager.apportion(List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" imports="Microsoft.ExtendedReflection.Collections.SafeSet`1[System.String]"><reference name="mscorlib"/>
<method><definition assemblyName="emAPI" name="apportion" token="60001f1"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</definition>
</method>
<code><![CDATA[if (datedChunks == (List<Chunk>)null)
  throw new ArgumentNullException("datedChunks");
]]></code>
</fix>
<pathAssumption><![CDATA[List<Chunk> s0 = new;
return dataIn == s0 && dataIn != (List<Chunk>)null && target != (ApportionmentManager)null;
]]></pathAssumption>
<pathCondition><![CDATA[int s0 = -1 + c.Length >> 1;
int s2 = s0 == 2 ? 2 : s0 == 1 ? 1 : 0;
int s1 = s2;
DateTime s4 = s1 == 1 ? c[1].StartDate : s1 == 0 ? c[0].StartDate : s1 == 2 ? c[2].StartDate : default(DateTime);
ulong s3 = 4611686018427387903uL & (13835058055282163712uL ^ s4.dateData);
ulong s5 = 4611686018427387903uL & (13835058055282163712uL ^ c[0].StartDate.dateData);
int s7 = -1 + c.Length == 2 ? 2 : -1 + c.Length == 1 ? 1 : 0;
int s6 = s7;
DateTime s9 = s6 == 1 ? c[1].StartDate : s6 == 0 ? c[0].StartDate : s6 == 2 ? c[2].StartDate : default(DateTime);
ulong s8 = 4611686018427387903uL & (13835058055282163712uL ^ s9.dateData);
int s11 = c.Length - 2 == 2 ? 2 : c.Length - 2 == 1 ? 1 : 0;
int s10 = s11;
int s13 = c.Length - 2 >> 1;
int s12 = 1 + s13;
int s16 = s12 == 1 ? 1 : s12 == 0 ? s10 : s12 == 2 ? 2 : 0;
int s15 = 1 + s13 - c.Length == -2 ? 0 : s16;
int s14 = s15;
int s18 = 1 - c.Length == -2 ? 0 : 1;
int s17 = s18;
int s20 = -1 + c.Length == 1 ? 1 : -1 + c.Length == 0 ? s10 : -1 + c.Length == 2 ? 2 : 0;
int s19 = s20;
DateTime s21 = s19 == 1 ? c[1].StartDate : s19 == 0 ? c[0].StartDate : s19 == 2 ? c[2].StartDate : default(DateTime);
DateTime s23 = s14 == 1 ? c[1].StartDate : s14 == 0 ? c[0].StartDate : s14 == 2 ? c[2].StartDate : default(DateTime);
ulong s22 = 4611686018427387903uL & (13835058055282163712uL ^ s23.dateData);
int s25 = -c.Length == -2 ? 0 : s10;
int s24 = -c.Length == -1 ? s17 : s25;
int s26 = 1 - c.Length == -1 ? s17 : s19;
int s28 = 2 - c.Length == -2 ? 0 : 2;
int s27 = 2 - c.Length == -1 ? s17 : s28;
DateTime s30 = s10 == 1 ? c[1].StartDate : s10 == 0 ? c[0].StartDate : s10 == 2 ? c[2].StartDate : default(DateTime);
ulong s29 = 4611686018427387903uL & (13835058055282163712uL ^ s30.dateData);
DateTime s32 = s17 == 1 ? c[1].StartDate : s17 == 0 ? c[0].StartDate : s17 == 2 ? c[2].StartDate : default(DateTime);
ulong s31 = 4611686018427387903uL & (13835058055282163712uL ^ s32.dateData);
return c != (Chunk[])null && (uint)s0 < (uint)(c.Length) && (uint)s1 < (uint)(c.Length) && (long)s3 < (long)s5 && 
                                                                                           (uint)s6 < (uint)(c.Length) && (long)s3 < (long)s8 && (uint)s10 < (uint)(c.Length) && -1 < s1 - s10 && 2 < c.Length && (uint)s12 < (uint)(c.Length) && (uint)s14 < (uint)(c.Length) && 
                                                                                                                                                                                                                                                  (uint)s17 < (uint)(c.Length) && s14 - s17 < 1 && (uint)s19 < (uint)(c.Length) && (long)(4611686018427387903uL & (13835058055282163712uL ^ s21.dateData)) < (long)s22 && 
                                                                                                                                                                                                                                                                                                                                   1 < c.Length && c.Length < 4 && (uint)s24 < (uint)(c.Length) && (uint)s26 < (uint)(c.Length) && (uint)s27 < (uint)(c.Length) && 
                                                                                                                                                                                                                                                                                                                                                                                                                                   (long)s5 >= (long)s3 && (long)s8 >= (long)s3 && (long)s29 >= (long)s3 && (long)s3 >= (long)s29 && (long)s31 >= (long)s22 && (long)s22 >= (long)s31 && datedChunks == (List<Chunk>)null;
]]></pathCondition>
</generatedTest>
<test name="apportion" state="success" duration="0.02"/>
<test name="apportion" state="success" duration="0.02"/>
<test name="apportion" state="success" duration="0.03"/>
<test name="apportion" state="success" duration="0.02"/>
<log level="message" time="2012-09-03 11:38:02Z" category="progress" message="   25 runs (76.00 % unique paths), 13/128 blocks covered"/>
<test name="apportion" state="success" duration="0.03"/>
<test name="apportion" state="success" duration="0.03"/>
<test name="apportion" state="success" duration="0.02"/>
<test name="apportion" state="success" duration="0.03"/>
<generatedTest id="6ac10c39-6fa6-4b50-ae08-58681ab14e2c" index="7" run="29" exceptionState="unexpected" status="exception" duplicateOf="6000009" failed="true" failureText="Exception not validated by PexAllowedExceptionFromTypeUnderTest(typeof(ArgumentException), AcceptExceptionSubtypes), PexAllowedExceptionFromTypeUnderTest(typeof(InvalidOperationException)), documented, contract requires failure at type-under-test surface." generated="true" assemblyName="emAPI.Tests" name="apportionThrowsNullReferenceException184" token="6000009"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="13" atot="128"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">new ApportionmentManager{}</value>
<value name="datedChunks">null</value>
<value name="dataIn">{new Chunk{StartDate=2284-05-31 22:22:25Z,EndDate=0001-01-01 00:00:00Z,Amount=1}, new Chunk{StartDate=2056-01-27 22:30:34Z,EndDate=0001-01-01 00:00:00Z,Amount=3}, new Chunk{StartDate=9362-12-31 17:12:35Z,EndDate=0001-01-01 00:00:00Z,Amount=2}}</value>
<code><![CDATA[ApportionmentManager apportionmentManager;
List<Chunk> list;
List<Chunk> list1;
apportionmentManager = new ApportionmentManager();
Chunk[] chunks = new Chunk[3];
Chunk s0 = default(Chunk);
s0.StartDate = new DateTime(4611686018427387903L & 720575941453021185L, 
                            (DateTimeKind)(720575941453021185uL >> 62));
s0.EndDate = default(DateTime);
s0.Amount = 1;
chunks[0] = s0;
Chunk s1 = default(Chunk);
s1.StartDate = new DateTime(4611686018427387903L & 648518346341351426L, 
                            (DateTimeKind)(648518346341351426uL >> 62));
s1.EndDate = default(DateTime);
s1.Amount = 3;
chunks[1] = s1;
Chunk s2 = default(Chunk);
s2.StartDate = new DateTime(4611686018427387903L & 2954361355555045379L, 
                            (DateTimeKind)(2954361355555045379uL >> 62));
s2.EndDate = default(DateTime);
s2.Amount = 2;
chunks[2] = s2;
list = new List<Chunk>((IEnumerable<Chunk>)chunks);
list1 = this.apportion(apportionmentManager, (List<Chunk>)null, list);
]]></code>
<methodCode imports="emAPI.ClassLibrary;System.Collections.Generic;System;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(ApportionmentManagerTest))]
[PexRaisedException(typeof(NullReferenceException))]
public void apportionThrowsNullReferenceException625()
{
    ApportionmentManager apportionmentManager;
    List<Chunk> list;
    List<Chunk> list1;
    apportionmentManager = new ApportionmentManager();
    Chunk[] chunks = new Chunk[3];
    Chunk s0 = default(Chunk);
    s0.StartDate = new DateTime(4611686018427387903L & 720575941453021185L, 
                                (DateTimeKind)(720575941453021185uL >> 62));
    s0.EndDate = default(DateTime);
    s0.Amount = 1;
    chunks[0] = s0;
    Chunk s1 = default(Chunk);
    s1.StartDate = new DateTime(4611686018427387903L & 648518346341351426L, 
                                (DateTimeKind)(648518346341351426uL >> 62));
    s1.EndDate = default(DateTime);
    s1.Amount = 3;
    chunks[1] = s1;
    Chunk s2 = default(Chunk);
    s2.StartDate = new DateTime(4611686018427387903L & 2954361355555045379L, 
                                (DateTimeKind)(2954361355555045379uL >> 62));
    s2.EndDate = default(DateTime);
    s2.Amount = 2;
    chunks[2] = s2;
    list = new List<Chunk>((IEnumerable<Chunk>)chunks);
    list1 = this.apportion(apportionmentManager, (List<Chunk>)null, list);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="emAPI.Tests" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.Tests.dll"/>
<reference name="emAPI" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.dll"/>
<reference name="emAPI_ClassLibrary" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI_ClassLibrary.dll"/>
<exceptionChain><exception typeDisplayName="NullReferenceException" source="emAPI"><message><![CDATA[Object reference not set to an instance of an object.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="NullReferenceException" token="200011a" namespace="System"/>
</type>
<stackTrace><frame value="  at ApportionmentManager.apportion(List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs(214)" method="ApportionmentManager.apportion(List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" offset="85" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs" line="214"><method assemblyName="emAPI" name="apportion" token="60001f1"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            DateTime maxEnd = dataIn.Last().EndDate;

            ///do the apportioning]]></beforeSource>
<source><![CDATA[            foreach (Chunk datedChunk in datedChunks)]]></source>
<afterSource><![CDATA[            {
                ///list for storing the chunks from dataIn that are relevant to this results chunk
                List<Chunk> relevantChunks = new List<Chunk>();]]></afterSource>
</frame>
<frame value="  at ApportionmentManagerTest.apportion(ApportionmentManager, List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs(38)" method="ApportionmentManagerTest.apportion(ApportionmentManager, List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" offset="4" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs" line="38"><method assemblyName="emAPI.Tests" name="apportion" token="6000002"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            List<Chunk> dataIn
        )
        {]]></beforeSource>
<source><![CDATA[            List<Chunk> result = target.apportion(datedChunks, dataIn);]]></source>
<afterSource><![CDATA[            return result;
            // TODO: add assertions to method ApportionmentManagerTest.apportion(ApportionmentManager, List`1<Chunk>, List`1<Chunk>)
        }]]></afterSource>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<fix rank="65" testid="6ac10c39-6fa6-4b50-ae08-58681ab14e2c" kind="precondition" shortMethodNameWithParameters="ApportionmentManager.apportion(List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" imports="Microsoft.ExtendedReflection.Collections.SafeSet`1[System.String]"><reference name="mscorlib"/>
<method><definition assemblyName="emAPI" name="apportion" token="60001f1"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</definition>
</method>
<code><![CDATA[if (datedChunks == (List<Chunk>)null)
  throw new ArgumentNullException("datedChunks");
]]></code>
</fix>
<pathAssumption><![CDATA[List<Chunk> s0 = new;
return dataIn == s0 && dataIn != (List<Chunk>)null && target != (ApportionmentManager)null;
]]></pathAssumption>
<pathCondition><![CDATA[ulong s0 = 4611686018427387903uL & (13835058055282163712uL ^ c[0].StartDate.dateData);
ulong s1 = 4611686018427387903uL & (13835058055282163712uL ^ c[1].StartDate.dateData);
ulong s2 = 4611686018427387903uL & (13835058055282163712uL ^ c[2].StartDate.dateData);
int s7 = -1 + c.Length >> 1;
int s6 = s7 == 2 ? 2 : s7 == 1 ? 1 : 0;
int s5 = s6;
DateTime s4 = s5 == 1 ? c[1].StartDate : s5 == 0 ? c[0].StartDate : s5 == 2 ? c[2].StartDate : default(DateTime);
ulong s3 = 4611686018427387903uL & (13835058055282163712uL ^ s4.dateData);
int s10 = -1 + c.Length == 2 ? 2 : -1 + c.Length == 1 ? 1 : 0;
int s9 = s10;
DateTime s8 = s9 == 1 ? c[1].StartDate : s9 == 0 ? c[0].StartDate : s9 == 2 ? c[2].StartDate : default(DateTime);
int s14 = c.Length - 2 == 2 ? 2 : c.Length - 2 == 1 ? 1 : 0;
int s13 = s14;
DateTime s12 = s13 == 1 ? c[1].StartDate : s13 == 0 ? c[0].StartDate : s13 == 2 ? c[2].StartDate : default(DateTime);
ulong s11 = 4611686018427387903uL & (13835058055282163712uL ^ s12.dateData);
int s18 = 1 - c.Length == -2 ? 0 : 1;
int s17 = s18;
DateTime s16 = s17 == 1 ? c[1].StartDate : s17 == 0 ? c[0].StartDate : s17 == 2 ? c[2].StartDate : default(DateTime);
ulong s15 = 4611686018427387903uL & (13835058055282163712uL ^ s16.dateData);
int s23 = c.Length - 2 >> 1;
int s24 = 1 + s23 == 1 ? 1 : 1 + s23 == 0 ? s13 : 1 + s23 == 2 ? 2 : 0;
int s22 = 1 + s23 - c.Length == -2 ? 0 : s24;
int s21 = s22;
DateTime s20 = s21 == 1 ? c[1].StartDate : s21 == 0 ? c[0].StartDate : s21 == 2 ? c[2].StartDate : default(DateTime);
ulong s19 = 4611686018427387903uL & (13835058055282163712uL ^ s20.dateData);
int s27 = -1 + c.Length == 1 ? 1 : -1 + c.Length == 0 ? s13 : -1 + c.Length == 2 ? 2 : 0;
int s26 = s27;
DateTime s25 = s26 == 1 ? c[1].StartDate : s26 == 0 ? c[0].StartDate : s26 == 2 ? c[2].StartDate : default(DateTime);
return c != (Chunk[])null && (long)s0 >= (long)s1 && (long)s1 < (long)s0 && (long)s2 >= (long)s1 && (long)s1 < (long)s2 && (long)s2 >= (long)s0 && (long)s0 < (long)s2 && c.Length == 3 && 
                                                                                                                                                                          (long)s0 >= (long)s3 && (long)(4611686018427387903uL & (13835058055282163712uL ^ s8.dateData)) >= (long)s3 && (long)s11 >= (long)s3 && (long)s3 >= (long)s11 && (long)s15 >= (long)s19 && 
                                                                                                                                                                                                                                                                                                                                          (long)s19 >= (long)s15 && (long)(4611686018427387903uL & (13835058055282163712uL ^ s25.dateData)) >= (long)s19 && (long)s0 >= (long)s19 && (long)s19 >= (long)s0 && datedChunks == (List<Chunk>)null;
]]></pathCondition>
</generatedTest>
<test name="apportion" state="success" duration="0.02"/>
<test name="apportion" state="success" duration="0.02"/>
<test name="apportion" state="success" duration="0.03"/>
<test name="apportion" state="success" duration="0.02"/>
<test name="apportion" state="success" duration="0.02"/>
<test name="apportion" state="success" duration="0.05"/>
<generatedTest id="be58d40c-7da6-4215-bf0e-b5ad5067433f" index="8" run="35" exceptionState="unexpected" status="exception" duplicateOf="600000a" failed="true" failureText="Exception not validated by PexAllowedExceptionFromTypeUnderTest(typeof(ArgumentException), AcceptExceptionSubtypes), PexAllowedExceptionFromTypeUnderTest(typeof(InvalidOperationException)), documented, contract requires failure at type-under-test surface." generated="true" assemblyName="emAPI.Tests" name="apportionThrowsNullReferenceException503" token="600000a"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="13" atot="128"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">new ApportionmentManager{}</value>
<value name="datedChunks">null</value>
<value name="dataIn">{new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-01 00:00:00Z,Amount=0}, new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-01 00:00:00Z,Amount=0}, new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-01 00:00:00Z,Amount=0}, new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-01 00:00:00Z,Amount=0}}</value>
<code><![CDATA[ApportionmentManager apportionmentManager;
List<Chunk> list;
List<Chunk> list1;
apportionmentManager = new ApportionmentManager();
Chunk[] chunks = new Chunk[4];
list = new List<Chunk>((IEnumerable<Chunk>)chunks);
list1 = this.apportion(apportionmentManager, (List<Chunk>)null, list);
]]></code>
<methodCode imports="emAPI.ClassLibrary;System.Collections.Generic;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated;System"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(ApportionmentManagerTest))]
[PexRaisedException(typeof(NullReferenceException))]
public void apportionThrowsNullReferenceException249()
{
    ApportionmentManager apportionmentManager;
    List<Chunk> list;
    List<Chunk> list1;
    apportionmentManager = new ApportionmentManager();
    Chunk[] chunks = new Chunk[4];
    list = new List<Chunk>((IEnumerable<Chunk>)chunks);
    list1 = this.apportion(apportionmentManager, (List<Chunk>)null, list);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="emAPI.Tests" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.Tests.dll"/>
<reference name="emAPI" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.dll"/>
<reference name="emAPI_ClassLibrary" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI_ClassLibrary.dll"/>
<exceptionChain><exception typeDisplayName="NullReferenceException" source="emAPI"><message><![CDATA[Object reference not set to an instance of an object.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="NullReferenceException" token="200011a" namespace="System"/>
</type>
<stackTrace><frame value="  at ApportionmentManager.apportion(List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs(214)" method="ApportionmentManager.apportion(List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" offset="85" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs" line="214"><method assemblyName="emAPI" name="apportion" token="60001f1"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            DateTime maxEnd = dataIn.Last().EndDate;

            ///do the apportioning]]></beforeSource>
<source><![CDATA[            foreach (Chunk datedChunk in datedChunks)]]></source>
<afterSource><![CDATA[            {
                ///list for storing the chunks from dataIn that are relevant to this results chunk
                List<Chunk> relevantChunks = new List<Chunk>();]]></afterSource>
</frame>
<frame value="  at ApportionmentManagerTest.apportion(ApportionmentManager, List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs(38)" method="ApportionmentManagerTest.apportion(ApportionmentManager, List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" offset="4" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs" line="38"><method assemblyName="emAPI.Tests" name="apportion" token="6000002"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            List<Chunk> dataIn
        )
        {]]></beforeSource>
<source><![CDATA[            List<Chunk> result = target.apportion(datedChunks, dataIn);]]></source>
<afterSource><![CDATA[            return result;
            // TODO: add assertions to method ApportionmentManagerTest.apportion(ApportionmentManager, List`1<Chunk>, List`1<Chunk>)
        }]]></afterSource>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<fix rank="65" testid="be58d40c-7da6-4215-bf0e-b5ad5067433f" kind="precondition" shortMethodNameWithParameters="ApportionmentManager.apportion(List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" imports="Microsoft.ExtendedReflection.Collections.SafeSet`1[System.String]"><reference name="mscorlib"/>
<method><definition assemblyName="emAPI" name="apportion" token="60001f1"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</definition>
</method>
<code><![CDATA[if (datedChunks == (List<Chunk>)null)
  throw new ArgumentNullException("datedChunks");
]]></code>
</fix>
<pathAssumption><![CDATA[List<Chunk> s0 = new;
return dataIn == s0 && dataIn != (List<Chunk>)null && target != (ApportionmentManager)null;
]]></pathAssumption>
<pathCondition><![CDATA[ulong s0 = 4611686018427387903uL & (13835058055282163712uL ^ c[0].StartDate.dateData);
ulong s1 = 4611686018427387903uL & (13835058055282163712uL ^ c[1].StartDate.dateData);
ulong s2 = 4611686018427387903uL & (13835058055282163712uL ^ c[3].StartDate.dateData);
ulong s3 = 4611686018427387903uL & (13835058055282163712uL ^ c[2].StartDate.dateData);
int s8 = -1 + c.Length >> 1;
int s7 = s8 == 2 ? 2 : s8 == 1 ? 1 : s8 == 3 ? 3 : 0;
int s6 = s7;
DateTime s5 = s6 == 1 ? c[1].StartDate : s6 == 3 ? c[3].StartDate : s6 == 0 ? c[0].StartDate : s6 == 2 ? c[2].StartDate : default(DateTime);
ulong s4 = 4611686018427387903uL & (13835058055282163712uL ^ s5.dateData);
int s12 = -1 + c.Length == 2 ? 2 : -1 + c.Length == 1 ? 1 : -1 + c.Length == 3 ? 3 : 0;
int s11 = s12;
DateTime s10 = s11 == 1 ? c[1].StartDate : s11 == 3 ? c[3].StartDate : s11 == 0 ? c[0].StartDate : s11 == 2 ? c[2].StartDate : default(DateTime);
ulong s9 = 4611686018427387903uL & (13835058055282163712uL ^ s10.dateData);
int s16 = c.Length - 2 == 2 ? 2 : c.Length - 2 == 1 ? 1 : c.Length - 2 == 3 ? 3 : 0;
int s15 = s16;
DateTime s14 = s15 == 1 ? c[1].StartDate : s15 == 3 ? c[3].StartDate : s15 == 0 ? c[0].StartDate : s15 == 2 ? c[2].StartDate : default(DateTime);
ulong s13 = 4611686018427387903uL & (13835058055282163712uL ^ s14.dateData);
int s20 = c.Length - 3 == 2 ? 2 : c.Length - 3 == 1 ? 1 : c.Length - 3 == 3 ? 3 : 0;
int s19 = s20;
DateTime s18 = s19 == 1 ? c[1].StartDate : s19 == 3 ? c[3].StartDate : s19 == 0 ? c[0].StartDate : s19 == 2 ? c[2].StartDate : default(DateTime);
ulong s17 = 4611686018427387903uL & (13835058055282163712uL ^ s18.dateData);
int s25 = 2 + (c.Length - 3 >> 1);
int s24 = s25 == 2 ? 2 : s25 == 1 ? 1 : s25 == 3 ? 3 : 0;
int s23 = s24;
DateTime s22 = s23 == 1 ? c[1].StartDate : s23 == 3 ? c[3].StartDate : s23 == 0 ? c[0].StartDate : s23 == 2 ? c[2].StartDate : default(DateTime);
ulong s21 = 4611686018427387903uL & (13835058055282163712uL ^ s22.dateData);
return c != (Chunk[])null && (long)s0 >= (long)s1 && (long)s1 >= (long)s0 && (long)s2 >= (long)s1 && 
                                                                             (long)s1 >= (long)s2 && (long)s3 >= (long)s1 && (long)s1 >= (long)s3 && (long)s2 >= (long)s3 && (long)s3 >= (long)s2 && c.Length == 4 && (long)s0 >= (long)s4 && (long)s4 >= (long)s0 && 
                                                                                                                                                                                                                                              (long)s1 >= (long)s4 && (long)s4 >= (long)s1 && (long)s9 >= (long)s4 && (long)s4 >= (long)s9 && (long)s13 >= (long)s4 && (long)s4 >= (long)s13 && (long)s17 >= (long)s4 && (long)s4 >= (long)s17 && 
                                                                                                                                                                                                                                                                                                                                                                                                                         (long)s3 >= (long)s21 && (long)s21 >= (long)s3 && (long)s9 >= (long)s21 && (long)s21 >= (long)s9 && (long)s13 >= (long)s21 && (long)s21 >= (long)s13 && datedChunks == (List<Chunk>)null;
]]></pathCondition>
</generatedTest>
<test name="apportion" state="success" duration="0.06"/>
<generatedTest id="8c77cf6e-f339-460a-82c8-89767dea0559" index="9" run="36" exceptionState="unexpected" status="exception" duplicateOf="600000b" failed="true" failureText="Exception not validated by PexAllowedExceptionFromTypeUnderTest(typeof(ArgumentException), AcceptExceptionSubtypes), PexAllowedExceptionFromTypeUnderTest(typeof(InvalidOperationException)), documented, contract requires failure at type-under-test surface." generated="true" assemblyName="emAPI.Tests" name="apportionThrowsNullReferenceException401" token="600000b"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="13" atot="128"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">new ApportionmentManager{}</value>
<value name="datedChunks">null</value>
<value name="dataIn">{new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-01 00:00:00Z,Amount=2}, new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-01 00:00:00Z,Amount=1}, new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-01 00:00:00Z,Amount=3}, new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-01 00:00:00Z,Amount=3}}</value>
<code><![CDATA[ApportionmentManager apportionmentManager;
List<Chunk> list;
List<Chunk> list1;
apportionmentManager = new ApportionmentManager();
Chunk[] chunks = new Chunk[4];
Chunk s0 = default(Chunk);
s0.StartDate = default(DateTime);
s0.EndDate = default(DateTime);
s0.Amount = 2;
chunks[0] = s0;
Chunk s1 = default(Chunk);
s1.StartDate =
  new DateTime(4611686018427387903L & 1L, (DateTimeKind)(1uL >> 62));
s1.EndDate = default(DateTime);
s1.Amount = 1;
chunks[1] = s1;
Chunk s2 = default(Chunk);
s2.StartDate = default(DateTime);
s2.EndDate = default(DateTime);
s2.Amount = 3;
chunks[2] = s2;
Chunk s3 = default(Chunk);
s3.StartDate = default(DateTime);
s3.EndDate = default(DateTime);
s3.Amount = 3;
chunks[3] = s3;
list = new List<Chunk>((IEnumerable<Chunk>)chunks);
list1 = this.apportion(apportionmentManager, (List<Chunk>)null, list);
]]></code>
<methodCode imports="emAPI.ClassLibrary;System.Collections.Generic;System;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(ApportionmentManagerTest))]
[PexRaisedException(typeof(NullReferenceException))]
public void apportionThrowsNullReferenceException291()
{
    ApportionmentManager apportionmentManager;
    List<Chunk> list;
    List<Chunk> list1;
    apportionmentManager = new ApportionmentManager();
    Chunk[] chunks = new Chunk[4];
    Chunk s0 = default(Chunk);
    s0.StartDate = default(DateTime);
    s0.EndDate = default(DateTime);
    s0.Amount = 2;
    chunks[0] = s0;
    Chunk s1 = default(Chunk);
    s1.StartDate =
      new DateTime(4611686018427387903L & 1L, (DateTimeKind)(1uL >> 62));
    s1.EndDate = default(DateTime);
    s1.Amount = 1;
    chunks[1] = s1;
    Chunk s2 = default(Chunk);
    s2.StartDate = default(DateTime);
    s2.EndDate = default(DateTime);
    s2.Amount = 3;
    chunks[2] = s2;
    Chunk s3 = default(Chunk);
    s3.StartDate = default(DateTime);
    s3.EndDate = default(DateTime);
    s3.Amount = 3;
    chunks[3] = s3;
    list = new List<Chunk>((IEnumerable<Chunk>)chunks);
    list1 = this.apportion(apportionmentManager, (List<Chunk>)null, list);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="emAPI.Tests" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.Tests.dll"/>
<reference name="emAPI" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.dll"/>
<reference name="emAPI_ClassLibrary" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI_ClassLibrary.dll"/>
<exceptionChain><exception typeDisplayName="NullReferenceException" source="emAPI"><message><![CDATA[Object reference not set to an instance of an object.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="NullReferenceException" token="200011a" namespace="System"/>
</type>
<stackTrace><frame value="  at ApportionmentManager.apportion(List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs(214)" method="ApportionmentManager.apportion(List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" offset="85" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs" line="214"><method assemblyName="emAPI" name="apportion" token="60001f1"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            DateTime maxEnd = dataIn.Last().EndDate;

            ///do the apportioning]]></beforeSource>
<source><![CDATA[            foreach (Chunk datedChunk in datedChunks)]]></source>
<afterSource><![CDATA[            {
                ///list for storing the chunks from dataIn that are relevant to this results chunk
                List<Chunk> relevantChunks = new List<Chunk>();]]></afterSource>
</frame>
<frame value="  at ApportionmentManagerTest.apportion(ApportionmentManager, List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs(38)" method="ApportionmentManagerTest.apportion(ApportionmentManager, List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" offset="4" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs" line="38"><method assemblyName="emAPI.Tests" name="apportion" token="6000002"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            List<Chunk> dataIn
        )
        {]]></beforeSource>
<source><![CDATA[            List<Chunk> result = target.apportion(datedChunks, dataIn);]]></source>
<afterSource><![CDATA[            return result;
            // TODO: add assertions to method ApportionmentManagerTest.apportion(ApportionmentManager, List`1<Chunk>, List`1<Chunk>)
        }]]></afterSource>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<fix rank="65" testid="8c77cf6e-f339-460a-82c8-89767dea0559" kind="precondition" shortMethodNameWithParameters="ApportionmentManager.apportion(List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" imports="Microsoft.ExtendedReflection.Collections.SafeSet`1[System.String]"><reference name="mscorlib"/>
<method><definition assemblyName="emAPI" name="apportion" token="60001f1"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</definition>
</method>
<code><![CDATA[if (datedChunks == (List<Chunk>)null)
  throw new ArgumentNullException("datedChunks");
]]></code>
</fix>
<pathAssumption><![CDATA[List<Chunk> s0 = new;
return dataIn == s0 && dataIn != (List<Chunk>)null && target != (ApportionmentManager)null;
]]></pathAssumption>
</generatedTest>
<test name="apportion" state="success" duration="0.02"/>
<test name="apportion" state="success" duration="0.06"/>
<generatedTest id="6f3e8aca-d177-423d-8a01-3b9701c0bca1" index="10" run="38" exceptionState="unexpected" status="exception" duplicateOf="600000c" failed="true" failureText="Exception not validated by PexAllowedExceptionFromTypeUnderTest(typeof(ArgumentException), AcceptExceptionSubtypes), PexAllowedExceptionFromTypeUnderTest(typeof(InvalidOperationException)), documented, contract requires failure at type-under-test surface." generated="true" assemblyName="emAPI.Tests" name="apportionThrowsNullReferenceException190" token="600000c"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="13" atot="128"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">new ApportionmentManager{}</value>
<value name="datedChunks">null</value>
<value name="dataIn">{new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-01 00:00:00Z,Amount=0}, new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-01 00:00:00Z,Amount=0}, new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-01 00:00:00Z,Amount=0}, new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-01 00:00:00Z,Amount=0}, new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-01 00:00:00Z,Amount=0}}</value>
<code><![CDATA[ApportionmentManager apportionmentManager;
List<Chunk> list;
List<Chunk> list1;
apportionmentManager = new ApportionmentManager();
Chunk[] chunks = new Chunk[5];
list = new List<Chunk>((IEnumerable<Chunk>)chunks);
list1 = this.apportion(apportionmentManager, (List<Chunk>)null, list);
]]></code>
<methodCode imports="emAPI.ClassLibrary;System.Collections.Generic;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated;System"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(ApportionmentManagerTest))]
[PexRaisedException(typeof(NullReferenceException))]
public void apportionThrowsNullReferenceException689()
{
    ApportionmentManager apportionmentManager;
    List<Chunk> list;
    List<Chunk> list1;
    apportionmentManager = new ApportionmentManager();
    Chunk[] chunks = new Chunk[5];
    list = new List<Chunk>((IEnumerable<Chunk>)chunks);
    list1 = this.apportion(apportionmentManager, (List<Chunk>)null, list);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="emAPI.Tests" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.Tests.dll"/>
<reference name="emAPI" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.dll"/>
<reference name="emAPI_ClassLibrary" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI_ClassLibrary.dll"/>
<exceptionChain><exception typeDisplayName="NullReferenceException" source="emAPI"><message><![CDATA[Object reference not set to an instance of an object.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="NullReferenceException" token="200011a" namespace="System"/>
</type>
<stackTrace><frame value="  at ApportionmentManager.apportion(List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs(214)" method="ApportionmentManager.apportion(List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" offset="85" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs" line="214"><method assemblyName="emAPI" name="apportion" token="60001f1"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            DateTime maxEnd = dataIn.Last().EndDate;

            ///do the apportioning]]></beforeSource>
<source><![CDATA[            foreach (Chunk datedChunk in datedChunks)]]></source>
<afterSource><![CDATA[            {
                ///list for storing the chunks from dataIn that are relevant to this results chunk
                List<Chunk> relevantChunks = new List<Chunk>();]]></afterSource>
</frame>
<frame value="  at ApportionmentManagerTest.apportion(ApportionmentManager, List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs(38)" method="ApportionmentManagerTest.apportion(ApportionmentManager, List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" offset="4" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs" line="38"><method assemblyName="emAPI.Tests" name="apportion" token="6000002"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            List<Chunk> dataIn
        )
        {]]></beforeSource>
<source><![CDATA[            List<Chunk> result = target.apportion(datedChunks, dataIn);]]></source>
<afterSource><![CDATA[            return result;
            // TODO: add assertions to method ApportionmentManagerTest.apportion(ApportionmentManager, List`1<Chunk>, List`1<Chunk>)
        }]]></afterSource>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<fix rank="65" testid="6f3e8aca-d177-423d-8a01-3b9701c0bca1" kind="precondition" shortMethodNameWithParameters="ApportionmentManager.apportion(List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" imports="Microsoft.ExtendedReflection.Collections.SafeSet`1[System.String]"><reference name="mscorlib"/>
<method><definition assemblyName="emAPI" name="apportion" token="60001f1"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</definition>
</method>
<code><![CDATA[if (datedChunks == (List<Chunk>)null)
  throw new ArgumentNullException("datedChunks");
]]></code>
</fix>
<pathAssumption><![CDATA[List<Chunk> s0 = new;
return dataIn == s0 && dataIn != (List<Chunk>)null && target != (ApportionmentManager)null;
]]></pathAssumption>
<pathCondition><![CDATA[ulong s0 = 4611686018427387903uL & (13835058055282163712uL ^ c[0].StartDate.dateData);
ulong s1 = 4611686018427387903uL & (13835058055282163712uL ^ c[2].StartDate.dateData);
ulong s2 = 4611686018427387903uL & (13835058055282163712uL ^ c[1].StartDate.dateData);
ulong s3 = 4611686018427387903uL & (13835058055282163712uL ^ c[4].StartDate.dateData);
ulong s4 = 4611686018427387903uL & (13835058055282163712uL ^ c[3].StartDate.dateData);
int s9 = -1 + c.Length >> 1;
int s8 = s9 == 1 ? 1 : s9 == 3 ? 3 : s9 == 4 ? 4 : s9 == 2 ? 2 : 0;
int s7 = s8;
DateTime s6 = s7 == 1 ? c[1].StartDate : s7 == 3 ? c[3].StartDate : s7 == 2 ? c[2].StartDate : s7 == 4 ? c[4].StartDate : s7 == 0 ? c[0].StartDate : default(DateTime);
ulong s5 = 4611686018427387903uL & (13835058055282163712uL ^ s6.dateData);
int s13 = -1 + c.Length == 1 ? 1 : -1 + c.Length == 3 ? 3 : -1 + c.Length == 4 ? 4 : -1 + c.Length == 2 ? 2 : 0;
int s12 = s13;
DateTime s11 = s12 == 1 ? c[1].StartDate : s12 == 3 ? c[3].StartDate : s12 == 2 ? c[2].StartDate : s12 == 4 ? c[4].StartDate : s12 == 0 ? c[0].StartDate : default(DateTime);
ulong s10 = 4611686018427387903uL & (13835058055282163712uL ^ s11.dateData);
int s17 = c.Length - 2 == 1 ? 1 : c.Length - 2 == 3 ? 3 : c.Length - 2 == 4 ? 4 : c.Length - 2 == 2 ? 2 : 0;
int s16 = s17;
DateTime s15 = s16 == 1 ? c[1].StartDate : s16 == 3 ? c[3].StartDate : s16 == 2 ? c[2].StartDate : s16 == 4 ? c[4].StartDate : s16 == 0 ? c[0].StartDate : default(DateTime);
ulong s14 = 4611686018427387903uL & (13835058055282163712uL ^ s15.dateData);
int s21 = c.Length - 3 == 1 ? 1 : c.Length - 3 == 3 ? 3 : c.Length - 3 == 4 ? 4 : c.Length - 3 == 2 ? 2 : 0;
int s20 = s21;
DateTime s19 = s20 == 1 ? c[1].StartDate : s20 == 3 ? c[3].StartDate : s20 == 2 ? c[2].StartDate : s20 == 4 ? c[4].StartDate : s20 == 0 ? c[0].StartDate : default(DateTime);
ulong s18 = 4611686018427387903uL & (13835058055282163712uL ^ s19.dateData);
int s26 = c.Length - 4 >> 1;
int s25 = s26 == 1 ? 1 : s26 == 3 ? 3 : s26 == 4 ? 4 : s26 == 2 ? 2 : 0;
int s24 = s25;
DateTime s23 = s24 == 1 ? c[1].StartDate : s24 == 3 ? c[3].StartDate : s24 == 2 ? c[2].StartDate : s24 == 4 ? c[4].StartDate : s24 == 0 ? c[0].StartDate : default(DateTime);
ulong s22 = 4611686018427387903uL & (13835058055282163712uL ^ s23.dateData);
int s30 = c.Length - 4 == 1 ? 1 : c.Length - 4 == 3 ? 3 : c.Length - 4 == 4 ? 4 : c.Length - 4 == 2 ? 2 : 0;
int s29 = s30;
DateTime s28 = s29 == 1 ? c[1].StartDate : s29 == 3 ? c[3].StartDate : s29 == 2 ? c[2].StartDate : s29 == 4 ? c[4].StartDate : s29 == 0 ? c[0].StartDate : default(DateTime);
ulong s27 = 4611686018427387903uL & (13835058055282163712uL ^ s28.dateData);
int s34 = c.Length - 5 == 1 ? 1 : c.Length - 5 == 3 ? 3 : c.Length - 5 == 4 ? 4 : c.Length - 5 == 2 ? 2 : 0;
int s33 = s34;
DateTime s32 = s33 == 1 ? c[1].StartDate : s33 == 3 ? c[3].StartDate : s33 == 2 ? c[2].StartDate : s33 == 4 ? c[4].StartDate : s33 == 0 ? c[0].StartDate : default(DateTime);
ulong s31 = 4611686018427387903uL & (13835058055282163712uL ^ s32.dateData);
int s38 = 3 + s26 == 1 ? 1 : 3 + s26 == 3 ? 3 : 3 + s26 == 4 ? 4 : 3 + s26 == 2 ? 2 : 0;
int s37 = s38;
DateTime s36 = s37 == 1 ? c[1].StartDate : s37 == 3 ? c[3].StartDate : s37 == 2 ? c[2].StartDate : s37 == 4 ? c[4].StartDate : s37 == 0 ? c[0].StartDate : default(DateTime);
ulong s35 = 4611686018427387903uL & (13835058055282163712uL ^ s36.dateData);
return c != (Chunk[])null && 
       (long)s0 >= (long)s1 && (long)s1 >= (long)s0 && (long)s2 >= (long)s1 && (long)s1 >= (long)s2 && (long)s3 >= (long)s1 && (long)s1 >= (long)s3 && (long)s4 >= (long)s1 && (long)s1 >= (long)s4 && 
                                                                                                                                                                               (long)s2 >= (long)s0 && (long)s0 >= (long)s2 && (long)s3 >= (long)s4 && (long)s4 >= (long)s3 && c.Length == 5 && (long)s0 >= (long)s5 && (long)s5 >= (long)s0 && (long)s2 >= (long)s5 && 
                                                                                                                                                                                                                                                                                                                                                (long)s5 >= (long)s2 && (long)s1 >= (long)s5 && (long)s5 >= (long)s1 && (long)s10 >= (long)s5 && (long)s5 >= (long)s10 && (long)s14 >= (long)s5 && (long)s5 >= (long)s14 && (long)s18 >= (long)s5 && 
long)s5 >= (long)s18 && (long)s0 >= (long)s22 && (long)s22 >= (long)s0 && (long)s27 >= (long)s22 && (long)s22 >= (long)s27 && (long)s31 >= (long)s22 && (long)s22 >= (long)s31 && 
long)s4 >= (long)s35 && (long)s35 >= (long)s4 && (long)s10 >= (long)s35 && (long)s35 >= (long)s10 && (long)s14 >= (long)s35 && (long)s35 >= (long)s14 && datedChunks == (List<Chunk>)null;
]]></pathCondition>
</generatedTest>
<test name="apportion" state="success" duration="0.07"/>
<generatedTest id="d17ca4b5-5ac5-457d-b5f2-5a4c80cb6285" index="11" run="39" exceptionState="unexpected" status="exception" duplicateOf="600000d" failed="true" failureText="Exception not validated by PexAllowedExceptionFromTypeUnderTest(typeof(ArgumentException), AcceptExceptionSubtypes), PexAllowedExceptionFromTypeUnderTest(typeof(InvalidOperationException)), documented, contract requires failure at type-under-test surface." generated="true" assemblyName="emAPI.Tests" name="apportionThrowsNullReferenceException483" token="600000d"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="13" atot="128"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">new ApportionmentManager{}</value>
<value name="datedChunks">null</value>
<value name="dataIn">{new Chunk{StartDate=9999-12-31 23:59:59Z,EndDate=0001-01-01 00:00:00Z,Amount=1}, new Chunk{StartDate=9999-12-31 23:59:59Z,EndDate=0001-01-01 00:00:00Z,Amount=4}, new Chunk{StartDate=9999-12-31 23:59:59Z,EndDate=0001-01-01 00:00:00Z,Amount=3}, new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-01 00:00:00Z,Amount=5}, new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-01 00:00:00Z,Amount=2}}</value>
<code><![CDATA[ApportionmentManager apportionmentManager;
List<Chunk> list;
List<Chunk> list1;
apportionmentManager = new ApportionmentManager();
Chunk[] chunks = new Chunk[5];
Chunk s0 = default(Chunk);
s0.StartDate = new DateTime(4611686018427387903L & -6067993060854775810L, 
                            (DateTimeKind)(12378751012854775806uL >> 62));
s0.EndDate = default(DateTime);
s0.Amount = 1;
chunks[0] = s0;
Chunk s1 = default(Chunk);
s1.StartDate = new DateTime(4611686018427387903L & 3155378975999999998L, 
                            (DateTimeKind)(3155378975999999998uL >> 62));
s1.EndDate = default(DateTime);
s1.Amount = 4;
chunks[1] = s1;
Chunk s2 = default(Chunk);
s2.StartDate = new DateTime(4611686018427387903L & 3155378975999999998L, 
                            (DateTimeKind)(3155378975999999998uL >> 62));
s2.EndDate = default(DateTime);
s2.Amount = 3;
chunks[2] = s2;
Chunk s3 = default(Chunk);
s3.StartDate = default(DateTime);
s3.EndDate = default(DateTime);
s3.Amount = 5;
chunks[3] = s3;
Chunk s4 = default(Chunk);
s4.StartDate = default(DateTime);
s4.EndDate = default(DateTime);
s4.Amount = 2;
chunks[4] = s4;
list = new List<Chunk>((IEnumerable<Chunk>)chunks);
list1 = this.apportion(apportionmentManager, (List<Chunk>)null, list);
]]></code>
<methodCode imports="emAPI.ClassLibrary;System.Collections.Generic;System;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(ApportionmentManagerTest))]
[PexRaisedException(typeof(NullReferenceException))]
public void apportionThrowsNullReferenceException886()
{
    ApportionmentManager apportionmentManager;
    List<Chunk> list;
    List<Chunk> list1;
    apportionmentManager = new ApportionmentManager();
    Chunk[] chunks = new Chunk[5];
    Chunk s0 = default(Chunk);
    s0.StartDate = new DateTime(4611686018427387903L & -6067993060854775810L, 
                                (DateTimeKind)(12378751012854775806uL >> 62));
    s0.EndDate = default(DateTime);
    s0.Amount = 1;
    chunks[0] = s0;
    Chunk s1 = default(Chunk);
    s1.StartDate = new DateTime(4611686018427387903L & 3155378975999999998L, 
                                (DateTimeKind)(3155378975999999998uL >> 62));
    s1.EndDate = default(DateTime);
    s1.Amount = 4;
    chunks[1] = s1;
    Chunk s2 = default(Chunk);
    s2.StartDate = new DateTime(4611686018427387903L & 3155378975999999998L, 
                                (DateTimeKind)(3155378975999999998uL >> 62));
    s2.EndDate = default(DateTime);
    s2.Amount = 3;
    chunks[2] = s2;
    Chunk s3 = default(Chunk);
    s3.StartDate = default(DateTime);
    s3.EndDate = default(DateTime);
    s3.Amount = 5;
    chunks[3] = s3;
    Chunk s4 = default(Chunk);
    s4.StartDate = default(DateTime);
    s4.EndDate = default(DateTime);
    s4.Amount = 2;
    chunks[4] = s4;
    list = new List<Chunk>((IEnumerable<Chunk>)chunks);
    list1 = this.apportion(apportionmentManager, (List<Chunk>)null, list);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="emAPI.Tests" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.Tests.dll"/>
<reference name="emAPI" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.dll"/>
<reference name="emAPI_ClassLibrary" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI_ClassLibrary.dll"/>
<exceptionChain><exception typeDisplayName="NullReferenceException" source="emAPI"><message><![CDATA[Object reference not set to an instance of an object.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="NullReferenceException" token="200011a" namespace="System"/>
</type>
<stackTrace><frame value="  at ApportionmentManager.apportion(List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs(214)" method="ApportionmentManager.apportion(List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" offset="85" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs" line="214"><method assemblyName="emAPI" name="apportion" token="60001f1"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            DateTime maxEnd = dataIn.Last().EndDate;

            ///do the apportioning]]></beforeSource>
<source><![CDATA[            foreach (Chunk datedChunk in datedChunks)]]></source>
<afterSource><![CDATA[            {
                ///list for storing the chunks from dataIn that are relevant to this results chunk
                List<Chunk> relevantChunks = new List<Chunk>();]]></afterSource>
</frame>
<frame value="  at ApportionmentManagerTest.apportion(ApportionmentManager, List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs(38)" method="ApportionmentManagerTest.apportion(ApportionmentManager, List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" offset="4" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs" line="38"><method assemblyName="emAPI.Tests" name="apportion" token="6000002"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            List<Chunk> dataIn
        )
        {]]></beforeSource>
<source><![CDATA[            List<Chunk> result = target.apportion(datedChunks, dataIn);]]></source>
<afterSource><![CDATA[            return result;
            // TODO: add assertions to method ApportionmentManagerTest.apportion(ApportionmentManager, List`1<Chunk>, List`1<Chunk>)
        }]]></afterSource>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<pathAssumption><![CDATA[List<Chunk> s0 = new;
return dataIn == s0 && dataIn != (List<Chunk>)null && target != (ApportionmentManager)null;
]]></pathAssumption>
</generatedTest>
<test name="apportion" state="success" duration="0.03"/>
<test name="apportion" state="success" duration="0.02"/>
<test name="apportion" state="success" duration="0.06"/>
<test name="apportion" state="success" duration="0.02"/>
<test name="apportion" state="success" duration="0.02"/>
<test name="apportion" state="success" duration="0.14"/>
<generatedTest id="a29af77f-1d61-489c-a6c7-851a515e1812" index="12" run="45" status="normaltermination" generated="true" new="true" assemblyName="emAPI.Tests" name="apportion715"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="ffffffff" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="ffffffff" namespace="emAPI.Controllers"/>
</type>
</parameter>
<rcov name="Block" dcov="56" dtot="0" acov="69" atot="128"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">new ApportionmentManager{}</value>
<value name="datedChunks">{new Chunk{StartDate=9999-01-31 16:20:44Z,EndDate=0001-01-01 00:00:00Z,Amount=2}, new Chunk{StartDate=9999-01-31 16:20:44Z,EndDate=0001-01-01 00:00:00Z,Amount=3}, new Chunk{StartDate=9999-01-31 16:20:44Z,EndDate=0001-01-01 00:00:00Z,Amount=1}, new Chunk{StartDate=9998-07-11 18:58:31Z,EndDate=0001-01-01 00:00:00Z,Amount=5}, new Chunk{StartDate=9998-07-11 18:58:31Z,EndDate=0001-01-01 00:00:00Z,Amount=4}}</value>
<value name="dataIn">{new Chunk{StartDate=9999-01-31 16:20:44Z,EndDate=0001-01-01 00:00:00Z,Amount=2}, new Chunk{StartDate=9999-01-31 16:20:44Z,EndDate=0001-01-01 00:00:00Z,Amount=3}, new Chunk{StartDate=9999-01-31 16:20:44Z,EndDate=0001-01-01 00:00:00Z,Amount=1}, new Chunk{StartDate=9998-07-11 18:58:31Z,EndDate=0001-01-01 00:00:00Z,Amount=5}, new Chunk{StartDate=9998-07-11 18:58:31Z,EndDate=0001-01-01 00:00:00Z,Amount=4}}</value>
<value name="result(target)">new ApportionmentManager{}</value>
<value name="result">{}</value>
<code><![CDATA[ApportionmentManager apportionmentManager;
List<Chunk> list;
List<Chunk> list1;
apportionmentManager = new ApportionmentManager();
Chunk[] chunks = new Chunk[5];
Chunk s0 = default(Chunk);
s0.StartDate = new DateTime(4611686018427387903L & 3155090124447490815L, 
                            (DateTimeKind)(3155090124447490815uL >> 62));
s0.EndDate = default(DateTime);
s0.Amount = 2;
chunks[0] = s0;
Chunk s1 = default(Chunk);
s1.StartDate = new DateTime(4611686018427387903L & 3155090124447490815L, 
                            (DateTimeKind)(3155090124447490815uL >> 62));
s1.EndDate = default(DateTime);
s1.Amount = 3;
chunks[1] = s1;
Chunk s2 = default(Chunk);
s2.StartDate = new DateTime(4611686018427387903L & 3155090124447490815L, 
                            (DateTimeKind)(3155090124447490815uL >> 62));
s2.EndDate = default(DateTime);
s2.Amount = 1;
chunks[2] = s2;
Chunk s3 = default(Chunk);
s3.StartDate = new DateTime(4611686018427387903L & 3154913963112081406L, 
                            (DateTimeKind)(3154913963112081406uL >> 62));
s3.EndDate = default(DateTime);
s3.Amount = 5;
chunks[3] = s3;
Chunk s4 = default(Chunk);
s4.StartDate = new DateTime(4611686018427387903L & 7766599981539469310L, 
                            (DateTimeKind)(7766599981539469310uL >> 62));
s4.EndDate = default(DateTime);
s4.Amount = 4;
chunks[4] = s4;
list = new List<Chunk>((IEnumerable<Chunk>)chunks);
list1 = this.apportion(apportionmentManager, list, list);
Assert.IsNotNull((object)list1);
Assert.AreEqual<int>(0, list1.Capacity);
Assert.AreEqual<int>(0, list1.Count);
Assert.IsNotNull((object)apportionmentManager);
]]></code>
<methodCode imports="emAPI.ClassLibrary;System.Collections.Generic;System;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(ApportionmentManagerTest))]
public void apportion715()
{
    ApportionmentManager apportionmentManager;
    List<Chunk> list;
    List<Chunk> list1;
    apportionmentManager = new ApportionmentManager();
    Chunk[] chunks = new Chunk[5];
    Chunk s0 = default(Chunk);
    s0.StartDate = new DateTime(4611686018427387903L & 3155090124447490815L, 
                                (DateTimeKind)(3155090124447490815uL >> 62));
    s0.EndDate = default(DateTime);
    s0.Amount = 2;
    chunks[0] = s0;
    Chunk s1 = default(Chunk);
    s1.StartDate = new DateTime(4611686018427387903L & 3155090124447490815L, 
                                (DateTimeKind)(3155090124447490815uL >> 62));
    s1.EndDate = default(DateTime);
    s1.Amount = 3;
    chunks[1] = s1;
    Chunk s2 = default(Chunk);
    s2.StartDate = new DateTime(4611686018427387903L & 3155090124447490815L, 
                                (DateTimeKind)(3155090124447490815uL >> 62));
    s2.EndDate = default(DateTime);
    s2.Amount = 1;
    chunks[2] = s2;
    Chunk s3 = default(Chunk);
    s3.StartDate = new DateTime(4611686018427387903L & 3154913963112081406L, 
                                (DateTimeKind)(3154913963112081406uL >> 62));
    s3.EndDate = default(DateTime);
    s3.Amount = 5;
    chunks[3] = s3;
    Chunk s4 = default(Chunk);
    s4.StartDate = new DateTime(4611686018427387903L & 7766599981539469310L, 
                                (DateTimeKind)(7766599981539469310uL >> 62));
    s4.EndDate = default(DateTime);
    s4.Amount = 4;
    chunks[4] = s4;
    list = new List<Chunk>((IEnumerable<Chunk>)chunks);
    list1 = this.apportion(apportionmentManager, list, list);
    Assert.IsNotNull((object)list1);
    Assert.AreEqual<int>(0, list1.Capacity);
    Assert.AreEqual<int>(0, list1.Count);
    Assert.IsNotNull((object)apportionmentManager);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="emAPI.Tests" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.Tests.dll"/>
<reference name="emAPI" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.dll"/>
<reference name="emAPI_ClassLibrary" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI_ClassLibrary.dll"/>
<pathAssumption><![CDATA[List<Chunk> s0 = new;
return dataIn == s0 && dataIn != (List<Chunk>)null && target != (ApportionmentManager)null;
]]></pathAssumption>
</generatedTest>
<log level="message" time="2012-09-03 11:38:12Z" category="coverage" message="coverage increased from 13 to 69 blocks (+56) after flipping emAPI.Controllers.ApportionmentManager.apportion at 0x0055"/>
<log level="message" time="2012-09-03 11:38:14Z" category="progress" message="   45 runs (71.11 % unique paths, 24.44 % retries), 69/128 blocks covered"/>
<uninstrumented limitation="true" description="floating point multiplication" methodDisplayName="System.Void Microsoft.Pex.Engine.Symbols.__LimitationsHelper.floating_point_multiplication()" declaringTypeDisplayName="Microsoft.Pex.Engine.Symbols.__LimitationsHelper" methodShortDisplayName="__LimitationsHelper.floating_point_multiplication()" wikiTopic="Limitation"><method><definition assemblyName="Microsoft.Pex.Framework" name="floating_point_multiplication" static="true" token="6000a8c"><declaringType assemblyName="Microsoft.Pex.Framework" name="__LimitationsHelper" token="200020f" namespace="Microsoft.Pex.Engine.Symbols"/>
</definition>
</method>
<stackTrace><frame value="  at ApportionmentManager.apportion(List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs(224)" method="ApportionmentManager.apportion(List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" offset="348" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs" line="224"><method assemblyName="emAPI" name="apportion" token="60001f1"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[                double periodLength = 0;

                ///get all relevant chunks in the dataIn list that lie within the date boundaries of this chunk of the results list]]></beforeSource>
<source><![CDATA[                foreach (Chunk chunk in dataIn)]]></source>
<afterSource><![CDATA[                {

                    ///track average daily amount to fill in gaps in 'backwards' apportionment (ie where interval < time between reads)]]></afterSource>
</frame>
<frame value="  at ApportionmentManagerTest.apportion(ApportionmentManager, List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs(38)" method="ApportionmentManagerTest.apportion(ApportionmentManager, List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" offset="4" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs" line="38"><method assemblyName="emAPI.Tests" name="apportion" token="6000002"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            List<Chunk> dataIn
        )
        {]]></beforeSource>
<source><![CDATA[            List<Chunk> result = target.apportion(datedChunks, dataIn);]]></source>
<afterSource><![CDATA[            return result;
            // TODO: add assertions to method ApportionmentManagerTest.apportion(ApportionmentManager, List`1<Chunk>, List`1<Chunk>)
        }]]></afterSource>
</frame>
</stackTrace>
</uninstrumented>
<uninstrumented limitation="true" description="floating point conversion" methodDisplayName="System.Void Microsoft.Pex.Engine.Symbols.__LimitationsHelper.floating_point_conversion()" declaringTypeDisplayName="Microsoft.Pex.Engine.Symbols.__LimitationsHelper" methodShortDisplayName="__LimitationsHelper.floating_point_conversion()" wikiTopic="Limitation"><method><definition assemblyName="Microsoft.Pex.Framework" name="floating_point_conversion" static="true" token="6000a8f"><declaringType assemblyName="Microsoft.Pex.Framework" name="__LimitationsHelper" token="200020f" namespace="Microsoft.Pex.Engine.Symbols"/>
</definition>
</method>
<stackTrace><frame value="  at ApportionmentManager.apportion(List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs(224)" method="ApportionmentManager.apportion(List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" offset="348" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs" line="224"><method assemblyName="emAPI" name="apportion" token="60001f1"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[                double periodLength = 0;

                ///get all relevant chunks in the dataIn list that lie within the date boundaries of this chunk of the results list]]></beforeSource>
<source><![CDATA[                foreach (Chunk chunk in dataIn)]]></source>
<afterSource><![CDATA[                {

                    ///track average daily amount to fill in gaps in 'backwards' apportionment (ie where interval < time between reads)]]></afterSource>
</frame>
<frame value="  at ApportionmentManagerTest.apportion(ApportionmentManager, List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs(38)" method="ApportionmentManagerTest.apportion(ApportionmentManager, List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" offset="4" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs" line="38"><method assemblyName="emAPI.Tests" name="apportion" token="6000002"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            List<Chunk> dataIn
        )
        {]]></beforeSource>
<source><![CDATA[            List<Chunk> result = target.apportion(datedChunks, dataIn);]]></source>
<afterSource><![CDATA[            return result;
            // TODO: add assertions to method ApportionmentManagerTest.apportion(ApportionmentManager, List`1<Chunk>, List`1<Chunk>)
        }]]></afterSource>
</frame>
</stackTrace>
</uninstrumented>
<uninstrumented testability="true" description="floating point equality" methodDisplayName="System.Void Microsoft.Pex.Engine.Symbols.__TestabilityHelper.floating_point_equality()" declaringTypeDisplayName="Microsoft.Pex.Engine.Symbols.__TestabilityHelper" methodShortDisplayName="__TestabilityHelper.floating_point_equality()" wikiTopic="Testability Issue"><method><definition assemblyName="Microsoft.Pex.Framework" name="floating_point_equality" static="true" token="600111f"><declaringType assemblyName="Microsoft.Pex.Framework" name="__TestabilityHelper" token="200032b" namespace="Microsoft.Pex.Engine.Symbols"/>
</definition>
</method>
<stackTrace><frame value="  at ApportionmentManager.apportion(List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs(214)" method="ApportionmentManager.apportion(List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" offset="798" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI\Controllers\ApportionmentManager.cs" line="214"><method assemblyName="emAPI" name="apportion" token="60001f1"><declaringType assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            DateTime maxEnd = dataIn.Last().EndDate;

            ///do the apportioning]]></beforeSource>
<source><![CDATA[            foreach (Chunk datedChunk in datedChunks)]]></source>
<afterSource><![CDATA[            {
                ///list for storing the chunks from dataIn that are relevant to this results chunk
                List<Chunk> relevantChunks = new List<Chunk>();]]></afterSource>
</frame>
<frame value="  at ApportionmentManagerTest.apportion(ApportionmentManager, List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;) in C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs(38)" method="ApportionmentManagerTest.apportion(ApportionmentManager, List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" offset="4" file="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\ApportionmentManagerTest.cs" line="38"><method assemblyName="emAPI.Tests" name="apportion" token="6000002"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            List<Chunk> dataIn
        )
        {]]></beforeSource>
<source><![CDATA[            List<Chunk> result = target.apportion(datedChunks, dataIn);]]></source>
<afterSource><![CDATA[            return result;
            // TODO: add assertions to method ApportionmentManagerTest.apportion(ApportionmentManager, List`1<Chunk>, List`1<Chunk>)
        }]]></afterSource>
</frame>
</stackTrace>
</uninstrumented>
<test name="apportion" state="success" duration="0.16"/>
<generatedTest id="07676f0f-db61-4601-84e3-c2b3091ae2e5" index="13" run="46" status="normaltermination" generated="true" new="true" assemblyName="emAPI.Tests" name="apportion815"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="ffffffff" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="ffffffff" namespace="emAPI.Controllers"/>
</type>
</parameter>
<rcov name="Block" dcov="22" dtot="0" acov="91" atot="128"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">new ApportionmentManager{}</value>
<value name="datedChunks">{new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-01 00:00:00Z,Amount=4}, new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-01 00:00:00Z,Amount=2}, new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-01 00:00:00Z,Amount=5}, new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=1827-09-25 22:40:30Z,Amount=3}, new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-01 00:00:00Z,Amount=1}}</value>
<value name="dataIn">{new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-01 00:00:00Z,Amount=4}, new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-01 00:00:00Z,Amount=2}, new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-01 00:00:00Z,Amount=5}, new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=1827-09-25 22:40:30Z,Amount=3}, new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-01 00:00:00Z,Amount=1}}</value>
<value name="result(target)">new ApportionmentManager{}</value>
<value name="result">{new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-01 00:00:00Z,Amount=-2.60208889868107E-17}, new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-01 00:00:00Z,Amount=-2.60208889868107E-17}, new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-01 00:00:00Z,Amount=-2.60208889868107E-17}, new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=1827-09-25 22:40:30Z,Amount=15}, new Chunk{StartDate=0001-01-01 00:00:00Z,EndDate=0001-01-01 00:00:00Z,Amount=15}}</value>
<code><![CDATA[ApportionmentManager apportionmentManager;
List<Chunk> list;
List<Chunk> list1;
apportionmentManager = new ApportionmentManager();
Chunk[] chunks = new Chunk[5];
Chunk s0 = default(Chunk);
s0.StartDate =
  new DateTime(4611686018427387903L & 1L, (DateTimeKind)(1uL >> 62));
s0.EndDate = default(DateTime);
s0.Amount = 4;
chunks[0] = s0;
Chunk s1 = default(Chunk);
s1.StartDate =
  new DateTime(4611686018427387903L & 1L, (DateTimeKind)(1uL >> 62));
s1.EndDate = default(DateTime);
s1.Amount = 2;
chunks[1] = s1;
Chunk s2 = default(Chunk);
s2.StartDate =
  new DateTime(4611686018427387903L & 1L, (DateTimeKind)(1uL >> 62));
s2.EndDate = default(DateTime);
s2.Amount = 5;
chunks[2] = s2;
Chunk s3 = default(Chunk);
s3.StartDate = default(DateTime);
s3.EndDate = new DateTime(4611686018427387903L & 576460752303423488L, 
                          (DateTimeKind)(576460752303423488uL >> 62));
s3.Amount = 3;
chunks[3] = s3;
Chunk s4 = default(Chunk);
s4.StartDate = default(DateTime);
s4.EndDate = default(DateTime);
s4.Amount = 1;
chunks[4] = s4;
list = new List<Chunk>((IEnumerable<Chunk>)chunks);
list1 = this.apportion(apportionmentManager, list, list);
Assert.IsNotNull((object)list1);
Assert.AreEqual<int>(8, list1.Capacity);
Assert.AreEqual<int>(5, list1.Count);
Assert.IsNotNull((object)apportionmentManager);
]]></code>
<methodCode imports="emAPI.ClassLibrary;System.Collections.Generic;System;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(ApportionmentManagerTest))]
public void apportion815()
{
    ApportionmentManager apportionmentManager;
    List<Chunk> list;
    List<Chunk> list1;
    apportionmentManager = new ApportionmentManager();
    Chunk[] chunks = new Chunk[5];
    Chunk s0 = default(Chunk);
    s0.StartDate =
      new DateTime(4611686018427387903L & 1L, (DateTimeKind)(1uL >> 62));
    s0.EndDate = default(DateTime);
    s0.Amount = 4;
    chunks[0] = s0;
    Chunk s1 = default(Chunk);
    s1.StartDate =
      new DateTime(4611686018427387903L & 1L, (DateTimeKind)(1uL >> 62));
    s1.EndDate = default(DateTime);
    s1.Amount = 2;
    chunks[1] = s1;
    Chunk s2 = default(Chunk);
    s2.StartDate =
      new DateTime(4611686018427387903L & 1L, (DateTimeKind)(1uL >> 62));
    s2.EndDate = default(DateTime);
    s2.Amount = 5;
    chunks[2] = s2;
    Chunk s3 = default(Chunk);
    s3.StartDate = default(DateTime);
    s3.EndDate = new DateTime(4611686018427387903L & 576460752303423488L, 
                              (DateTimeKind)(576460752303423488uL >> 62));
    s3.Amount = 3;
    chunks[3] = s3;
    Chunk s4 = default(Chunk);
    s4.StartDate = default(DateTime);
    s4.EndDate = default(DateTime);
    s4.Amount = 1;
    chunks[4] = s4;
    list = new List<Chunk>((IEnumerable<Chunk>)chunks);
    list1 = this.apportion(apportionmentManager, list, list);
    Assert.IsNotNull((object)list1);
    Assert.AreEqual<int>(8, list1.Capacity);
    Assert.AreEqual<int>(5, list1.Count);
    Assert.IsNotNull((object)apportionmentManager);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="emAPI.Tests" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.Tests.dll"/>
<reference name="emAPI" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI.dll"/>
<reference name="emAPI_ClassLibrary" location="C:\Users\David Sauntson\Documents\Project Codes\emAPI\emAPI\emAPI.Tests\bin\Debug\emAPI_ClassLibrary.dll"/>
<pathAssumption><![CDATA[List<Chunk> s0 = new;
return dataIn == s0 && dataIn != (List<Chunk>)null && target != (ApportionmentManager)null;
]]></pathAssumption>
</generatedTest>
<log level="message" time="2012-09-03 11:38:14Z" category="coverage" message="coverage increased from 69 to 91 blocks (+22) after flipping emAPI.Controllers.ApportionmentManager.apportion at 0x011d"/>
<boundary kind="maxconstraintsolvertime" value="4s" message="constraint solver time out after 4 seconds"><update kind="AddOrUpdateAttributeCodeUpdate" name="Set MaxConstraintSolverTime=8" update="true"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e51"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexMethodAttribute" token="200027f" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexMethodAttribute" token="200027f" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="I4Expression" value="8"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</value>
<property><definition assemblyName="Microsoft.Pex.Framework" name="MaxConstraintSolverTime" token="1700034c"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexSettingsAttributeBase" token="2000273" namespace="Microsoft.Pex.Framework.Settings"/>
<propertyType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</propertyType>
</definition>
</property>
</argument>
<target><method><definition assemblyName="emAPI.Tests" name="apportion" token="6000002"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</definition>
</method>
</target>
</update>
</boundary>
<boundary kind="maxconstraintsolvertime" value="4s" message="constraint solver time out after 4 seconds"><update kind="AddOrUpdateAttributeCodeUpdate" name="Set MaxConstraintSolverTime=8" update="true"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e51"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexMethodAttribute" token="200027f" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexMethodAttribute" token="200027f" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="I4Expression" value="8"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</value>
<property><definition assemblyName="Microsoft.Pex.Framework" name="MaxConstraintSolverTime" token="1700034c"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexSettingsAttributeBase" token="2000273" namespace="Microsoft.Pex.Framework.Settings"/>
<propertyType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</propertyType>
</definition>
</property>
</argument>
<target><method><definition assemblyName="emAPI.Tests" name="apportion" token="6000002"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</definition>
</method>
</target>
</update>
</boundary>
<log level="message" time="2012-09-03 11:38:22Z" category="progress" message="  189 constraint systems (31.22 % solved, 67.72 % proven unsatisfiable, 1.06 % timed out)"/>
<test name="apportion" state="success" duration="0.02"/>
<log level="message" time="2012-09-03 11:38:30Z" category="progress" message="   47 runs (70.21 % unique paths, 23.40 % retries), 91/128 blocks covered"/>
<test name="apportion" state="success" duration="0.02"/>
<log level="message" time="2012-09-03 11:38:39Z" category="progress" message="  193 constraint systems (31.61 % solved, 67.36 % proven unsatisfiable, 1.04 % timed out)"/>
<boundary kind="maxconstraintsolvertime" value="4s" message="constraint solver time out after 4 seconds"><update kind="AddOrUpdateAttributeCodeUpdate" name="Set MaxConstraintSolverTime=8" update="true"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e51"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexMethodAttribute" token="200027f" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexMethodAttribute" token="200027f" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="I4Expression" value="8"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</value>
<property><definition assemblyName="Microsoft.Pex.Framework" name="MaxConstraintSolverTime" token="1700034c"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexSettingsAttributeBase" token="2000273" namespace="Microsoft.Pex.Framework.Settings"/>
<propertyType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</propertyType>
</definition>
</property>
</argument>
<target><method><definition assemblyName="emAPI.Tests" name="apportion" token="6000002"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</definition>
</method>
</target>
</update>
</boundary>
<log level="message" time="2012-09-03 11:38:53Z" category="progress" message="  199 constraint systems (31.66 % solved, 66.83 % proven unsatisfiable, 1.51 % timed out), flipping location ApportionmentManager.apportion(List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;) at 0x02c7 took 11s (21.60 %)"/>
<boundary kind="maxconstraintsolvertime" value="4s" message="constraint solver time out after 4 seconds"><update kind="AddOrUpdateAttributeCodeUpdate" name="Set MaxConstraintSolverTime=8" update="true"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e51"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexMethodAttribute" token="200027f" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexMethodAttribute" token="200027f" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="I4Expression" value="8"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</value>
<property><definition assemblyName="Microsoft.Pex.Framework" name="MaxConstraintSolverTime" token="1700034c"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexSettingsAttributeBase" token="2000273" namespace="Microsoft.Pex.Framework.Settings"/>
<propertyType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</propertyType>
</definition>
</property>
</argument>
<target><method><definition assemblyName="emAPI.Tests" name="apportion" token="6000002"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</definition>
</method>
</target>
</update>
</boundary>
<boundary kind="maxconstraintsolvertime" value="4s" message="constraint solver time out after 4 seconds"><update kind="AddOrUpdateAttributeCodeUpdate" name="Set MaxConstraintSolverTime=8" update="true"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e51"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexMethodAttribute" token="200027f" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexMethodAttribute" token="200027f" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="I4Expression" value="8"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</value>
<property><definition assemblyName="Microsoft.Pex.Framework" name="MaxConstraintSolverTime" token="1700034c"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexSettingsAttributeBase" token="2000273" namespace="Microsoft.Pex.Framework.Settings"/>
<propertyType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</propertyType>
</definition>
</property>
</argument>
<target><method><definition assemblyName="emAPI.Tests" name="apportion" token="6000002"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</definition>
</method>
</target>
</update>
</boundary>
<log level="message" time="2012-09-03 11:39:01Z" category="progress" message="   48 runs (68.75 % unique paths, 22.92 % retries), 91/128 blocks covered"/>
<test name="apportion" state="success" duration="0.03"/>
<test name="apportion" state="success" duration="0.02"/>
<test name="apportion" state="success" duration="0.06"/>
<log level="message" time="2012-09-03 11:39:10Z" category="progress" message="  218 constraint systems (30.73 % solved, 66.97 % proven unsatisfiable, 2.29 % timed out), flipping location ApportionmentManager.apportion(List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;) at 0x02c7 took 15s (22.11 %)"/>
<boundary kind="maxconstraintsolvertime" value="4s" message="constraint solver time out after 4 seconds"><update kind="AddOrUpdateAttributeCodeUpdate" name="Set MaxConstraintSolverTime=8" update="true"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e51"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexMethodAttribute" token="200027f" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexMethodAttribute" token="200027f" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="I4Expression" value="8"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</value>
<property><definition assemblyName="Microsoft.Pex.Framework" name="MaxConstraintSolverTime" token="1700034c"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexSettingsAttributeBase" token="2000273" namespace="Microsoft.Pex.Framework.Settings"/>
<propertyType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</propertyType>
</definition>
</property>
</argument>
<target><method><definition assemblyName="emAPI.Tests" name="apportion" token="6000002"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</definition>
</method>
</target>
</update>
</boundary>
<boundary kind="maxconstraintsolvertime" value="4s" message="constraint solver time out after 4 seconds"><update kind="AddOrUpdateAttributeCodeUpdate" name="Set MaxConstraintSolverTime=8" update="true"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e51"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexMethodAttribute" token="200027f" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexMethodAttribute" token="200027f" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="I4Expression" value="8"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</value>
<property><definition assemblyName="Microsoft.Pex.Framework" name="MaxConstraintSolverTime" token="1700034c"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexSettingsAttributeBase" token="2000273" namespace="Microsoft.Pex.Framework.Settings"/>
<propertyType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</propertyType>
</definition>
</property>
</argument>
<target><method><definition assemblyName="emAPI.Tests" name="apportion" token="6000002"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</definition>
</method>
</target>
</update>
</boundary>
<test name="apportion" state="success" duration="0.02"/>
<test name="apportion" state="success" duration="0.06"/>
<boundary kind="maxconstraintsolvertime" value="4s" message="constraint solver time out after 4 seconds"><update kind="AddOrUpdateAttributeCodeUpdate" name="Set MaxConstraintSolverTime=8" update="true"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e51"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexMethodAttribute" token="200027f" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexMethodAttribute" token="200027f" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="I4Expression" value="8"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</value>
<property><definition assemblyName="Microsoft.Pex.Framework" name="MaxConstraintSolverTime" token="1700034c"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexSettingsAttributeBase" token="2000273" namespace="Microsoft.Pex.Framework.Settings"/>
<propertyType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</propertyType>
</definition>
</property>
</argument>
<target><method><definition assemblyName="emAPI.Tests" name="apportion" token="6000002"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</definition>
</method>
</target>
</update>
</boundary>
<boundary kind="maxconstraintsolvertime" value="4s" message="constraint solver time out after 4 seconds"><update kind="AddOrUpdateAttributeCodeUpdate" name="Set MaxConstraintSolverTime=8" update="true"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e51"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexMethodAttribute" token="200027f" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexMethodAttribute" token="200027f" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="I4Expression" value="8"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</value>
<property><definition assemblyName="Microsoft.Pex.Framework" name="MaxConstraintSolverTime" token="1700034c"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexSettingsAttributeBase" token="2000273" namespace="Microsoft.Pex.Framework.Settings"/>
<propertyType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</propertyType>
</definition>
</property>
</argument>
<target><method><definition assemblyName="emAPI.Tests" name="apportion" token="6000002"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</definition>
</method>
</target>
</update>
</boundary>
<log level="message" time="2012-09-03 11:39:27Z" category="progress" message="  226 constraint systems (30.53 % solved, 65.49 % proven unsatisfiable, 3.98 % timed out)"/>
<boundary kind="maxconstraintsolvertime" value="4s" message="constraint solver time out after 4 seconds"><update kind="AddOrUpdateAttributeCodeUpdate" name="Set MaxConstraintSolverTime=8" update="true"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e51"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexMethodAttribute" token="200027f" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexMethodAttribute" token="200027f" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="I4Expression" value="8"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</value>
<property><definition assemblyName="Microsoft.Pex.Framework" name="MaxConstraintSolverTime" token="1700034c"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexSettingsAttributeBase" token="2000273" namespace="Microsoft.Pex.Framework.Settings"/>
<propertyType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</propertyType>
</definition>
</property>
</argument>
<target><method><definition assemblyName="emAPI.Tests" name="apportion" token="6000002"><declaringType assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="emAPI.Tests" name="ApportionmentManagerTest" token="2000002" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="emAPI" name="ApportionmentManager" token="2000019" namespace="emAPI.Controllers"/>
</type>
</parameter>
<parameter name="datedChunks" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="dataIn" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="List`1" token="200036d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="emAPI_ClassLibrary" valueType="true" name="Chunk" token="2000016" namespace="emAPI.ClassLibrary"/>
</genericTypeArgument>
</resultType>
</definition>
</method>
</target>
</update>
</boundary>
<coverage domain="usercodeundertest" unit="block" covered="91" total="128" coveredRatio="0.7109375"/>
<sourceCoverage xml="cov\e305\cov.xml" html="cov\e305\cov.html"/>
<result name="apportion(ApportionmentManager, List`1&lt;Chunk&gt;, List`1&lt;Chunk&gt;)" state="success" duration="101.672936714024"/>
<duration start="2012-09-03 11:37:50Z" end="2012-09-03 11:39:32Z" seconds="101.705308"/>
<trajectory><image src="fix\emapicontrollers634822727721330039.trajectories.png" width="800" height="1600"/>
</trajectory>
</exploration>
<coverage domain="usercodeundertest" unit="block" covered="91" total="128" coveredRatio="0.7109375"/>
<sourceCoverage xml="cov\t100\cov.xml" html="cov\t100\cov.html"/>
<duration start="2012-09-03 11:37:50Z" end="2012-09-03 11:39:32Z" seconds="101.839298"/>
</fixture>
<coverage domain="usercodeundertest" unit="block" covered="91" total="128" coveredRatio="0.7109375"/>
<sourceCoverage xml="cov\a58675145\cov.xml" html="cov\a58675145\cov.html"/>
<duration start="2012-09-03 11:37:50Z" end="2012-09-03 11:39:32Z" seconds="101.949886"/>
<frameTreeRef exceptionCount="3"/>
</assembly>
<duration start="2012-09-03 11:37:49Z" end="2012-09-03 11:39:32Z" seconds="102.493484"/>
<background/>
</pex>
